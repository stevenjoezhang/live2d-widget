{"version":3,"file":"index.js","sources":["../../build/cubism2/Live2DFramework.js","../../build/cubism2/LAppDefine.js","../../build/cubism2/utils/MatrixStack.js","../../build/cubism2/utils/ModelSettingJson.js","../../build/cubism2/LAppModel.js","../../build/cubism2/PlatformManager.js","../../build/cubism2/LAppLive2DManager.js","../../build/cubism2/index.js"],"sourcesContent":["import logger from '../logger.js';\nclass L2DBaseModel {\n    constructor() {\n        this.live2DModel = null;\n        this.modelMatrix = null;\n        this.eyeBlink = null;\n        this.physics = null;\n        this.pose = null;\n        this.initialized = false;\n        this.updating = false;\n        this.alpha = 1;\n        this.accAlpha = 0;\n        this.lipSync = false;\n        this.lipSyncValue = 0;\n        this.accelX = 0;\n        this.accelY = 0;\n        this.accelZ = 0;\n        this.dragX = 0;\n        this.dragY = 0;\n        this.startTimeMSec = null;\n        this.mainMotionManager = new L2DMotionManager();\n        this.expressionManager = new L2DMotionManager();\n        this.motions = {};\n        this.expressions = {};\n        this.isTexLoaded = false;\n    }\n    getModelMatrix() {\n        return this.modelMatrix;\n    }\n    setAlpha(a) {\n        if (a > 0.999)\n            a = 1;\n        if (a < 0.001)\n            a = 0;\n        this.alpha = a;\n    }\n    getAlpha() {\n        return this.alpha;\n    }\n    isInitialized() {\n        return this.initialized;\n    }\n    setInitialized(v) {\n        this.initialized = v;\n    }\n    isUpdating() {\n        return this.updating;\n    }\n    setUpdating(v) {\n        this.updating = v;\n    }\n    getLive2DModel() {\n        return this.live2DModel;\n    }\n    setLipSync(v) {\n        this.lipSync = v;\n    }\n    setLipSyncValue(v) {\n        this.lipSyncValue = v;\n    }\n    setAccel(x, y, z) {\n        this.accelX = x;\n        this.accelY = y;\n        this.accelZ = z;\n    }\n    setDrag(x, y) {\n        this.dragX = x;\n        this.dragY = y;\n    }\n    getMainMotionManager() {\n        return this.mainMotionManager;\n    }\n    getExpressionManager() {\n        return this.expressionManager;\n    }\n    loadModelData(path, callback) {\n        const pm = Live2DFramework.getPlatformManager();\n        logger.info('Load model : ' + path);\n        pm.loadLive2DModel(path, (l2dModel) => {\n            this.live2DModel = l2dModel;\n            this.live2DModel.saveParam();\n            const _err = Live2D.getError();\n            if (_err != 0) {\n                logger.error('Error : Failed to loadModelData().');\n                return;\n            }\n            this.modelMatrix = new L2DModelMatrix(this.live2DModel.getCanvasWidth(), this.live2DModel.getCanvasHeight());\n            this.modelMatrix.setWidth(2);\n            this.modelMatrix.setCenterPosition(0, 0);\n            callback(this.live2DModel);\n        });\n    }\n    loadTexture(no, path, callback) {\n        texCounter++;\n        const pm = Live2DFramework.getPlatformManager();\n        logger.info('Load Texture : ' + path);\n        pm.loadTexture(this.live2DModel, no, path, () => {\n            texCounter--;\n            if (texCounter == 0)\n                this.isTexLoaded = true;\n            if (typeof callback == 'function')\n                callback();\n        });\n    }\n    loadMotion(name, path, callback) {\n        const pm = Live2DFramework.getPlatformManager();\n        logger.trace('Load Motion : ' + path);\n        let motion = null;\n        pm.loadBytes(path, (buf) => {\n            motion = Live2DMotion.loadMotion(buf);\n            if (name != null) {\n                this.motions[name] = motion;\n            }\n            callback(motion);\n        });\n    }\n    loadExpression(name, path, callback) {\n        const pm = Live2DFramework.getPlatformManager();\n        logger.trace('Load Expression : ' + path);\n        pm.loadBytes(path, (buf) => {\n            if (name != null) {\n                this.expressions[name] = L2DExpressionMotion.loadJson(buf);\n            }\n            if (typeof callback == 'function')\n                callback();\n        });\n    }\n    loadPose(path, callback) {\n        const pm = Live2DFramework.getPlatformManager();\n        logger.trace('Load Pose : ' + path);\n        try {\n            pm.loadBytes(path, (buf) => {\n                this.pose = L2DPose.load(buf);\n                if (typeof callback == 'function')\n                    callback();\n            });\n        }\n        catch (e) {\n            logger.warn(e);\n        }\n    }\n    loadPhysics(path) {\n        const pm = Live2DFramework.getPlatformManager();\n        logger.trace('Load Physics : ' + path);\n        try {\n            pm.loadBytes(path, (buf) => {\n                this.physics = L2DPhysics.load(buf);\n            });\n        }\n        catch (e) {\n            logger.warn(e);\n        }\n    }\n    hitTestSimple(drawID, testX, testY) {\n        const drawIndex = this.live2DModel.getDrawDataIndex(drawID);\n        if (drawIndex < 0)\n            return false;\n        const points = this.live2DModel.getTransformedPoints(drawIndex);\n        let left = this.live2DModel.getCanvasWidth();\n        let right = 0;\n        let top = this.live2DModel.getCanvasHeight();\n        let bottom = 0;\n        for (let j = 0; j < points.length; j = j + 2) {\n            const x = points[j];\n            const y = points[j + 1];\n            if (x < left)\n                left = x;\n            if (x > right)\n                right = x;\n            if (y < top)\n                top = y;\n            if (y > bottom)\n                bottom = y;\n        }\n        const tx = this.modelMatrix.invertTransformX(testX);\n        const ty = this.modelMatrix.invertTransformY(testY);\n        return left <= tx && tx <= right && top <= ty && ty <= bottom;\n    }\n}\nlet texCounter = 0;\nclass L2DExpressionMotion extends AMotion {\n    constructor() {\n        super();\n        this.paramList = [];\n    }\n    static loadJson(buf) {\n        const ret = new L2DExpressionMotion();\n        const pm = Live2DFramework.getPlatformManager();\n        const json = pm.jsonParseFromBytes(buf);\n        ret.setFadeIn(parseInt(json.fade_in) > 0 ? parseInt(json.fade_in) : 1000);\n        ret.setFadeOut(parseInt(json.fade_out) > 0 ? parseInt(json.fade_out) : 1000);\n        if (json.params == null) {\n            return ret;\n        }\n        const params = json.params;\n        const paramNum = params.length;\n        ret.paramList = [];\n        for (let i = 0; i < paramNum; i++) {\n            const param = params[i];\n            const paramID = param.id.toString();\n            let value = parseFloat(param.val);\n            let calcTypeInt = L2DExpressionMotion.TYPE_ADD;\n            const calc = param.calc != null ? param.calc.toString() : 'add';\n            if (calc === 'add') {\n                calcTypeInt = L2DExpressionMotion.TYPE_ADD;\n            }\n            else if (calc === 'mult') {\n                calcTypeInt = L2DExpressionMotion.TYPE_MULT;\n            }\n            else if (calc === 'set') {\n                calcTypeInt = L2DExpressionMotion.TYPE_SET;\n            }\n            else {\n                calcTypeInt = L2DExpressionMotion.TYPE_ADD;\n            }\n            if (calcTypeInt == L2DExpressionMotion.TYPE_ADD) {\n                let defaultValue = param.def == null ? 0 : parseFloat(param.def);\n                value = value - defaultValue;\n            }\n            else if (calcTypeInt == L2DExpressionMotion.TYPE_MULT) {\n                let defaultValue = param.def == null ? 1 : parseFloat(param.def);\n                if (defaultValue == 0)\n                    defaultValue = 1;\n                value = value / defaultValue;\n            }\n            const item = new L2DExpressionParam();\n            item.id = paramID;\n            item.type = calcTypeInt;\n            item.value = value;\n            ret.paramList.push(item);\n        }\n        return ret;\n    }\n    updateParamExe(model, timeMSec, weight, motionQueueEnt) {\n        for (let i = this.paramList.length - 1; i >= 0; --i) {\n            const param = this.paramList[i];\n            if (param.type == L2DExpressionMotion.TYPE_ADD) {\n                model.addToParamFloat(param.id, param.value, weight);\n            }\n            else if (param.type == L2DExpressionMotion.TYPE_MULT) {\n                model.multParamFloat(param.id, param.value, weight);\n            }\n            else if (param.type == L2DExpressionMotion.TYPE_SET) {\n                model.setParamFloat(param.id, param.value, weight);\n            }\n        }\n    }\n}\nL2DExpressionMotion.EXPRESSION_DEFAULT = 'DEFAULT';\nL2DExpressionMotion.TYPE_SET = 0;\nL2DExpressionMotion.TYPE_ADD = 1;\nL2DExpressionMotion.TYPE_MULT = 2;\nfunction L2DExpressionParam() {\n    this.id = '';\n    this.type = -1;\n    this.value = null;\n}\nclass L2DEyeBlink {\n    constructor() {\n        this.nextBlinkTime = null;\n        this.stateStartTime = null;\n        this.blinkIntervalMsec = null;\n        this.eyeState = EYE_STATE.STATE_FIRST;\n        this.blinkIntervalMsec = 4000;\n        this.closingMotionMsec = 100;\n        this.closedMotionMsec = 50;\n        this.openingMotionMsec = 150;\n        this.closeIfZero = true;\n        this.eyeID_L = 'PARAM_EYE_L_OPEN';\n        this.eyeID_R = 'PARAM_EYE_R_OPEN';\n    }\n    calcNextBlink() {\n        const time = UtSystem.getUserTimeMSec();\n        const r = Math.random();\n        return time + r * (2 * this.blinkIntervalMsec - 1);\n    }\n    setInterval(blinkIntervalMsec) {\n        this.blinkIntervalMsec = blinkIntervalMsec;\n    }\n    setEyeMotion(closingMotionMsec, closedMotionMsec, openingMotionMsec) {\n        this.closingMotionMsec = closingMotionMsec;\n        this.closedMotionMsec = closedMotionMsec;\n        this.openingMotionMsec = openingMotionMsec;\n    }\n    updateParam(model) {\n        const time = UtSystem.getUserTimeMSec();\n        let eyeParamValue;\n        let t = 0;\n        switch (this.eyeState) {\n            case EYE_STATE.STATE_CLOSING:\n                t = (time - this.stateStartTime) / this.closingMotionMsec;\n                if (t >= 1) {\n                    t = 1;\n                    this.eyeState = EYE_STATE.STATE_CLOSED;\n                    this.stateStartTime = time;\n                }\n                eyeParamValue = 1 - t;\n                break;\n            case EYE_STATE.STATE_CLOSED:\n                t = (time - this.stateStartTime) / this.closedMotionMsec;\n                if (t >= 1) {\n                    this.eyeState = EYE_STATE.STATE_OPENING;\n                    this.stateStartTime = time;\n                }\n                eyeParamValue = 0;\n                break;\n            case EYE_STATE.STATE_OPENING:\n                t = (time - this.stateStartTime) / this.openingMotionMsec;\n                if (t >= 1) {\n                    t = 1;\n                    this.eyeState = EYE_STATE.STATE_INTERVAL;\n                    this.nextBlinkTime = this.calcNextBlink();\n                }\n                eyeParamValue = t;\n                break;\n            case EYE_STATE.STATE_INTERVAL:\n                if (this.nextBlinkTime < time) {\n                    this.eyeState = EYE_STATE.STATE_CLOSING;\n                    this.stateStartTime = time;\n                }\n                eyeParamValue = 1;\n                break;\n            case EYE_STATE.STATE_FIRST:\n            default:\n                this.eyeState = EYE_STATE.STATE_INTERVAL;\n                this.nextBlinkTime = this.calcNextBlink();\n                eyeParamValue = 1;\n                break;\n        }\n        if (!this.closeIfZero)\n            eyeParamValue = -eyeParamValue;\n        model.setParamFloat(this.eyeID_L, eyeParamValue);\n        model.setParamFloat(this.eyeID_R, eyeParamValue);\n    }\n}\nconst EYE_STATE = () => { };\nEYE_STATE.STATE_FIRST = 'STATE_FIRST';\nEYE_STATE.STATE_INTERVAL = 'STATE_INTERVAL';\nEYE_STATE.STATE_CLOSING = 'STATE_CLOSING';\nEYE_STATE.STATE_CLOSED = 'STATE_CLOSED';\nEYE_STATE.STATE_OPENING = 'STATE_OPENING';\nclass L2DMatrix44 {\n    constructor() {\n        this.tr = new Float32Array(16);\n        this.identity();\n    }\n    static mul(a, b, dst) {\n        const c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        const n = 4;\n        let i, j, k;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                for (k = 0; k < n; k++) {\n                    c[i + j * 4] += a[i + k * 4] * b[k + j * 4];\n                }\n            }\n        }\n        for (i = 0; i < 16; i++) {\n            dst[i] = c[i];\n        }\n    }\n    identity() {\n        for (let i = 0; i < 16; i++)\n            this.tr[i] = i % 5 == 0 ? 1 : 0;\n    }\n    getArray() {\n        return this.tr;\n    }\n    getCopyMatrix() {\n        return new Float32Array(this.tr);\n    }\n    setMatrix(tr) {\n        if (this.tr == null || this.tr.length != this.tr.length)\n            return;\n        for (let i = 0; i < 16; i++)\n            this.tr[i] = tr[i];\n    }\n    getScaleX() {\n        return this.tr[0];\n    }\n    getScaleY() {\n        return this.tr[5];\n    }\n    transformX(src) {\n        return this.tr[0] * src + this.tr[12];\n    }\n    transformY(src) {\n        return this.tr[5] * src + this.tr[13];\n    }\n    invertTransformX(src) {\n        return (src - this.tr[12]) / this.tr[0];\n    }\n    invertTransformY(src) {\n        return (src - this.tr[13]) / this.tr[5];\n    }\n    multTranslate(shiftX, shiftY) {\n        const tr1 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, shiftX, shiftY, 0, 1];\n        L2DMatrix44.mul(tr1, this.tr, this.tr);\n    }\n    translate(x, y) {\n        this.tr[12] = x;\n        this.tr[13] = y;\n    }\n    translateX(x) {\n        this.tr[12] = x;\n    }\n    translateY(y) {\n        this.tr[13] = y;\n    }\n    multScale(scaleX, scaleY) {\n        const tr1 = [scaleX, 0, 0, 0, 0, scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        L2DMatrix44.mul(tr1, this.tr, this.tr);\n    }\n    scale(scaleX, scaleY) {\n        this.tr[0] = scaleX;\n        this.tr[5] = scaleY;\n    }\n}\nclass L2DModelMatrix extends L2DMatrix44 {\n    constructor(w, h) {\n        super();\n        this.width = w;\n        this.height = h;\n    }\n    setPosition(x, y) {\n        this.translate(x, y);\n    }\n    setCenterPosition(x, y) {\n        const w = this.width * this.getScaleX();\n        const h = this.height * this.getScaleY();\n        this.translate(x - w / 2, y - h / 2);\n    }\n    top(y) {\n        this.setY(y);\n    }\n    bottom(y) {\n        const h = this.height * this.getScaleY();\n        this.translateY(y - h);\n    }\n    left(x) {\n        this.setX(x);\n    }\n    right(x) {\n        const w = this.width * this.getScaleX();\n        this.translateX(x - w);\n    }\n    centerX(x) {\n        const w = this.width * this.getScaleX();\n        this.translateX(x - w / 2);\n    }\n    centerY(y) {\n        const h = this.height * this.getScaleY();\n        this.translateY(y - h / 2);\n    }\n    setX(x) {\n        this.translateX(x);\n    }\n    setY(y) {\n        this.translateY(y);\n    }\n    setHeight(h) {\n        const scaleX = h / this.height;\n        const scaleY = -scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    setWidth(w) {\n        const scaleX = w / this.width;\n        const scaleY = -scaleX;\n        this.scale(scaleX, scaleY);\n    }\n}\nclass L2DMotionManager extends MotionQueueManager {\n    constructor() {\n        super();\n        this.currentPriority = null;\n        this.reservePriority = null;\n        this.super = MotionQueueManager.prototype;\n    }\n    getCurrentPriority() {\n        return this.currentPriority;\n    }\n    getReservePriority() {\n        return this.reservePriority;\n    }\n    reserveMotion(priority) {\n        if (this.reservePriority >= priority) {\n            return false;\n        }\n        if (this.currentPriority >= priority) {\n            return false;\n        }\n        this.reservePriority = priority;\n        return true;\n    }\n    setReservePriority(val) {\n        this.reservePriority = val;\n    }\n    updateParam(model) {\n        const updated = MotionQueueManager.prototype.updateParam.call(this, model);\n        if (this.isFinished()) {\n            this.currentPriority = 0;\n        }\n        return updated;\n    }\n    startMotionPrio(motion, priority) {\n        if (priority == this.reservePriority) {\n            this.reservePriority = 0;\n        }\n        this.currentPriority = priority;\n        return this.startMotion(motion, false);\n    }\n}\nclass L2DPhysics {\n    constructor() {\n        this.physicsList = [];\n        this.startTimeMSec = UtSystem.getUserTimeMSec();\n    }\n    static load(buf) {\n        const ret = new L2DPhysics();\n        const pm = Live2DFramework.getPlatformManager();\n        const json = pm.jsonParseFromBytes(buf);\n        const params = json.physics_hair;\n        const paramNum = params.length;\n        for (let i = 0; i < paramNum; i++) {\n            const param = params[i];\n            const physics = new PhysicsHair();\n            const setup = param.setup;\n            const length = parseFloat(setup.length);\n            const resist = parseFloat(setup.regist);\n            const mass = parseFloat(setup.mass);\n            physics.setup(length, resist, mass);\n            const srcList = param.src;\n            const srcNum = srcList.length;\n            for (let j = 0; j < srcNum; j++) {\n                const src = srcList[j];\n                let id = src.id;\n                let type = PhysicsHair.Src.SRC_TO_X;\n                let typeStr = src.ptype;\n                if (typeStr === 'x') {\n                    type = PhysicsHair.Src.SRC_TO_X;\n                }\n                else if (typeStr === 'y') {\n                    type = PhysicsHair.Src.SRC_TO_Y;\n                }\n                else if (typeStr === 'angle') {\n                    type = PhysicsHair.Src.SRC_TO_G_ANGLE;\n                }\n                else {\n                    UtDebug.error('live2d', 'Invalid parameter:PhysicsHair.Src');\n                }\n                let scale = parseFloat(src.scale);\n                let weight = parseFloat(src.weight);\n                physics.addSrcParam(type, id, scale, weight);\n            }\n            const targetList = param.targets;\n            const targetNum = targetList.length;\n            for (let j = 0; j < targetNum; j++) {\n                const target = targetList[j];\n                let id = target.id;\n                let type = PhysicsHair.Target.TARGET_FROM_ANGLE;\n                let typeStr = target.ptype;\n                if (typeStr === 'angle') {\n                    type = PhysicsHair.Target.TARGET_FROM_ANGLE;\n                }\n                else if (typeStr === 'angle_v') {\n                    type = PhysicsHair.Target.TARGET_FROM_ANGLE_V;\n                }\n                else {\n                    UtDebug.error('live2d', 'Invalid parameter:PhysicsHair.Target');\n                }\n                let scale = parseFloat(target.scale);\n                let weight = parseFloat(target.weight);\n                physics.addTargetParam(type, id, scale, weight);\n            }\n            ret.physicsList.push(physics);\n        }\n        return ret;\n    }\n    updateParam(model) {\n        const timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\n        for (let i = 0; i < this.physicsList.length; i++) {\n            this.physicsList[i].update(model, timeMSec);\n        }\n    }\n}\nclass L2DPose {\n    constructor() {\n        this.lastTime = 0;\n        this.lastModel = null;\n        this.partsGroups = [];\n    }\n    static load(buf) {\n        const ret = new L2DPose();\n        const pm = Live2DFramework.getPlatformManager();\n        const json = pm.jsonParseFromBytes(buf);\n        const poseListInfo = json.parts_visible;\n        const poseNum = poseListInfo.length;\n        for (let i_pose = 0; i_pose < poseNum; i_pose++) {\n            const poseInfo = poseListInfo[i_pose];\n            const idListInfo = poseInfo.group;\n            const idNum = idListInfo.length;\n            const partsGroup = [];\n            for (let i_group = 0; i_group < idNum; i_group++) {\n                const partsInfo = idListInfo[i_group];\n                const parts = new L2DPartsParam(partsInfo.id);\n                partsGroup[i_group] = parts;\n                if (partsInfo.link == null)\n                    continue;\n                const linkListInfo = partsInfo.link;\n                const linkNum = linkListInfo.length;\n                parts.link = [];\n                for (let i_link = 0; i_link < linkNum; i_link++) {\n                    const linkParts = new L2DPartsParam(linkListInfo[i_link]);\n                    parts.link.push(linkParts);\n                }\n            }\n            ret.partsGroups.push(partsGroup);\n        }\n        return ret;\n    }\n    updateParam(model) {\n        if (model == null)\n            return;\n        if (!(model == this.lastModel)) {\n            this.initParam(model);\n        }\n        this.lastModel = model;\n        const curTime = UtSystem.getUserTimeMSec();\n        let deltaTimeSec = this.lastTime == 0 ? 0 : (curTime - this.lastTime) / 1000.0;\n        this.lastTime = curTime;\n        if (deltaTimeSec < 0)\n            deltaTimeSec = 0;\n        for (let i = 0; i < this.partsGroups.length; i++) {\n            this.normalizePartsOpacityGroup(model, this.partsGroups[i], deltaTimeSec);\n            this.copyOpacityOtherParts(model, this.partsGroups[i]);\n        }\n    }\n    initParam(model) {\n        if (model == null)\n            return;\n        for (let i = 0; i < this.partsGroups.length; i++) {\n            const partsGroup = this.partsGroups[i];\n            for (let j = 0; j < partsGroup.length; j++) {\n                partsGroup[j].initIndex(model);\n                const partsIndex = partsGroup[j].partsIndex;\n                const paramIndex = partsGroup[j].paramIndex;\n                if (partsIndex < 0)\n                    continue;\n                const v = model.getParamFloat(paramIndex) != 0;\n                model.setPartsOpacity(partsIndex, v ? 1.0 : 0.0);\n                model.setParamFloat(paramIndex, v ? 1.0 : 0.0);\n                if (partsGroup[j].link == null)\n                    continue;\n                for (let k = 0; k < partsGroup[j].link.length; k++) {\n                    partsGroup[j].link[k].initIndex(model);\n                }\n            }\n        }\n    }\n    normalizePartsOpacityGroup(model, partsGroup, deltaTimeSec) {\n        let visibleParts = -1;\n        let visibleOpacity = 1.0;\n        const CLEAR_TIME_SEC = 0.5;\n        const phi = 0.5;\n        const maxBackOpacity = 0.15;\n        for (let i = 0; i < partsGroup.length; i++) {\n            let partsIndex = partsGroup[i].partsIndex;\n            const paramIndex = partsGroup[i].paramIndex;\n            if (partsIndex < 0)\n                continue;\n            if (model.getParamFloat(paramIndex) != 0) {\n                if (visibleParts >= 0) {\n                    break;\n                }\n                visibleParts = i;\n                visibleOpacity = model.getPartsOpacity(partsIndex);\n                visibleOpacity += deltaTimeSec / CLEAR_TIME_SEC;\n                if (visibleOpacity > 1) {\n                    visibleOpacity = 1;\n                }\n            }\n        }\n        if (visibleParts < 0) {\n            visibleParts = 0;\n            visibleOpacity = 1;\n        }\n        for (let i = 0; i < partsGroup.length; i++) {\n            let partsIndex = partsGroup[i].partsIndex;\n            if (partsIndex < 0)\n                continue;\n            if (visibleParts == i) {\n                model.setPartsOpacity(partsIndex, visibleOpacity);\n            }\n            else {\n                let opacity = model.getPartsOpacity(partsIndex);\n                let a1;\n                if (visibleOpacity < phi) {\n                    a1 = (visibleOpacity * (phi - 1)) / phi + 1;\n                }\n                else {\n                    a1 = ((1 - visibleOpacity) * phi) / (1 - phi);\n                }\n                const backOp = (1 - a1) * (1 - visibleOpacity);\n                if (backOp > maxBackOpacity) {\n                    a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n                }\n                if (opacity > a1) {\n                    opacity = a1;\n                }\n                model.setPartsOpacity(partsIndex, opacity);\n            }\n        }\n    }\n    copyOpacityOtherParts(model, partsGroup) {\n        for (let i_group = 0; i_group < partsGroup.length; i_group++) {\n            const partsParam = partsGroup[i_group];\n            if (partsParam.link == null)\n                continue;\n            if (partsParam.partsIndex < 0)\n                continue;\n            const opacity = model.getPartsOpacity(partsParam.partsIndex);\n            for (let i_link = 0; i_link < partsParam.link.length; i_link++) {\n                const linkParts = partsParam.link[i_link];\n                if (linkParts.partsIndex < 0)\n                    continue;\n                model.setPartsOpacity(linkParts.partsIndex, opacity);\n            }\n        }\n    }\n}\nclass L2DPartsParam {\n    constructor(id) {\n        this.paramIndex = -1;\n        this.partsIndex = -1;\n        this.link = null;\n        this.id = id;\n    }\n    initIndex(model) {\n        this.paramIndex = model.getParamIndex('VISIBLE:' + this.id);\n        this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n        model.setParamFloat(this.paramIndex, 1);\n    }\n}\nclass L2DTargetPoint {\n    constructor() {\n        this.EPSILON = 0.01;\n        this.faceTargetX = 0;\n        this.faceTargetY = 0;\n        this.faceX = 0;\n        this.faceY = 0;\n        this.faceVX = 0;\n        this.faceVY = 0;\n        this.lastTimeSec = 0;\n    }\n    setPoint(x, y) {\n        this.faceTargetX = x;\n        this.faceTargetY = y;\n    }\n    getX() {\n        return this.faceX;\n    }\n    getY() {\n        return this.faceY;\n    }\n    update() {\n        const TIME_TO_MAX_SPEED = 0.15;\n        const FACE_PARAM_MAX_V = 40.0 / 7.5;\n        const MAX_V = FACE_PARAM_MAX_V / L2DTargetPoint.FRAME_RATE;\n        if (this.lastTimeSec == 0) {\n            this.lastTimeSec = UtSystem.getUserTimeMSec();\n            return;\n        }\n        const curTimeSec = UtSystem.getUserTimeMSec();\n        const deltaTimeWeight = ((curTimeSec - this.lastTimeSec) * L2DTargetPoint.FRAME_RATE) / 1000.0;\n        this.lastTimeSec = curTimeSec;\n        const FRAME_TO_MAX_SPEED = TIME_TO_MAX_SPEED * L2DTargetPoint.FRAME_RATE;\n        const MAX_A = (deltaTimeWeight * MAX_V) / FRAME_TO_MAX_SPEED;\n        const dx = this.faceTargetX - this.faceX;\n        const dy = this.faceTargetY - this.faceY;\n        if (Math.abs(dx) <= this.EPSILON && Math.abs(dy) <= this.EPSILON)\n            return;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const vx = (MAX_V * dx) / d;\n        const vy = (MAX_V * dy) / d;\n        let ax = vx - this.faceVX;\n        let ay = vy - this.faceVY;\n        let a = Math.sqrt(ax * ax + ay * ay);\n        if (a < -MAX_A || a > MAX_A) {\n            ax *= MAX_A / a;\n            ay *= MAX_A / a;\n            a = MAX_A;\n        }\n        this.faceVX += ax;\n        this.faceVY += ay;\n        {\n            const max_v = 0.5 *\n                (Math.sqrt(MAX_A * MAX_A + 16 * MAX_A * d - 8 * MAX_A * d) - MAX_A);\n            const cur_v = Math.sqrt(this.faceVX * this.faceVX + this.faceVY * this.faceVY);\n            if (cur_v > max_v) {\n                this.faceVX *= max_v / cur_v;\n                this.faceVY *= max_v / cur_v;\n            }\n        }\n        this.faceX += this.faceVX;\n        this.faceY += this.faceVY;\n    }\n}\nL2DTargetPoint.FRAME_RATE = 30;\nclass L2DViewMatrix extends L2DMatrix44 {\n    constructor() {\n        super();\n        this.screenLeft = null;\n        this.screenRight = null;\n        this.screenTop = null;\n        this.screenBottom = null;\n        this.maxLeft = null;\n        this.maxRight = null;\n        this.maxTop = null;\n        this.maxBottom = null;\n        this.max = Number.MAX_VALUE;\n        this.min = 0;\n    }\n    getMaxScale() {\n        return this.max;\n    }\n    getMinScale() {\n        return this.min;\n    }\n    setMaxScale(v) {\n        this.max = v;\n    }\n    setMinScale(v) {\n        this.min = v;\n    }\n    isMaxScale() {\n        return this.getScaleX() == this.max;\n    }\n    isMinScale() {\n        return this.getScaleX() == this.min;\n    }\n    adjustTranslate(shiftX, shiftY) {\n        if (this.tr[0] * this.maxLeft + (this.tr[12] + shiftX) > this.screenLeft)\n            shiftX = this.screenLeft - this.tr[0] * this.maxLeft - this.tr[12];\n        if (this.tr[0] * this.maxRight + (this.tr[12] + shiftX) < this.screenRight)\n            shiftX = this.screenRight - this.tr[0] * this.maxRight - this.tr[12];\n        if (this.tr[5] * this.maxTop + (this.tr[13] + shiftY) < this.screenTop)\n            shiftY = this.screenTop - this.tr[5] * this.maxTop - this.tr[13];\n        if (this.tr[5] * this.maxBottom + (this.tr[13] + shiftY) >\n            this.screenBottom)\n            shiftY = this.screenBottom - this.tr[5] * this.maxBottom - this.tr[13];\n        const tr1 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, shiftX, shiftY, 0, 1];\n        L2DMatrix44.mul(tr1, this.tr, this.tr);\n    }\n    adjustScale(cx, cy, scale) {\n        const targetScale = scale * this.tr[0];\n        if (targetScale < this.min) {\n            if (this.tr[0] > 0)\n                scale = this.min / this.tr[0];\n        }\n        else if (targetScale > this.max) {\n            if (this.tr[0] > 0)\n                scale = this.max / this.tr[0];\n        }\n        const tr1 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, cx, cy, 0, 1];\n        const tr2 = [scale, 0, 0, 0, 0, scale, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        const tr3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -cx, -cy, 0, 1];\n        L2DMatrix44.mul(tr3, this.tr, this.tr);\n        L2DMatrix44.mul(tr2, this.tr, this.tr);\n        L2DMatrix44.mul(tr1, this.tr, this.tr);\n    }\n    setScreenRect(left, right, bottom, top) {\n        this.screenLeft = left;\n        this.screenRight = right;\n        this.screenTop = top;\n        this.screenBottom = bottom;\n    }\n    setMaxScreenRect(left, right, bottom, top) {\n        this.maxLeft = left;\n        this.maxRight = right;\n        this.maxTop = top;\n        this.maxBottom = bottom;\n    }\n    getScreenLeft() {\n        return this.screenLeft;\n    }\n    getScreenRight() {\n        return this.screenRight;\n    }\n    getScreenBottom() {\n        return this.screenBottom;\n    }\n    getScreenTop() {\n        return this.screenTop;\n    }\n    getMaxLeft() {\n        return this.maxLeft;\n    }\n    getMaxRight() {\n        return this.maxRight;\n    }\n    getMaxBottom() {\n        return this.maxBottom;\n    }\n    getMaxTop() {\n        return this.maxTop;\n    }\n}\nclass Live2DFramework {\n    static getPlatformManager() {\n        return Live2DFramework.platformManager;\n    }\n    static setPlatformManager(platformManager) {\n        Live2DFramework.platformManager = platformManager;\n    }\n}\nLive2DFramework.platformManager = null;\nexport { L2DBaseModel, L2DViewMatrix, L2DEyeBlink, Live2DFramework, L2DMatrix44, L2DTargetPoint };\n","const LAppDefine = {\n    VIEW_MAX_SCALE: 2,\n    VIEW_MIN_SCALE: 0.8,\n    VIEW_LOGICAL_LEFT: -1,\n    VIEW_LOGICAL_RIGHT: 1,\n    VIEW_LOGICAL_MAX_LEFT: -2,\n    VIEW_LOGICAL_MAX_RIGHT: 2,\n    VIEW_LOGICAL_MAX_BOTTOM: -2,\n    VIEW_LOGICAL_MAX_TOP: 2,\n    PRIORITY_NONE: 0,\n    PRIORITY_IDLE: 1,\n    PRIORITY_NORMAL: 2,\n    PRIORITY_FORCE: 3,\n    MOTION_GROUP_IDLE: 'idle',\n    MOTION_GROUP_TAP_BODY: 'tap_body',\n    MOTION_GROUP_FLICK_HEAD: 'flick_head',\n    MOTION_GROUP_PINCH_IN: 'pinch_in',\n    MOTION_GROUP_PINCH_OUT: 'pinch_out',\n    MOTION_GROUP_SHAKE: 'shake',\n    HIT_AREA_HEAD: 'head',\n    HIT_AREA_BODY: 'body',\n};\nexport default LAppDefine;\n","class MatrixStack {\n    static reset() {\n        this.depth = 0;\n    }\n    static loadIdentity() {\n        for (let i = 0; i < 16; i++) {\n            this.currentMatrix[i] = i % 5 == 0 ? 1 : 0;\n        }\n    }\n    static push() {\n        const offset = this.depth * 16;\n        const nextOffset = (this.depth + 1) * 16;\n        if (this.matrixStack.length < nextOffset + 16) {\n            this.matrixStack.length = nextOffset + 16;\n        }\n        for (let i = 0; i < 16; i++) {\n            this.matrixStack[nextOffset + i] = this.currentMatrix[i];\n        }\n        this.depth++;\n    }\n    static pop() {\n        this.depth--;\n        if (this.depth < 0) {\n            this.depth = 0;\n        }\n        const offset = this.depth * 16;\n        for (let i = 0; i < 16; i++) {\n            this.currentMatrix[i] = this.matrixStack[offset + i];\n        }\n    }\n    static getMatrix() {\n        return this.currentMatrix;\n    }\n    static multMatrix(matNew) {\n        let i, j, k;\n        for (i = 0; i < 16; i++) {\n            this.tmp[i] = 0;\n        }\n        for (i = 0; i < 4; i++) {\n            for (j = 0; j < 4; j++) {\n                for (k = 0; k < 4; k++) {\n                    this.tmp[i + j * 4] +=\n                        this.currentMatrix[i + k * 4] * matNew[k + j * 4];\n                }\n            }\n        }\n        for (i = 0; i < 16; i++) {\n            this.currentMatrix[i] = this.tmp[i];\n        }\n    }\n}\nMatrixStack.matrixStack = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nMatrixStack.depth = 0;\nMatrixStack.currentMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nMatrixStack.tmp = new Array(16);\nexport default MatrixStack;\n","import { Live2DFramework } from '../Live2DFramework.js';\nclass ModelSettingJson {\n    constructor() {\n        this.NAME = 'name';\n        this.ID = 'id';\n        this.MODEL = 'model';\n        this.TEXTURES = 'textures';\n        this.HIT_AREAS = 'hit_areas';\n        this.HIT_AREAS_CUSTOM = 'hit_areas_custom';\n        this.PHYSICS = 'physics';\n        this.POSE = 'pose';\n        this.EXPRESSIONS = 'expressions';\n        this.MOTION_GROUPS = 'motions';\n        this.SOUND = 'sound';\n        this.FADE_IN = 'fade_in';\n        this.FADE_OUT = 'fade_out';\n        this.LAYOUT = 'layout';\n        this.INIT_PARAM = 'init_param';\n        this.INIT_PARTS_VISIBLE = 'init_parts_visible';\n        this.VALUE = 'val';\n        this.FILE = 'file';\n        this.json = {};\n    }\n    loadModelSetting(path, callback) {\n        const pm = Live2DFramework.getPlatformManager();\n        pm.loadBytes(path, buf => {\n            const str = String.fromCharCode.apply(null, new Uint8Array(buf));\n            this.json = JSON.parse(str);\n            callback();\n        });\n    }\n    getTextureFile(n) {\n        if (this.json[this.TEXTURES] == null || this.json[this.TEXTURES][n] == null)\n            return null;\n        return this.json[this.TEXTURES][n];\n    }\n    getModelFile() {\n        return this.json[this.MODEL];\n    }\n    getTextureNum() {\n        if (this.json[this.TEXTURES] == null)\n            return 0;\n        return this.json[this.TEXTURES].length;\n    }\n    getHitAreaNum() {\n        if (this.json[this.HIT_AREAS] == null)\n            return 0;\n        return this.json[this.HIT_AREAS].length;\n    }\n    getHitAreaCustom() {\n        return this.json[this.HIT_AREAS_CUSTOM];\n    }\n    getHitAreaID(n) {\n        if (this.json[this.HIT_AREAS] == null ||\n            this.json[this.HIT_AREAS][n] == null)\n            return null;\n        return this.json[this.HIT_AREAS][n][this.ID];\n    }\n    getHitAreaName(n) {\n        if (this.json[this.HIT_AREAS] == null ||\n            this.json[this.HIT_AREAS][n] == null)\n            return null;\n        return this.json[this.HIT_AREAS][n][this.NAME];\n    }\n    getPhysicsFile() {\n        return this.json[this.PHYSICS];\n    }\n    getPoseFile() {\n        return this.json[this.POSE];\n    }\n    getExpressionNum() {\n        return this.json[this.EXPRESSIONS] == null\n            ? 0\n            : this.json[this.EXPRESSIONS].length;\n    }\n    getExpressionFile(n) {\n        if (this.json[this.EXPRESSIONS] == null)\n            return null;\n        return this.json[this.EXPRESSIONS][n][this.FILE];\n    }\n    getExpressionName(n) {\n        if (this.json[this.EXPRESSIONS] == null)\n            return null;\n        return this.json[this.EXPRESSIONS][n][this.NAME];\n    }\n    getLayout() {\n        return this.json[this.LAYOUT];\n    }\n    getInitParamNum() {\n        return this.json[this.INIT_PARAM] == null\n            ? 0\n            : this.json[this.INIT_PARAM].length;\n    }\n    getMotionNum(name) {\n        if (this.json[this.MOTION_GROUPS] == null ||\n            this.json[this.MOTION_GROUPS][name] == null)\n            return 0;\n        return this.json[this.MOTION_GROUPS][name].length;\n    }\n    getMotionFile(name, n) {\n        if (this.json[this.MOTION_GROUPS] == null ||\n            this.json[this.MOTION_GROUPS][name] == null ||\n            this.json[this.MOTION_GROUPS][name][n] == null)\n            return null;\n        return this.json[this.MOTION_GROUPS][name][n][this.FILE];\n    }\n    getMotionSound(name, n) {\n        if (this.json[this.MOTION_GROUPS] == null ||\n            this.json[this.MOTION_GROUPS][name] == null ||\n            this.json[this.MOTION_GROUPS][name][n] == null ||\n            this.json[this.MOTION_GROUPS][name][n][this.SOUND] == null)\n            return null;\n        return this.json[this.MOTION_GROUPS][name][n][this.SOUND];\n    }\n    getMotionFadeIn(name, n) {\n        if (this.json[this.MOTION_GROUPS] == null ||\n            this.json[this.MOTION_GROUPS][name] == null ||\n            this.json[this.MOTION_GROUPS][name][n] == null ||\n            this.json[this.MOTION_GROUPS][name][n][this.FADE_IN] == null)\n            return 1000;\n        return this.json[this.MOTION_GROUPS][name][n][this.FADE_IN];\n    }\n    getMotionFadeOut(name, n) {\n        if (this.json[this.MOTION_GROUPS] == null ||\n            this.json[this.MOTION_GROUPS][name] == null ||\n            this.json[this.MOTION_GROUPS][name][n] == null ||\n            this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT] == null)\n            return 1000;\n        return this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT];\n    }\n    getInitParamID(n) {\n        if (this.json[this.INIT_PARAM] == null ||\n            this.json[this.INIT_PARAM][n] == null)\n            return null;\n        return this.json[this.INIT_PARAM][n][this.ID];\n    }\n    getInitParamValue(n) {\n        if (this.json[this.INIT_PARAM] == null ||\n            this.json[this.INIT_PARAM][n] == null)\n            return NaN;\n        return this.json[this.INIT_PARAM][n][this.VALUE];\n    }\n    getInitPartsVisibleNum() {\n        return this.json[this.INIT_PARTS_VISIBLE] == null\n            ? 0\n            : this.json[this.INIT_PARTS_VISIBLE].length;\n    }\n    getInitPartsVisibleID(n) {\n        if (this.json[this.INIT_PARTS_VISIBLE] == null ||\n            this.json[this.INIT_PARTS_VISIBLE][n] == null)\n            return null;\n        return this.json[this.INIT_PARTS_VISIBLE][n][this.ID];\n    }\n    getInitPartsVisibleValue(n) {\n        if (this.json[this.INIT_PARTS_VISIBLE] == null ||\n            this.json[this.INIT_PARTS_VISIBLE][n] == null)\n            return NaN;\n        return this.json[this.INIT_PARTS_VISIBLE][n][this.VALUE];\n    }\n}\nexport default ModelSettingJson;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { L2DBaseModel, Live2DFramework, L2DEyeBlink } from './Live2DFramework.js';\nimport ModelSettingJson from './utils/ModelSettingJson.js';\nimport LAppDefine from './LAppDefine.js';\nimport MatrixStack from './utils/MatrixStack.js';\nimport logger from '../logger.js';\nclass LAppModel extends L2DBaseModel {\n    constructor() {\n        super();\n        this.modelHomeDir = '';\n        this.modelSetting = null;\n        this.tmpMatrix = [];\n    }\n    loadJSON(callback) {\n        const path = this.modelHomeDir + this.modelSetting.getModelFile();\n        this.loadModelData(path, model => {\n            for (let i = 0; i < this.modelSetting.getTextureNum(); i++) {\n                const texPaths = this.modelHomeDir + this.modelSetting.getTextureFile(i);\n                this.loadTexture(i, texPaths, () => {\n                    if (this.isTexLoaded) {\n                        if (this.modelSetting.getExpressionNum() > 0) {\n                            this.expressions = {};\n                            for (let j = 0; j < this.modelSetting.getExpressionNum(); j++) {\n                                const expName = this.modelSetting.getExpressionName(j);\n                                const expFilePath = this.modelHomeDir +\n                                    this.modelSetting.getExpressionFile(j);\n                                this.loadExpression(expName, expFilePath);\n                            }\n                        }\n                        else {\n                            this.expressionManager = null;\n                            this.expressions = {};\n                        }\n                        if (this.eyeBlink == null) {\n                            this.eyeBlink = new L2DEyeBlink();\n                        }\n                        if (this.modelSetting.getPhysicsFile() != null) {\n                            this.loadPhysics(this.modelHomeDir + this.modelSetting.getPhysicsFile());\n                        }\n                        else {\n                            this.physics = null;\n                        }\n                        if (this.modelSetting.getPoseFile() != null) {\n                            this.loadPose(this.modelHomeDir + this.modelSetting.getPoseFile(), () => {\n                                this.pose.updateParam(this.live2DModel);\n                            });\n                        }\n                        else {\n                            this.pose = null;\n                        }\n                        if (this.modelSetting.getLayout() != null) {\n                            const layout = this.modelSetting.getLayout();\n                            if (layout['width'] != null)\n                                this.modelMatrix.setWidth(layout['width']);\n                            if (layout['height'] != null)\n                                this.modelMatrix.setHeight(layout['height']);\n                            if (layout['x'] != null)\n                                this.modelMatrix.setX(layout['x']);\n                            if (layout['y'] != null)\n                                this.modelMatrix.setY(layout['y']);\n                            if (layout['center_x'] != null)\n                                this.modelMatrix.centerX(layout['center_x']);\n                            if (layout['center_y'] != null)\n                                this.modelMatrix.centerY(layout['center_y']);\n                            if (layout['top'] != null)\n                                this.modelMatrix.top(layout['top']);\n                            if (layout['bottom'] != null)\n                                this.modelMatrix.bottom(layout['bottom']);\n                            if (layout['left'] != null)\n                                this.modelMatrix.left(layout['left']);\n                            if (layout['right'] != null)\n                                this.modelMatrix.right(layout['right']);\n                        }\n                        for (let j = 0; j < this.modelSetting.getInitParamNum(); j++) {\n                            this.live2DModel.setParamFloat(this.modelSetting.getInitParamID(j), this.modelSetting.getInitParamValue(j));\n                        }\n                        for (let j = 0; j < this.modelSetting.getInitPartsVisibleNum(); j++) {\n                            this.live2DModel.setPartsOpacity(this.modelSetting.getInitPartsVisibleID(j), this.modelSetting.getInitPartsVisibleValue(j));\n                        }\n                        this.live2DModel.saveParam();\n                        this.preloadMotionGroup(LAppDefine.MOTION_GROUP_IDLE);\n                        this.mainMotionManager.stopAllMotions();\n                        this.setUpdating(false);\n                        this.setInitialized(true);\n                        if (typeof callback == 'function')\n                            callback();\n                    }\n                });\n            }\n        });\n    }\n    loadModelSetting(modelSettingPath, modelSetting) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.setUpdating(true);\n            this.setInitialized(false);\n            this.modelHomeDir = modelSettingPath.substring(0, modelSettingPath.lastIndexOf('/') + 1);\n            this.modelSetting = new ModelSettingJson();\n            this.modelSetting.json = modelSetting;\n            yield new Promise(resolve => this.loadJSON(resolve));\n        });\n    }\n    load(gl, modelSettingPath, callback) {\n        this.setUpdating(true);\n        this.setInitialized(false);\n        this.modelHomeDir = modelSettingPath.substring(0, modelSettingPath.lastIndexOf('/') + 1);\n        this.modelSetting = new ModelSettingJson();\n        this.modelSetting.loadModelSetting(modelSettingPath, () => {\n            this.loadJSON(callback);\n        });\n    }\n    release(gl) {\n        const pm = Live2DFramework.getPlatformManager();\n        gl.deleteTexture(pm.texture);\n    }\n    preloadMotionGroup(name) {\n        for (let i = 0; i < this.modelSetting.getMotionNum(name); i++) {\n            const file = this.modelSetting.getMotionFile(name, i);\n            this.loadMotion(file, this.modelHomeDir + file, motion => {\n                motion.setFadeIn(this.modelSetting.getMotionFadeIn(name, i));\n                motion.setFadeOut(this.modelSetting.getMotionFadeOut(name, i));\n            });\n        }\n    }\n    update() {\n        if (this.live2DModel == null) {\n            logger.error('Failed to update.');\n            return;\n        }\n        const timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\n        const timeSec = timeMSec / 1000.0;\n        const t = timeSec * 2 * Math.PI;\n        if (this.mainMotionManager.isFinished()) {\n            this.startRandomMotion(LAppDefine.MOTION_GROUP_IDLE, LAppDefine.PRIORITY_IDLE);\n        }\n        this.live2DModel.loadParam();\n        const update = this.mainMotionManager.updateParam(this.live2DModel);\n        if (!update) {\n            if (this.eyeBlink != null) {\n                this.eyeBlink.updateParam(this.live2DModel);\n            }\n        }\n        this.live2DModel.saveParam();\n        if (this.expressionManager != null &&\n            this.expressions != null &&\n            !this.expressionManager.isFinished()) {\n            this.expressionManager.updateParam(this.live2DModel);\n        }\n        this.live2DModel.addToParamFloat('PARAM_ANGLE_X', this.dragX * 30, 1);\n        this.live2DModel.addToParamFloat('PARAM_ANGLE_Y', this.dragY * 30, 1);\n        this.live2DModel.addToParamFloat('PARAM_ANGLE_Z', this.dragX * this.dragY * -30, 1);\n        this.live2DModel.addToParamFloat('PARAM_BODY_ANGLE_X', this.dragX * 10, 1);\n        this.live2DModel.addToParamFloat('PARAM_EYE_BALL_X', this.dragX, 1);\n        this.live2DModel.addToParamFloat('PARAM_EYE_BALL_Y', this.dragY, 1);\n        this.live2DModel.addToParamFloat('PARAM_ANGLE_X', Number(15 * Math.sin(t / 6.5345)), 0.5);\n        this.live2DModel.addToParamFloat('PARAM_ANGLE_Y', Number(8 * Math.sin(t / 3.5345)), 0.5);\n        this.live2DModel.addToParamFloat('PARAM_ANGLE_Z', Number(10 * Math.sin(t / 5.5345)), 0.5);\n        this.live2DModel.addToParamFloat('PARAM_BODY_ANGLE_X', Number(4 * Math.sin(t / 15.5345)), 0.5);\n        this.live2DModel.setParamFloat('PARAM_BREATH', Number(0.5 + 0.5 * Math.sin(t / 3.2345)), 1);\n        if (this.physics != null) {\n            this.physics.updateParam(this.live2DModel);\n        }\n        if (this.lipSync == null) {\n            this.live2DModel.setParamFloat('PARAM_MOUTH_OPEN_Y', this.lipSyncValue);\n        }\n        if (this.pose != null) {\n            this.pose.updateParam(this.live2DModel);\n        }\n        this.live2DModel.update();\n    }\n    setRandomExpression() {\n        const tmp = [];\n        for (const name in this.expressions) {\n            tmp.push(name);\n        }\n        const no = parseInt(Math.random() * tmp.length);\n        this.setExpression(tmp[no]);\n    }\n    startRandomMotion(name, priority) {\n        const max = this.modelSetting.getMotionNum(name);\n        const no = parseInt(Math.random() * max);\n        this.startMotion(name, no, priority);\n    }\n    startMotion(name, no, priority) {\n        const motionName = this.modelSetting.getMotionFile(name, no);\n        if (motionName == null || motionName == '') {\n            logger.error('Failed to motion.');\n            return;\n        }\n        if (priority == LAppDefine.PRIORITY_FORCE) {\n            this.mainMotionManager.setReservePriority(priority);\n        }\n        else if (!this.mainMotionManager.reserveMotion(priority)) {\n            logger.trace('Motion is running.');\n            return;\n        }\n        let motion;\n        if (this.motions[name] == null) {\n            this.loadMotion(null, this.modelHomeDir + motionName, mtn => {\n                motion = mtn;\n                this.setFadeInFadeOut(name, no, priority, motion);\n            });\n        }\n        else {\n            motion = this.motions[name];\n            this.setFadeInFadeOut(name, no, priority, motion);\n        }\n    }\n    setFadeInFadeOut(name, no, priority, motion) {\n        const motionName = this.modelSetting.getMotionFile(name, no);\n        motion.setFadeIn(this.modelSetting.getMotionFadeIn(name, no));\n        motion.setFadeOut(this.modelSetting.getMotionFadeOut(name, no));\n        logger.trace('Start motion : ' + motionName);\n        if (this.modelSetting.getMotionSound(name, no) == null) {\n            this.mainMotionManager.startMotionPrio(motion, priority);\n        }\n        else {\n            const soundName = this.modelSetting.getMotionSound(name, no);\n            const snd = document.createElement('audio');\n            snd.src = this.modelHomeDir + soundName;\n            logger.trace('Start sound : ' + soundName);\n            snd.play();\n            this.mainMotionManager.startMotionPrio(motion, priority);\n        }\n    }\n    setExpression(name) {\n        var _a;\n        const motion = this.expressions[name];\n        logger.trace('Expression : ' + name);\n        (_a = this.expressionManager) === null || _a === void 0 ? void 0 : _a.startMotion(motion, false);\n    }\n    draw(gl) {\n        MatrixStack.push();\n        MatrixStack.multMatrix(this.modelMatrix.getArray());\n        this.tmpMatrix = MatrixStack.getMatrix();\n        this.live2DModel.setMatrix(this.tmpMatrix);\n        this.live2DModel.draw();\n        MatrixStack.pop();\n    }\n    hitTest(id, testX, testY) {\n        const len = this.modelSetting.getHitAreaNum();\n        if (len == 0) {\n            const hitAreasCustom = this.modelSetting.getHitAreaCustom();\n            if (hitAreasCustom) {\n                const x = hitAreasCustom[id + '_x'];\n                const y = hitAreasCustom[id + '_y'];\n                if (testX > Math.min(...x) && testX < Math.max(...x) &&\n                    testY > Math.min(...y) && testY < Math.max(...y)) {\n                    return true;\n                }\n            }\n        }\n        for (let i = 0; i < len; i++) {\n            if (id == this.modelSetting.getHitAreaName(i)) {\n                const drawID = this.modelSetting.getHitAreaID(i);\n                return this.hitTestSimple(drawID, testX, testY);\n            }\n        }\n        return false;\n    }\n}\nexport default LAppModel;\n","import logger from '../logger.js';\nclass PlatformManager {\n    constructor() {\n        this.cache = {};\n    }\n    loadBytes(path, callback) {\n        if (path in this.cache) {\n            return callback(this.cache[path]);\n        }\n        fetch(path)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => {\n            this.cache[path] = arrayBuffer;\n            callback(arrayBuffer);\n        });\n    }\n    loadLive2DModel(path, callback) {\n        let model = null;\n        this.loadBytes(path, buf => {\n            model = Live2DModelWebGL.loadModel(buf);\n            callback(model);\n        });\n    }\n    loadTexture(model, no, path, callback) {\n        const loadedImage = new Image();\n        loadedImage.crossOrigin = 'anonymous';\n        loadedImage.src = path;\n        loadedImage.onload = () => {\n            const canvas = document.getElementById('live2d');\n            const gl = canvas.getContext('webgl2', { premultipliedAlpha: true, preserveDrawingBuffer: true });\n            let texture = gl.createTexture();\n            if (!texture) {\n                logger.error('Failed to generate gl texture name.');\n                return -1;\n            }\n            if (model.isPremultipliedAlpha() == false) {\n                gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n            }\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, loadedImage);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n            gl.generateMipmap(gl.TEXTURE_2D);\n            model.setTexture(no, texture);\n            texture = null;\n            if (typeof callback == 'function')\n                callback();\n        };\n        loadedImage.onerror = () => {\n            logger.error('Failed to load image : ' + path);\n        };\n    }\n    jsonParseFromBytes(buf) {\n        let jsonStr;\n        const bomCode = new Uint8Array(buf, 0, 3);\n        if (bomCode[0] == 239 && bomCode[1] == 187 && bomCode[2] == 191) {\n            jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf, 3));\n        }\n        else {\n            jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf));\n        }\n        const jsonObj = JSON.parse(jsonStr);\n        return jsonObj;\n    }\n}\nexport default PlatformManager;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Live2DFramework } from './Live2DFramework.js';\nimport LAppModel from './LAppModel.js';\nimport PlatformManager from './PlatformManager.js';\nimport LAppDefine from './LAppDefine.js';\nimport logger from '../logger.js';\nclass LAppLive2DManager {\n    constructor() {\n        this.model = null;\n        this.reloading = false;\n        Live2D.init();\n        Live2DFramework.setPlatformManager(new PlatformManager());\n    }\n    getModel() {\n        return this.model;\n    }\n    releaseModel(gl) {\n        if (this.model) {\n            this.model.release(gl);\n            this.model = null;\n        }\n    }\n    changeModel(gl, modelSettingPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                if (this.reloading)\n                    return;\n                this.reloading = true;\n                const oldModel = this.model;\n                const newModel = new LAppModel();\n                newModel.load(gl, modelSettingPath, () => {\n                    if (oldModel) {\n                        oldModel.release(gl);\n                    }\n                    this.model = newModel;\n                    this.reloading = false;\n                    resolve();\n                });\n            });\n        });\n    }\n    changeModelWithJSON(gl, modelSettingPath, modelSetting) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.reloading)\n                return;\n            this.reloading = true;\n            const oldModel = this.model;\n            const newModel = new LAppModel();\n            yield newModel.loadModelSetting(modelSettingPath, modelSetting);\n            if (oldModel) {\n                oldModel.release(gl);\n            }\n            this.model = newModel;\n            this.reloading = false;\n        });\n    }\n    setDrag(x, y) {\n        if (this.model) {\n            this.model.setDrag(x, y);\n        }\n    }\n    maxScaleEvent() {\n        logger.trace('Max scale event.');\n        if (this.model) {\n            this.model.startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_IN, LAppDefine.PRIORITY_NORMAL);\n        }\n    }\n    minScaleEvent() {\n        logger.trace('Min scale event.');\n        if (this.model) {\n            this.model.startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_OUT, LAppDefine.PRIORITY_NORMAL);\n        }\n    }\n    tapEvent(x, y) {\n        logger.trace('tapEvent view x:' + x + ' y:' + y);\n        if (!this.model)\n            return false;\n        if (this.model.hitTest(LAppDefine.HIT_AREA_HEAD, x, y)) {\n            logger.trace('Tap face.');\n            this.model.setRandomExpression();\n        }\n        else if (this.model.hitTest(LAppDefine.HIT_AREA_BODY, x, y)) {\n            logger.trace('Tap body.');\n            this.model.startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY, LAppDefine.PRIORITY_NORMAL);\n        }\n        return true;\n    }\n}\nexport default LAppLive2DManager;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { L2DMatrix44, L2DTargetPoint, L2DViewMatrix } from './Live2DFramework.js';\nimport LAppDefine from './LAppDefine.js';\nimport MatrixStack from './utils/MatrixStack.js';\nimport LAppLive2DManager from './LAppLive2DManager.js';\nimport logger from '../logger.js';\nfunction normalizePoint(x, y, x0, y0, w, h) {\n    const dx = x - x0;\n    const dy = y - y0;\n    let targetX = 0, targetY = 0;\n    if (dx >= 0) {\n        targetX = dx / (w - x0);\n    }\n    else {\n        targetX = dx / x0;\n    }\n    if (dy >= 0) {\n        targetY = dy / (h - y0);\n    }\n    else {\n        targetY = dy / y0;\n    }\n    return {\n        vx: targetX,\n        vy: -targetY\n    };\n}\nclass Cubism2Model {\n    constructor() {\n        this.live2DMgr = new LAppLive2DManager();\n        this.isDrawStart = false;\n        this.gl = null;\n        this.canvas = null;\n        this.dragMgr = null;\n        this.viewMatrix = null;\n        this.projMatrix = null;\n        this.deviceToScreen = null;\n        this.oldLen = 0;\n        this._boundMouseEvent = this.mouseEvent.bind(this);\n        this._boundTouchEvent = this.touchEvent.bind(this);\n    }\n    initL2dCanvas(canvasId) {\n        this.canvas = document.getElementById(canvasId);\n        if (this.canvas.addEventListener) {\n            this.canvas.addEventListener('mousewheel', this._boundMouseEvent, false);\n            this.canvas.addEventListener('click', this._boundMouseEvent, false);\n            document.addEventListener('mousemove', this._boundMouseEvent, false);\n            document.addEventListener('mouseout', this._boundMouseEvent, false);\n            this.canvas.addEventListener('contextmenu', this._boundMouseEvent, false);\n            this.canvas.addEventListener('touchstart', this._boundTouchEvent, false);\n            this.canvas.addEventListener('touchend', this._boundTouchEvent, false);\n            this.canvas.addEventListener('touchmove', this._boundTouchEvent, false);\n        }\n    }\n    init(canvasId, modelSettingPath, modelSetting) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.initL2dCanvas(canvasId);\n            const width = this.canvas.width;\n            const height = this.canvas.height;\n            this.dragMgr = new L2DTargetPoint();\n            const ratio = height / width;\n            const left = LAppDefine.VIEW_LOGICAL_LEFT;\n            const right = LAppDefine.VIEW_LOGICAL_RIGHT;\n            const bottom = -ratio;\n            const top = ratio;\n            this.viewMatrix = new L2DViewMatrix();\n            this.viewMatrix.setScreenRect(left, right, bottom, top);\n            this.viewMatrix.setMaxScreenRect(LAppDefine.VIEW_LOGICAL_MAX_LEFT, LAppDefine.VIEW_LOGICAL_MAX_RIGHT, LAppDefine.VIEW_LOGICAL_MAX_BOTTOM, LAppDefine.VIEW_LOGICAL_MAX_TOP);\n            this.viewMatrix.setMaxScale(LAppDefine.VIEW_MAX_SCALE);\n            this.viewMatrix.setMinScale(LAppDefine.VIEW_MIN_SCALE);\n            this.projMatrix = new L2DMatrix44();\n            this.projMatrix.multScale(1, width / height);\n            this.deviceToScreen = new L2DMatrix44();\n            this.deviceToScreen.multTranslate(-width / 2.0, -height / 2.0);\n            this.deviceToScreen.multScale(2 / width, -2 / width);\n            this.gl = this.canvas.getContext('webgl2', { premultipliedAlpha: true, preserveDrawingBuffer: true });\n            if (!this.gl) {\n                logger.error('Failed to create WebGL context.');\n                return;\n            }\n            Live2D.setGL(this.gl);\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            yield this.changeModelWithJSON(modelSettingPath, modelSetting);\n            this.startDraw();\n        });\n    }\n    destroy() {\n        if (this.canvas) {\n            this.canvas.removeEventListener('mousewheel', this._boundMouseEvent, false);\n            this.canvas.removeEventListener('click', this._boundMouseEvent, false);\n            document.removeEventListener('mousemove', this._boundMouseEvent, false);\n            document.removeEventListener('mouseout', this._boundMouseEvent, false);\n            this.canvas.removeEventListener('contextmenu', this._boundMouseEvent, false);\n            this.canvas.removeEventListener('touchstart', this._boundTouchEvent, false);\n            this.canvas.removeEventListener('touchend', this._boundTouchEvent, false);\n            this.canvas.removeEventListener('touchmove', this._boundTouchEvent, false);\n        }\n        if (this._drawFrameId) {\n            window.cancelAnimationFrame(this._drawFrameId);\n            this._drawFrameId = null;\n        }\n        this.isDrawStart = false;\n        if (this.live2DMgr && typeof this.live2DMgr.release === 'function') {\n            this.live2DMgr.release();\n        }\n        if (this.gl) {\n        }\n        this.canvas = null;\n        this.gl = null;\n        this.dragMgr = null;\n        this.viewMatrix = null;\n        this.projMatrix = null;\n        this.deviceToScreen = null;\n    }\n    startDraw() {\n        if (!this.isDrawStart) {\n            this.isDrawStart = true;\n            const tick = () => {\n                this.draw();\n                this._drawFrameId = window.requestAnimationFrame(tick, this.canvas);\n            };\n            tick();\n        }\n    }\n    draw() {\n        MatrixStack.reset();\n        MatrixStack.loadIdentity();\n        this.dragMgr.update();\n        this.live2DMgr.setDrag(this.dragMgr.getX(), this.dragMgr.getY());\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        MatrixStack.multMatrix(this.projMatrix.getArray());\n        MatrixStack.multMatrix(this.viewMatrix.getArray());\n        MatrixStack.push();\n        const model = this.live2DMgr.getModel();\n        if (model == null)\n            return;\n        if (model.initialized && !model.updating) {\n            model.update();\n            model.draw(this.gl);\n        }\n        MatrixStack.pop();\n    }\n    changeModel(modelSettingPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.live2DMgr.changeModel(this.gl, modelSettingPath);\n        });\n    }\n    changeModelWithJSON(modelSettingPath, modelSetting) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.live2DMgr.changeModelWithJSON(this.gl, modelSettingPath, modelSetting);\n        });\n    }\n    modelScaling(scale) {\n        const isMaxScale = this.viewMatrix.isMaxScale();\n        const isMinScale = this.viewMatrix.isMinScale();\n        this.viewMatrix.adjustScale(0, 0, scale);\n        if (!isMaxScale) {\n            if (this.viewMatrix.isMaxScale()) {\n                this.live2DMgr.maxScaleEvent();\n            }\n        }\n        if (!isMinScale) {\n            if (this.viewMatrix.isMinScale()) {\n                this.live2DMgr.minScaleEvent();\n            }\n        }\n    }\n    modelTurnHead(event) {\n        var _a;\n        const rect = this.canvas.getBoundingClientRect();\n        const { vx, vy } = normalizePoint(event.clientX, event.clientY, rect.left + rect.width / 2, rect.top + rect.height / 2, window.innerWidth, window.innerHeight);\n        logger.trace('onMouseDown device( x:' +\n            event.clientX +\n            ' y:' +\n            event.clientY +\n            ' ) view( x:' +\n            vx +\n            ' y:' +\n            vy +\n            ')');\n        this.dragMgr.setPoint(vx, vy);\n        this.live2DMgr.tapEvent(vx, vy);\n        if ((_a = this.live2DMgr) === null || _a === void 0 ? void 0 : _a.model.hitTest(LAppDefine.HIT_AREA_BODY, vx, vy)) {\n            window.dispatchEvent(new Event('live2d:tapbody'));\n        }\n    }\n    followPointer(event) {\n        var _a;\n        const rect = this.canvas.getBoundingClientRect();\n        const { vx, vy } = normalizePoint(event.clientX, event.clientY, rect.left + rect.width / 2, rect.top + rect.height / 2, window.innerWidth, window.innerHeight);\n        logger.trace('onMouseMove device( x:' +\n            event.clientX +\n            ' y:' +\n            event.clientY +\n            ' ) view( x:' +\n            vx +\n            ' y:' +\n            vy +\n            ')');\n        this.dragMgr.setPoint(vx, vy);\n        if ((_a = this.live2DMgr) === null || _a === void 0 ? void 0 : _a.model.hitTest(LAppDefine.HIT_AREA_BODY, vx, vy)) {\n            window.dispatchEvent(new Event('live2d:hoverbody'));\n        }\n    }\n    lookFront() {\n        this.dragMgr.setPoint(0, 0);\n    }\n    mouseEvent(e) {\n        e.preventDefault();\n        if (e.type == 'mousewheel') {\n            if (e.wheelDelta > 0)\n                this.modelScaling(1.1);\n            else\n                this.modelScaling(1);\n        }\n        else if (e.type == 'click' || e.type == 'contextmenu') {\n            this.modelTurnHead(e);\n        }\n        else if (e.type == 'mousemove') {\n            this.followPointer(e);\n        }\n        else if (e.type == 'mouseout') {\n            this.lookFront();\n        }\n    }\n    touchEvent(e) {\n        e.preventDefault();\n        const touch = e.touches[0];\n        if (e.type == 'touchstart') {\n            if (e.touches.length == 1)\n                this.modelTurnHead(touch);\n        }\n        else if (e.type == 'touchmove') {\n            this.followPointer(touch);\n            if (e.touches.length == 2) {\n                const touch1 = e.touches[0];\n                const touch2 = e.touches[1];\n                const len = Math.pow(touch1.pageX - touch2.pageX, 2) +\n                    Math.pow(touch1.pageY - touch2.pageY, 2);\n                if (this.oldLen - len < 0)\n                    this.modelScaling(1.025);\n                else\n                    this.modelScaling(0.975);\n                this.oldLen = len;\n            }\n        }\n        else if (e.type == 'touchend') {\n            this.lookFront();\n        }\n    }\n    transformViewX(deviceX) {\n        const screenX = this.deviceToScreen.transformX(deviceX);\n        return this.viewMatrix.invertTransformX(screenX);\n    }\n    transformViewY(deviceY) {\n        const screenY = this.deviceToScreen.transformY(deviceY);\n        return this.viewMatrix.invertTransformY(screenY);\n    }\n    transformScreenX(deviceX) {\n        return this.deviceToScreen.transformX(deviceX);\n    }\n    transformScreenY(deviceY) {\n        return this.deviceToScreen.transformY(deviceY);\n    }\n}\nexport default Cubism2Model;\n"],"names":["L2DBaseModel","constructor","this","live2DModel","modelMatrix","eyeBlink","physics","pose","initialized","updating","alpha","accAlpha","lipSync","lipSyncValue","accelX","accelY","accelZ","dragX","dragY","startTimeMSec","mainMotionManager","L2DMotionManager","expressionManager","motions","expressions","isTexLoaded","getModelMatrix","setAlpha","a","getAlpha","isInitialized","setInitialized","v","isUpdating","setUpdating","getLive2DModel","setLipSync","setLipSyncValue","setAccel","x","y","z","setDrag","getMainMotionManager","getExpressionManager","loadModelData","path","callback","pm","Live2DFramework","getPlatformManager","logger","info","loadLive2DModel","l2dModel","saveParam","Live2D","getError","L2DModelMatrix","getCanvasWidth","getCanvasHeight","setWidth","setCenterPosition","error","loadTexture","no","texCounter","loadMotion","name","trace","motion","loadBytes","buf","Live2DMotion","loadExpression","L2DExpressionMotion","loadJson","loadPose","L2DPose","load","e","warn","loadPhysics","L2DPhysics","hitTestSimple","drawID","testX","testY","drawIndex","getDrawDataIndex","points","getTransformedPoints","left","right","top","bottom","j","length","tx","invertTransformX","ty","invertTransformY","AMotion","super","paramList","ret","json","jsonParseFromBytes","setFadeIn","parseInt","fade_in","setFadeOut","fade_out","params","paramNum","i","param","paramID","id","toString","value","parseFloat","val","calcTypeInt","TYPE_ADD","calc","TYPE_MULT","TYPE_SET","def","defaultValue","item","L2DExpressionParam","type","push","updateParamExe","model","timeMSec","weight","motionQueueEnt","addToParamFloat","multParamFloat","setParamFloat","EXPRESSION_DEFAULT","L2DEyeBlink","nextBlinkTime","stateStartTime","blinkIntervalMsec","eyeState","EYE_STATE","STATE_FIRST","closingMotionMsec","closedMotionMsec","openingMotionMsec","closeIfZero","eyeID_L","eyeID_R","calcNextBlink","UtSystem","getUserTimeMSec","Math","random","setInterval","setEyeMotion","updateParam","time","eyeParamValue","t","STATE_CLOSING","STATE_CLOSED","STATE_OPENING","STATE_INTERVAL","L2DMatrix44","tr","Float32Array","identity","mul","b","dst","c","k","getArray","getCopyMatrix","setMatrix","getScaleX","getScaleY","transformX","src","transformY","multTranslate","shiftX","shiftY","tr1","translate","translateX","translateY","multScale","scaleX","scaleY","scale","w","h","width","height","setPosition","setY","setX","centerX","centerY","setHeight","MotionQueueManager","currentPriority","reservePriority","prototype","getCurrentPriority","getReservePriority","reserveMotion","priority","setReservePriority","updated","call","isFinished","startMotionPrio","startMotion","physicsList","physics_hair","PhysicsHair","setup","resist","regist","mass","srcList","srcNum","Src","SRC_TO_X","typeStr","ptype","SRC_TO_Y","SRC_TO_G_ANGLE","UtDebug","addSrcParam","targetList","targets","targetNum","target","Target","TARGET_FROM_ANGLE","TARGET_FROM_ANGLE_V","addTargetParam","update","lastTime","lastModel","partsGroups","poseListInfo","parts_visible","poseNum","i_pose","idListInfo","group","idNum","partsGroup","i_group","partsInfo","parts","L2DPartsParam","link","linkListInfo","linkNum","i_link","linkParts","initParam","curTime","deltaTimeSec","normalizePartsOpacityGroup","copyOpacityOtherParts","initIndex","partsIndex","paramIndex","getParamFloat","setPartsOpacity","visibleParts","visibleOpacity","phi","getPartsOpacity","a1","opacity","partsParam","getParamIndex","getPartsDataIndex","PartsDataID","getID","L2DTargetPoint","EPSILON","faceTargetX","faceTargetY","faceX","faceY","faceVX","faceVY","lastTimeSec","setPoint","getX","getY","MAX_V","FRAME_RATE","curTimeSec","deltaTimeWeight","MAX_A","dx","dy","abs","d","sqrt","vy","ax","ay","max_v","cur_v","L2DViewMatrix","screenLeft","screenRight","screenTop","screenBottom","maxLeft","maxRight","maxTop","maxBottom","max","Number","MAX_VALUE","min","getMaxScale","getMinScale","setMaxScale","setMinScale","isMaxScale","isMinScale","adjustTranslate","adjustScale","cx","cy","targetScale","tr2","tr3","setScreenRect","setMaxScreenRect","getScreenLeft","getScreenRight","getScreenBottom","getScreenTop","getMaxLeft","getMaxRight","getMaxBottom","getMaxTop","platformManager","setPlatformManager","LAppDefine","MatrixStack","reset","depth","loadIdentity","currentMatrix","nextOffset","matrixStack","pop","offset","getMatrix","multMatrix","matNew","tmp","Array","ModelSettingJson","NAME","ID","MODEL","TEXTURES","HIT_AREAS","HIT_AREAS_CUSTOM","PHYSICS","POSE","EXPRESSIONS","MOTION_GROUPS","SOUND","FADE_IN","FADE_OUT","LAYOUT","INIT_PARAM","INIT_PARTS_VISIBLE","VALUE","FILE","loadModelSetting","str","String","fromCharCode","apply","Uint8Array","JSON","parse","getTextureFile","n","getModelFile","getTextureNum","getHitAreaNum","getHitAreaCustom","getHitAreaID","getHitAreaName","getPhysicsFile","getPoseFile","getExpressionNum","getExpressionFile","getExpressionName","getLayout","getInitParamNum","getMotionNum","getMotionFile","getMotionSound","getMotionFadeIn","getMotionFadeOut","getInitParamID","getInitParamValue","NaN","getInitPartsVisibleNum","getInitPartsVisibleID","getInitPartsVisibleValue","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","LAppModel","modelHomeDir","modelSetting","tmpMatrix","loadJSON","texPaths","expName","expFilePath","layout","preloadMotionGroup","stopAllMotions","modelSettingPath","substring","lastIndexOf","gl","release","deleteTexture","texture","file","PI","startRandomMotion","loadParam","sin","setRandomExpression","setExpression","motionName","mtn","setFadeInFadeOut","soundName","snd","document","createElement","play","_a","draw","hitTest","len","hitAreasCustom","PlatformManager","cache","fetch","response","arrayBuffer","Live2DModelWebGL","loadModel","loadedImage","Image","crossOrigin","onload","getElementById","getContext","premultipliedAlpha","preserveDrawingBuffer","createTexture","isPremultipliedAlpha","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","setTexture","onerror","jsonStr","bomCode","LAppLive2DManager","reloading","init","getModel","releaseModel","changeModel","oldModel","newModel","changeModelWithJSON","maxScaleEvent","minScaleEvent","tapEvent","normalizePoint","x0","y0","targetX","targetY","vx","Cubism2Model","live2DMgr","isDrawStart","canvas","dragMgr","viewMatrix","projMatrix","deviceToScreen","oldLen","_boundMouseEvent","mouseEvent","bind","_boundTouchEvent","touchEvent","initL2dCanvas","canvasId","addEventListener","ratio","setGL","clearColor","startDraw","destroy","removeEventListener","_drawFrameId","window","cancelAnimationFrame","tick","requestAnimationFrame","clear","COLOR_BUFFER_BIT","modelScaling","modelTurnHead","event","rect","getBoundingClientRect","clientX","clientY","innerWidth","innerHeight","dispatchEvent","Event","followPointer","lookFront","preventDefault","wheelDelta","touch","touches","touch1","touch2","pow","pageX","pageY","transformViewX","deviceX","screenX","transformViewY","deviceY","screenY","transformScreenX","transformScreenY"],"mappings":"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"}