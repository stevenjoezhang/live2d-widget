{"version":3,"file":"index2.js","sources":["../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmvector.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmstring.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/id/cubismid.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/id/cubismidmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismmatrix44.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmrectf.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismrenderer.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/utils/cubismdebug.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/type/csmmap.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/utils/cubismjsonextension.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/utils/cubismjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/live2dcubismframework.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappdefine.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lapppal.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappglmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/cubismdefaultparameterid.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/icubismmodelsetting.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/cubismmodelsettingjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/effect/cubismbreath.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/effect/cubismeyeblink.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/effect/cubismpose.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismmodelmatrix.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismvector2.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismmath.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismtargetpoint.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/acubismmotion.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismexpressionmotion.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionqueueentry.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionqueuemanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismexpressionmotionmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotioninternal.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotion.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/motion/cubismmotionmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/physics/cubismphysicsinternal.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/physics/cubismphysicsjson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/physics/cubismphysics.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismclippingmanager.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismshader_webgl.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/rendering/cubismrenderer_webgl.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmodel.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmoc.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmodeluserdatajson.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismmodeluserdata.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/model/cubismusermodel.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappwavfilehandler.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappmodel.js","../../build/CubismSdkForWeb-5-r.4/Framework/src/math/cubismviewmatrix.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lapplive2dmanager.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lapptexturemanager.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappsprite.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/touchmanager.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappview.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappsubdelegate.js","../../build/CubismSdkForWeb-5-r.4/Samples/TypeScript/Demo/src/lappdelegate.js","../../build/cubism5/index.js"],"sourcesContent":["export class csmVector {\n    constructor(initialCapacity = 0) {\n        if (initialCapacity < 1) {\n            this._ptr = [];\n            this._capacity = 0;\n            this._size = 0;\n        }\n        else {\n            this._ptr = new Array(initialCapacity);\n            this._capacity = initialCapacity;\n            this._size = 0;\n        }\n    }\n    at(index) {\n        return this._ptr[index];\n    }\n    set(index, value) {\n        this._ptr[index] = value;\n    }\n    get(offset = 0) {\n        const ret = new Array();\n        for (let i = offset; i < this._size; i++) {\n            ret.push(this._ptr[i]);\n        }\n        return ret;\n    }\n    pushBack(value) {\n        if (this._size >= this._capacity) {\n            this.prepareCapacity(this._capacity == 0 ? csmVector.DefaultSize : this._capacity * 2);\n        }\n        this._ptr[this._size++] = value;\n    }\n    clear() {\n        this._ptr.length = 0;\n        this._size = 0;\n    }\n    getSize() {\n        return this._size;\n    }\n    assign(newSize, value) {\n        const curSize = this._size;\n        if (curSize < newSize) {\n            this.prepareCapacity(newSize);\n        }\n        for (let i = 0; i < newSize; i++) {\n            this._ptr[i] = value;\n        }\n        this._size = newSize;\n    }\n    resize(newSize, value = null) {\n        this.updateSize(newSize, value, true);\n    }\n    updateSize(newSize, value = null, callPlacementNew = true) {\n        const curSize = this._size;\n        if (curSize < newSize) {\n            this.prepareCapacity(newSize);\n            if (callPlacementNew) {\n                for (let i = this._size; i < newSize; i++) {\n                    if (typeof value == 'function') {\n                        this._ptr[i] = JSON.parse(JSON.stringify(new value()));\n                    }\n                    else {\n                        this._ptr[i] = value;\n                    }\n                }\n            }\n            else {\n                for (let i = this._size; i < newSize; i++) {\n                    this._ptr[i] = value;\n                }\n            }\n        }\n        else {\n            const sub = this._size - newSize;\n            this._ptr.splice(this._size - sub, sub);\n        }\n        this._size = newSize;\n    }\n    insert(position, begin, end) {\n        let dstSi = position._index;\n        const srcSi = begin._index;\n        const srcEi = end._index;\n        const addCount = srcEi - srcSi;\n        this.prepareCapacity(this._size + addCount);\n        const addSize = this._size - dstSi;\n        if (addSize > 0) {\n            for (let i = 0; i < addSize; i++) {\n                this._ptr.splice(dstSi + i, 0, null);\n            }\n        }\n        for (let i = srcSi; i < srcEi; i++, dstSi++) {\n            this._ptr[dstSi] = begin._vector._ptr[i];\n        }\n        this._size = this._size + addCount;\n    }\n    remove(index) {\n        if (index < 0 || this._size <= index) {\n            return false;\n        }\n        this._ptr.splice(index, 1);\n        --this._size;\n        return true;\n    }\n    erase(ite) {\n        const index = ite._index;\n        if (index < 0 || this._size <= index) {\n            return ite;\n        }\n        this._ptr.splice(index, 1);\n        --this._size;\n        const ite2 = new iterator(this, index);\n        return ite2;\n    }\n    prepareCapacity(newSize) {\n        if (newSize > this._capacity) {\n            if (this._capacity == 0) {\n                this._ptr = new Array(newSize);\n                this._capacity = newSize;\n            }\n            else {\n                this._ptr.length = newSize;\n                this._capacity = newSize;\n            }\n        }\n    }\n    begin() {\n        const ite = this._size == 0 ? this.end() : new iterator(this, 0);\n        return ite;\n    }\n    end() {\n        const ite = new iterator(this, this._size);\n        return ite;\n    }\n    getOffset(offset) {\n        const newVector = new csmVector();\n        newVector._ptr = this.get(offset);\n        newVector._size = this.get(offset).length;\n        newVector._capacity = this.get(offset).length;\n        return newVector;\n    }\n}\ncsmVector.DefaultSize = 10;\nexport class iterator {\n    constructor(v, index) {\n        this._vector = v != undefined ? v : null;\n        this._index = index != undefined ? index : 0;\n    }\n    set(ite) {\n        this._index = ite._index;\n        this._vector = ite._vector;\n        return this;\n    }\n    preIncrement() {\n        ++this._index;\n        return this;\n    }\n    preDecrement() {\n        --this._index;\n        return this;\n    }\n    increment() {\n        const iteold = new iterator(this._vector, this._index++);\n        return iteold;\n    }\n    decrement() {\n        const iteold = new iterator(this._vector, this._index--);\n        return iteold;\n    }\n    ptr() {\n        return this._vector._ptr[this._index];\n    }\n    substitution(ite) {\n        this._index = ite._index;\n        this._vector = ite._vector;\n        return this;\n    }\n    notEqual(ite) {\n        return this._index != ite._index || this._vector != ite._vector;\n    }\n}\nimport * as $ from './csmvector';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmVector = $.csmVector;\n    Live2DCubismFramework.iterator = $.iterator;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class csmString {\n    append(c, length) {\n        this.s += length !== undefined ? c.substr(0, length) : c;\n        return this;\n    }\n    expansion(length, v) {\n        for (let i = 0; i < length; i++) {\n            this.append(v);\n        }\n        return this;\n    }\n    getBytes() {\n        return encodeURIComponent(this.s).replace(/%../g, 'x').length;\n    }\n    getLength() {\n        return this.s.length;\n    }\n    isLess(s) {\n        return this.s < s.s;\n    }\n    isGreat(s) {\n        return this.s > s.s;\n    }\n    isEqual(s) {\n        return this.s == s;\n    }\n    isEmpty() {\n        return this.s.length == 0;\n    }\n    constructor(s) {\n        this.s = s;\n    }\n}\nimport * as $ from './csmstring';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmString = $.csmString;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmString } from '../type/csmstring';\nexport class CubismId {\n    static createIdInternal(id) {\n        return new CubismId(id);\n    }\n    getString() {\n        return this._id;\n    }\n    isEqual(c) {\n        if (typeof c === 'string') {\n            return this._id.isEqual(c);\n        }\n        else if (c instanceof csmString) {\n            return this._id.isEqual(c.s);\n        }\n        else if (c instanceof CubismId) {\n            return this._id.isEqual(c._id.s);\n        }\n        return false;\n    }\n    isNotEqual(c) {\n        if (typeof c == 'string') {\n            return !this._id.isEqual(c);\n        }\n        else if (c instanceof csmString) {\n            return !this._id.isEqual(c.s);\n        }\n        else if (c instanceof CubismId) {\n            return !this._id.isEqual(c._id.s);\n        }\n        return false;\n    }\n    constructor(id) {\n        if (typeof id === 'string') {\n            this._id = new csmString(id);\n            return;\n        }\n        this._id = id;\n    }\n}\nimport * as $ from './cubismid';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismId = $.CubismId;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmVector } from '../type/csmvector';\nimport { CubismId } from './cubismid';\nexport class CubismIdManager {\n    constructor() {\n        this._ids = new csmVector();\n    }\n    release() {\n        for (let i = 0; i < this._ids.getSize(); ++i) {\n            this._ids.set(i, void 0);\n        }\n        this._ids = null;\n    }\n    registerIds(ids) {\n        for (let i = 0; i < ids.length; i++) {\n            this.registerId(ids[i]);\n        }\n    }\n    registerId(id) {\n        let result = null;\n        if ('string' == typeof id) {\n            if ((result = this.findId(id)) != null) {\n                return result;\n            }\n            result = CubismId.createIdInternal(id);\n            this._ids.pushBack(result);\n        }\n        else {\n            return this.registerId(id.s);\n        }\n        return result;\n    }\n    getId(id) {\n        return this.registerId(id);\n    }\n    isExist(id) {\n        if ('string' == typeof id) {\n            return this.findId(id) != null;\n        }\n        return this.isExist(id.s);\n    }\n    findId(id) {\n        for (let i = 0; i < this._ids.getSize(); ++i) {\n            if (this._ids.at(i).getString().isEqual(id)) {\n                return this._ids.at(i);\n            }\n        }\n        return null;\n    }\n}\nimport * as $ from './cubismidmanager';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismIdManager = $.CubismIdManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class CubismMatrix44 {\n    constructor() {\n        this._tr = new Float32Array(16);\n        this.loadIdentity();\n    }\n    static multiply(a, b, dst) {\n        const c = new Float32Array([\n            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n            0.0\n        ]);\n        const n = 4;\n        for (let i = 0; i < n; ++i) {\n            for (let j = 0; j < n; ++j) {\n                for (let k = 0; k < n; ++k) {\n                    c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n                }\n            }\n        }\n        for (let i = 0; i < 16; ++i) {\n            dst[i] = c[i];\n        }\n    }\n    loadIdentity() {\n        const c = new Float32Array([\n            1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,\n            1.0\n        ]);\n        this.setMatrix(c);\n    }\n    setMatrix(tr) {\n        for (let i = 0; i < 16; ++i) {\n            this._tr[i] = tr[i];\n        }\n    }\n    getArray() {\n        return this._tr;\n    }\n    getScaleX() {\n        return this._tr[0];\n    }\n    getScaleY() {\n        return this._tr[5];\n    }\n    getTranslateX() {\n        return this._tr[12];\n    }\n    getTranslateY() {\n        return this._tr[13];\n    }\n    transformX(src) {\n        return this._tr[0] * src + this._tr[12];\n    }\n    transformY(src) {\n        return this._tr[5] * src + this._tr[13];\n    }\n    invertTransformX(src) {\n        return (src - this._tr[12]) / this._tr[0];\n    }\n    invertTransformY(src) {\n        return (src - this._tr[13]) / this._tr[5];\n    }\n    translateRelative(x, y) {\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            x,\n            y,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    translate(x, y) {\n        this._tr[12] = x;\n        this._tr[13] = y;\n    }\n    translateX(x) {\n        this._tr[12] = x;\n    }\n    translateY(y) {\n        this._tr[13] = y;\n    }\n    scaleRelative(x, y) {\n        const tr1 = new Float32Array([\n            x,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            y,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    scale(x, y) {\n        this._tr[0] = x;\n        this._tr[5] = y;\n    }\n    multiplyByMatrix(m) {\n        CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    clone() {\n        const cloneMatrix = new CubismMatrix44();\n        for (let i = 0; i < this._tr.length; i++) {\n            cloneMatrix._tr[i] = this._tr[i];\n        }\n        return cloneMatrix;\n    }\n}\nimport * as $ from './cubismmatrix44';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMatrix44 = $.CubismMatrix44;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class csmRect {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    getCenterX() {\n        return this.x + 0.5 * this.width;\n    }\n    getCenterY() {\n        return this.y + 0.5 * this.height;\n    }\n    getRight() {\n        return this.x + this.width;\n    }\n    getBottom() {\n        return this.y + this.height;\n    }\n    setRect(r) {\n        this.x = r.x;\n        this.y = r.y;\n        this.width = r.width;\n        this.height = r.height;\n    }\n    expand(w, h) {\n        this.x -= w;\n        this.y -= h;\n        this.width += w * 2.0;\n        this.height += h * 2.0;\n    }\n}\nimport * as $ from './csmrectf';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmRect = $.csmRect;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { csmRect } from '../type/csmrectf';\nexport class CubismRenderer {\n    static create() {\n        return null;\n    }\n    static delete(renderer) {\n        renderer = null;\n    }\n    initialize(model) {\n        this._model = model;\n    }\n    drawModel() {\n        if (this.getModel() == null)\n            return;\n        this.saveProfile();\n        this.doDrawModel();\n        this.restoreProfile();\n    }\n    setMvpMatrix(matrix44) {\n        this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    getMvpMatrix() {\n        return this._mvpMatrix4x4;\n    }\n    setModelColor(red, green, blue, alpha) {\n        if (red < 0.0) {\n            red = 0.0;\n        }\n        else if (red > 1.0) {\n            red = 1.0;\n        }\n        if (green < 0.0) {\n            green = 0.0;\n        }\n        else if (green > 1.0) {\n            green = 1.0;\n        }\n        if (blue < 0.0) {\n            blue = 0.0;\n        }\n        else if (blue > 1.0) {\n            blue = 1.0;\n        }\n        if (alpha < 0.0) {\n            alpha = 0.0;\n        }\n        else if (alpha > 1.0) {\n            alpha = 1.0;\n        }\n        this._modelColor.r = red;\n        this._modelColor.g = green;\n        this._modelColor.b = blue;\n        this._modelColor.a = alpha;\n    }\n    getModelColor() {\n        return JSON.parse(JSON.stringify(this._modelColor));\n    }\n    getModelColorWithOpacity(opacity) {\n        const modelColorRGBA = this.getModelColor();\n        modelColorRGBA.a *= opacity;\n        if (this.isPremultipliedAlpha()) {\n            modelColorRGBA.r *= modelColorRGBA.a;\n            modelColorRGBA.g *= modelColorRGBA.a;\n            modelColorRGBA.b *= modelColorRGBA.a;\n        }\n        return modelColorRGBA;\n    }\n    setIsPremultipliedAlpha(enable) {\n        this._isPremultipliedAlpha = enable;\n    }\n    isPremultipliedAlpha() {\n        return this._isPremultipliedAlpha;\n    }\n    setIsCulling(culling) {\n        this._isCulling = culling;\n    }\n    isCulling() {\n        return this._isCulling;\n    }\n    setAnisotropy(n) {\n        this._anisotropy = n;\n    }\n    getAnisotropy() {\n        return this._anisotropy;\n    }\n    getModel() {\n        return this._model;\n    }\n    useHighPrecisionMask(high) {\n        this._useHighPrecisionMask = high;\n    }\n    isUsingHighPrecisionMask() {\n        return this._useHighPrecisionMask;\n    }\n    constructor() {\n        this._isCulling = false;\n        this._isPremultipliedAlpha = false;\n        this._anisotropy = 0.0;\n        this._model = null;\n        this._modelColor = new CubismTextureColor();\n        this._useHighPrecisionMask = false;\n        this._mvpMatrix4x4 = new CubismMatrix44();\n        this._mvpMatrix4x4.loadIdentity();\n    }\n}\nexport var CubismBlendMode;\n(function (CubismBlendMode) {\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode[CubismBlendMode[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n})(CubismBlendMode || (CubismBlendMode = {}));\nexport class CubismTextureColor {\n    constructor(r = 1.0, g = 1.0, b = 1.0, a = 1.0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n}\nexport class CubismClippingContext {\n    constructor(clippingDrawableIndices, clipCount) {\n        this._clippingIdList = clippingDrawableIndices;\n        this._clippingIdCount = clipCount;\n        this._allClippedDrawRect = new csmRect();\n        this._layoutBounds = new csmRect();\n        this._clippedDrawableIndexList = [];\n        this._matrixForMask = new CubismMatrix44();\n        this._matrixForDraw = new CubismMatrix44();\n        this._bufferIndex = 0;\n    }\n    release() {\n        if (this._layoutBounds != null) {\n            this._layoutBounds = null;\n        }\n        if (this._allClippedDrawRect != null) {\n            this._allClippedDrawRect = null;\n        }\n        if (this._clippedDrawableIndexList != null) {\n            this._clippedDrawableIndexList = null;\n        }\n    }\n    addClippedDrawable(drawableIndex) {\n        this._clippedDrawableIndexList.push(drawableIndex);\n    }\n}\nimport * as $ from './cubismrenderer';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismBlendMode = $.CubismBlendMode;\n    Live2DCubismFramework.CubismRenderer = $.CubismRenderer;\n    Live2DCubismFramework.CubismTextureColor = $.CubismTextureColor;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CSM_LOG_LEVEL, CSM_LOG_LEVEL_DEBUG, CSM_LOG_LEVEL_ERROR, CSM_LOG_LEVEL_INFO, CSM_LOG_LEVEL_VERBOSE, CSM_LOG_LEVEL_WARNING } from '../cubismframeworkconfig';\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\nexport const CubismLogPrint = (level, fmt, args) => {\n    CubismDebug.print(level, '[CSM]' + fmt, args);\n};\nexport const CubismLogPrintIn = (level, fmt, args) => {\n    CubismLogPrint(level, fmt + '\\n', args);\n};\nexport const CSM_ASSERT = (expr) => {\n    console.assert(expr);\n};\nexport let CubismLogVerbose;\nexport let CubismLogDebug;\nexport let CubismLogInfo;\nexport let CubismLogWarning;\nexport let CubismLogError;\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n    CubismLogVerbose = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n    };\n    CubismLogDebug = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n    };\n    CubismLogInfo = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n    CubismLogDebug = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n    };\n    CubismLogInfo = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n    CubismLogInfo = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n    };\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n    CubismLogWarning = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n    };\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nelse if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n    CubismLogError = (fmt, ...args) => {\n        CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n    };\n}\nexport class CubismDebug {\n    static print(logLevel, format, args) {\n        if (logLevel < CubismFramework.getLoggingLevel()) {\n            return;\n        }\n        const logPrint = CubismFramework.coreLogFunction;\n        if (!logPrint)\n            return;\n        const buffer = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n            return args[k];\n        });\n        logPrint(buffer);\n    }\n    static dumpBytes(logLevel, data, length) {\n        for (let i = 0; i < length; i++) {\n            if (i % 16 == 0 && i > 0)\n                this.print(logLevel, '\\n');\n            else if (i % 8 == 0 && i > 0)\n                this.print(logLevel, '  ');\n            this.print(logLevel, '{0} ', [data[i] & 0xff]);\n        }\n        this.print(logLevel, '\\n');\n    }\n    constructor() { }\n}\nimport * as $ from './cubismdebug';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismDebug = $.CubismDebug;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismLogDebug, CubismLogWarning } from '../utils/cubismdebug';\nexport class csmPair {\n    constructor(key, value) {\n        this.first = key == undefined ? null : key;\n        this.second = value == undefined ? null : value;\n    }\n}\nexport class csmMap {\n    constructor(size) {\n        if (size != undefined) {\n            if (size < 1) {\n                this._keyValues = [];\n                this._dummyValue = null;\n                this._size = 0;\n            }\n            else {\n                this._keyValues = new Array(size);\n                this._size = size;\n            }\n        }\n        else {\n            this._keyValues = [];\n            this._dummyValue = null;\n            this._size = 0;\n        }\n    }\n    release() {\n        this.clear();\n    }\n    appendKey(key) {\n        let findIndex = -1;\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                findIndex = i;\n                break;\n            }\n        }\n        if (findIndex != -1) {\n            CubismLogWarning('The key `{0}` is already append.', key);\n            return;\n        }\n        this.prepareCapacity(this._size + 1, false);\n        this._keyValues[this._size] = new csmPair(key);\n        this._size += 1;\n    }\n    getValue(key) {\n        let found = -1;\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                found = i;\n                break;\n            }\n        }\n        if (found >= 0) {\n            return this._keyValues[found].second;\n        }\n        else {\n            this.appendKey(key);\n            return this._keyValues[this._size - 1].second;\n        }\n    }\n    setValue(key, value) {\n        let found = -1;\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                found = i;\n                break;\n            }\n        }\n        if (found >= 0) {\n            this._keyValues[found].second = value;\n        }\n        else {\n            this.appendKey(key);\n            this._keyValues[this._size - 1].second = value;\n        }\n    }\n    isExist(key) {\n        for (let i = 0; i < this._size; i++) {\n            if (this._keyValues[i].first == key) {\n                return true;\n            }\n        }\n        return false;\n    }\n    clear() {\n        this._keyValues = void 0;\n        this._keyValues = null;\n        this._keyValues = [];\n        this._size = 0;\n    }\n    getSize() {\n        return this._size;\n    }\n    prepareCapacity(newSize, fitToSize) {\n        if (newSize > this._keyValues.length) {\n            if (this._keyValues.length == 0) {\n                if (!fitToSize && newSize < csmMap.DefaultSize)\n                    newSize = csmMap.DefaultSize;\n                this._keyValues.length = newSize;\n            }\n            else {\n                if (!fitToSize && newSize < this._keyValues.length * 2)\n                    newSize = this._keyValues.length * 2;\n                this._keyValues.length = newSize;\n            }\n        }\n    }\n    begin() {\n        const ite = new iterator(this, 0);\n        return ite;\n    }\n    end() {\n        const ite = new iterator(this, this._size);\n        return ite;\n    }\n    erase(ite) {\n        const index = ite._index;\n        if (index < 0 || this._size <= index) {\n            return ite;\n        }\n        this._keyValues.splice(index, 1);\n        --this._size;\n        const ite2 = new iterator(this, index);\n        return ite2;\n    }\n    dumpAsInt() {\n        for (let i = 0; i < this._size; i++) {\n            CubismLogDebug('{0} ,', this._keyValues[i]);\n            CubismLogDebug('\\n');\n        }\n    }\n}\ncsmMap.DefaultSize = 10;\nexport class iterator {\n    constructor(v, idx) {\n        this._map = v != undefined ? v : new csmMap();\n        this._index = idx != undefined ? idx : 0;\n    }\n    set(ite) {\n        this._index = ite._index;\n        this._map = ite._map;\n        return this;\n    }\n    preIncrement() {\n        ++this._index;\n        return this;\n    }\n    preDecrement() {\n        --this._index;\n        return this;\n    }\n    increment() {\n        const iteold = new iterator(this._map, this._index++);\n        return iteold;\n    }\n    decrement() {\n        const iteold = new iterator(this._map, this._index);\n        this._map = iteold._map;\n        this._index = iteold._index;\n        return this;\n    }\n    ptr() {\n        return this._map._keyValues[this._index];\n    }\n    notEqual(ite) {\n        return this._index != ite._index || this._map != ite._map;\n    }\n}\nimport * as $ from './csmmap';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.csmMap = $.csmMap;\n    Live2DCubismFramework.csmPair = $.csmPair;\n    Live2DCubismFramework.iterator = $.iterator;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { JsonArray, JsonBoolean, JsonFloat, JsonMap, JsonNullvalue, JsonString } from './cubismjson';\nexport class CubismJsonExtension {\n    static parseJsonObject(obj, map) {\n        Object.keys(obj).forEach(key => {\n            if (typeof obj[key] == 'boolean') {\n                const convValue = Boolean(obj[key]);\n                map.put(key, new JsonBoolean(convValue));\n            }\n            else if (typeof obj[key] == 'string') {\n                const convValue = String(obj[key]);\n                map.put(key, new JsonString(convValue));\n            }\n            else if (typeof obj[key] == 'number') {\n                const convValue = Number(obj[key]);\n                map.put(key, new JsonFloat(convValue));\n            }\n            else if (obj[key] instanceof Array) {\n                map.put(key, CubismJsonExtension.parseJsonArray(obj[key]));\n            }\n            else if (obj[key] instanceof Object) {\n                map.put(key, CubismJsonExtension.parseJsonObject(obj[key], new JsonMap()));\n            }\n            else if (obj[key] == null) {\n                map.put(key, new JsonNullvalue());\n            }\n            else {\n                map.put(key, obj[key]);\n            }\n        });\n        return map;\n    }\n    static parseJsonArray(obj) {\n        const arr = new JsonArray();\n        Object.keys(obj).forEach(key => {\n            const convKey = Number(key);\n            if (typeof convKey == 'number') {\n                if (typeof obj[key] == 'boolean') {\n                    const convValue = Boolean(obj[key]);\n                    arr.add(new JsonBoolean(convValue));\n                }\n                else if (typeof obj[key] == 'string') {\n                    const convValue = String(obj[key]);\n                    arr.add(new JsonString(convValue));\n                }\n                else if (typeof obj[key] == 'number') {\n                    const convValue = Number(obj[key]);\n                    arr.add(new JsonFloat(convValue));\n                }\n                else if (obj[key] instanceof Array) {\n                    arr.add(this.parseJsonArray(obj[key]));\n                }\n                else if (obj[key] instanceof Object) {\n                    arr.add(this.parseJsonObject(obj[key], new JsonMap()));\n                }\n                else if (obj[key] == null) {\n                    arr.add(new JsonNullvalue());\n                }\n                else {\n                    arr.add(obj[key]);\n                }\n            }\n            else if (obj[key] instanceof Array) {\n                arr.add(this.parseJsonArray(obj[key]));\n            }\n            else if (obj[key] instanceof Object) {\n                arr.add(this.parseJsonObject(obj[key], new JsonMap()));\n            }\n            else if (obj[key] == null) {\n                arr.add(new JsonNullvalue());\n            }\n            else {\n                const convValue = Array(obj[key]);\n                for (let i = 0; i < convValue.length; i++) {\n                    arr.add(convValue[i]);\n                }\n            }\n        });\n        return arr;\n    }\n}\n","import { strtod } from '../live2dcubismframework';\nimport { csmMap } from '../type/csmmap';\nimport { csmString } from '../type/csmstring';\nimport { csmVector } from '../type/csmvector';\nimport { CubismLogInfo } from './cubismdebug';\nconst CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\nconst CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\nexport class Value {\n    constructor() { }\n    getRawString(defaultValue, indent) {\n        return this.getString(defaultValue, indent);\n    }\n    toInt(defaultValue = 0) {\n        return defaultValue;\n    }\n    toFloat(defaultValue = 0) {\n        return defaultValue;\n    }\n    toBoolean(defaultValue = false) {\n        return defaultValue;\n    }\n    getSize() {\n        return 0;\n    }\n    getArray(defaultValue = null) {\n        return defaultValue;\n    }\n    getVector(defaultValue = new csmVector()) {\n        return defaultValue;\n    }\n    getMap(defaultValue) {\n        return defaultValue;\n    }\n    getValueByIndex(index) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getValueByString(s) {\n        return Value.nullValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getKeys() {\n        return Value.dummyKeys;\n    }\n    isError() {\n        return false;\n    }\n    isNull() {\n        return false;\n    }\n    isBool() {\n        return false;\n    }\n    isFloat() {\n        return false;\n    }\n    isString() {\n        return false;\n    }\n    isArray() {\n        return false;\n    }\n    isMap() {\n        return false;\n    }\n    equals(value) {\n        return false;\n    }\n    isStatic() {\n        return false;\n    }\n    setErrorNotForClientCall(errorStr) {\n        return JsonError.errorValue;\n    }\n    static staticInitializeNotForClientCall() {\n        JsonBoolean.trueValue = new JsonBoolean(true);\n        JsonBoolean.falseValue = new JsonBoolean(false);\n        Value.errorValue = new JsonError('ERROR', true);\n        Value.nullValue = new JsonNullvalue();\n        Value.dummyKeys = new csmVector();\n    }\n    static staticReleaseNotForClientCall() {\n        JsonBoolean.trueValue = null;\n        JsonBoolean.falseValue = null;\n        Value.errorValue = null;\n        Value.nullValue = null;\n        Value.dummyKeys = null;\n    }\n}\nexport class CubismJson {\n    constructor(buffer, length) {\n        this._parseCallback = CubismJsonExtension.parseJsonObject;\n        this._error = null;\n        this._lineCount = 0;\n        this._root = null;\n        if (buffer != undefined) {\n            this.parseBytes(buffer, length, this._parseCallback);\n        }\n    }\n    static create(buffer, size) {\n        const json = new CubismJson();\n        const succeeded = json.parseBytes(buffer, size, json._parseCallback);\n        if (!succeeded) {\n            CubismJson.delete(json);\n            return null;\n        }\n        else {\n            return json;\n        }\n    }\n    static delete(instance) {\n        instance = null;\n    }\n    getRoot() {\n        return this._root;\n    }\n    static arrayBufferToString(buffer) {\n        const uint8Array = new Uint8Array(buffer);\n        let str = '';\n        for (let i = 0, len = uint8Array.length; i < len; ++i) {\n            str += '%' + this.pad(uint8Array[i].toString(16));\n        }\n        str = decodeURIComponent(str);\n        return str;\n    }\n    static pad(n) {\n        return n.length < 2 ? '0' + n : n;\n    }\n    parseBytes(buffer, size, parseCallback) {\n        const endPos = new Array(1);\n        const decodeBuffer = CubismJson.arrayBufferToString(buffer);\n        if (parseCallback == undefined) {\n            this._root = this.parseValue(decodeBuffer, size, 0, endPos);\n        }\n        else {\n            this._root = parseCallback(JSON.parse(decodeBuffer), new JsonMap());\n        }\n        if (this._error) {\n            let strbuf = '\\0';\n            strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\n';\n            this._root = new JsonString(strbuf);\n            CubismLogInfo('{0}', this._root.getRawString());\n            return false;\n        }\n        else if (this._root == null) {\n            this._root = new JsonError(new csmString(this._error), false);\n            return false;\n        }\n        return true;\n    }\n    getParseError() {\n        return this._error;\n    }\n    checkEndOfFile() {\n        return this._root.getArray()[1].equals('EOF');\n    }\n    parseValue(buffer, length, begin, outEndPos) {\n        if (this._error)\n            return null;\n        let o = null;\n        let i = begin;\n        let f;\n        for (; i < length; i++) {\n            const c = buffer[i];\n            switch (c) {\n                case '-':\n                case '.':\n                case '0':\n                case '1':\n                case '2':\n                case '3':\n                case '4':\n                case '5':\n                case '6':\n                case '7':\n                case '8':\n                case '9': {\n                    const afterString = new Array(1);\n                    f = strtod(buffer.slice(i), afterString);\n                    outEndPos[0] = buffer.indexOf(afterString[0]);\n                    return new JsonFloat(f);\n                }\n                case '\"':\n                    return new JsonString(this.parseString(buffer, length, i + 1, outEndPos));\n                case '[':\n                    o = this.parseArray(buffer, length, i + 1, outEndPos);\n                    return o;\n                case '{':\n                    o = this.parseObject(buffer, length, i + 1, outEndPos);\n                    return o;\n                case 'n':\n                    if (i + 3 < length) {\n                        o = new JsonNullvalue();\n                        outEndPos[0] = i + 4;\n                    }\n                    else {\n                        this._error = 'parse null';\n                    }\n                    return o;\n                case 't':\n                    if (i + 3 < length) {\n                        o = JsonBoolean.trueValue;\n                        outEndPos[0] = i + 4;\n                    }\n                    else {\n                        this._error = 'parse true';\n                    }\n                    return o;\n                case 'f':\n                    if (i + 4 < length) {\n                        o = JsonBoolean.falseValue;\n                        outEndPos[0] = i + 5;\n                    }\n                    else {\n                        this._error = \"illegal ',' position\";\n                    }\n                    return o;\n                case ',':\n                    this._error = \"illegal ',' position\";\n                    return null;\n                case ']':\n                    outEndPos[0] = i;\n                    return null;\n                case '\\n':\n                    this._lineCount++;\n                case ' ':\n                case '\\t':\n                case '\\r':\n                default:\n                    break;\n            }\n        }\n        this._error = 'illegal end of value';\n        return null;\n    }\n    parseString(string, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!string) {\n            this._error = 'string is null';\n            return null;\n        }\n        let i = begin;\n        let c, c2;\n        const ret = new csmString('');\n        let bufStart = begin;\n        for (; i < length; i++) {\n            c = string[i];\n            switch (c) {\n                case '\"': {\n                    outEndPos[0] = i + 1;\n                    ret.append(string.slice(bufStart), i - bufStart);\n                    return ret.s;\n                }\n                case '//': {\n                    i++;\n                    if (i - 1 > bufStart) {\n                        ret.append(string.slice(bufStart), i - bufStart);\n                    }\n                    bufStart = i + 1;\n                    if (i < length) {\n                        c2 = string[i];\n                        switch (c2) {\n                            case '\\\\':\n                                ret.expansion(1, '\\\\');\n                                break;\n                            case '\"':\n                                ret.expansion(1, '\"');\n                                break;\n                            case '/':\n                                ret.expansion(1, '/');\n                                break;\n                            case 'b':\n                                ret.expansion(1, '\\b');\n                                break;\n                            case 'f':\n                                ret.expansion(1, '\\f');\n                                break;\n                            case 'n':\n                                ret.expansion(1, '\\n');\n                                break;\n                            case 'r':\n                                ret.expansion(1, '\\r');\n                                break;\n                            case 't':\n                                ret.expansion(1, '\\t');\n                                break;\n                            case 'u':\n                                this._error = 'parse string/unicord escape not supported';\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                    else {\n                        this._error = 'parse string/escape error';\n                    }\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n        this._error = 'parse string/illegal end';\n        return null;\n    }\n    parseObject(buffer, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!buffer) {\n            this._error = 'buffer is null';\n            return null;\n        }\n        const ret = new JsonMap();\n        let key = '';\n        let i = begin;\n        let c = '';\n        const localRetEndPos2 = Array(1);\n        let ok = false;\n        for (; i < length; i++) {\n            FOR_LOOP: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case '\"':\n                        key = this.parseString(buffer, length, i + 1, localRetEndPos2);\n                        if (this._error) {\n                            return null;\n                        }\n                        i = localRetEndPos2[0];\n                        ok = true;\n                        break FOR_LOOP;\n                    case '}':\n                        outEndPos[0] = i + 1;\n                        return ret;\n                    case ':':\n                        this._error = \"illegal ':' position\";\n                        break;\n                    case '\\n':\n                        this._lineCount++;\n                    default:\n                        break;\n                }\n            }\n            if (!ok) {\n                this._error = 'key not found';\n                return null;\n            }\n            ok = false;\n            FOR_LOOP2: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case ':':\n                        ok = true;\n                        i++;\n                        break FOR_LOOP2;\n                    case '}':\n                        this._error = \"illegal '}' position\";\n                        break;\n                    case '\\n':\n                        this._lineCount++;\n                    default:\n                        break;\n                }\n            }\n            if (!ok) {\n                this._error = \"':' not found\";\n                return null;\n            }\n            const value = this.parseValue(buffer, length, i, localRetEndPos2);\n            if (this._error) {\n                return null;\n            }\n            i = localRetEndPos2[0];\n            ret.put(key, value);\n            FOR_LOOP3: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case ',':\n                        break FOR_LOOP3;\n                    case '}':\n                        outEndPos[0] = i + 1;\n                        return ret;\n                    case '\\n':\n                        this._lineCount++;\n                    default:\n                        break;\n                }\n            }\n        }\n        this._error = 'illegal end of perseObject';\n        return null;\n    }\n    parseArray(buffer, length, begin, outEndPos) {\n        if (this._error) {\n            return null;\n        }\n        if (!buffer) {\n            this._error = 'buffer is null';\n            return null;\n        }\n        let ret = new JsonArray();\n        let i = begin;\n        let c;\n        const localRetEndpos2 = new Array(1);\n        for (; i < length; i++) {\n            const value = this.parseValue(buffer, length, i, localRetEndpos2);\n            if (this._error) {\n                return null;\n            }\n            i = localRetEndpos2[0];\n            if (value) {\n                ret.add(value);\n            }\n            FOR_LOOP: for (; i < length; i++) {\n                c = buffer[i];\n                switch (c) {\n                    case ',':\n                        break FOR_LOOP;\n                    case ']':\n                        outEndPos[0] = i + 1;\n                        return ret;\n                    case '\\n':\n                        ++this._lineCount;\n                    default:\n                        break;\n                }\n            }\n        }\n        ret = void 0;\n        this._error = 'illegal end of parseObject';\n        return null;\n    }\n}\nexport class JsonFloat extends Value {\n    constructor(v) {\n        super();\n        this._value = v;\n    }\n    isFloat() {\n        return true;\n    }\n    getString(defaultValue, indent) {\n        const strbuf = '\\0';\n        this._value = parseFloat(strbuf);\n        this._stringBuffer = strbuf;\n        return this._stringBuffer;\n    }\n    toInt(defaultValue = 0) {\n        return parseInt(this._value.toString());\n    }\n    toFloat(defaultValue = 0.0) {\n        return this._value;\n    }\n    equals(value) {\n        if ('number' === typeof value) {\n            if (Math.round(value)) {\n                return false;\n            }\n            else {\n                return value == this._value;\n            }\n        }\n        return false;\n    }\n}\nexport class JsonBoolean extends Value {\n    isBool() {\n        return true;\n    }\n    toBoolean(defaultValue = false) {\n        return this._boolValue;\n    }\n    getString(defaultValue, indent) {\n        this._stringBuffer = this._boolValue ? 'true' : 'false';\n        return this._stringBuffer;\n    }\n    equals(value) {\n        if ('boolean' === typeof value) {\n            return value == this._boolValue;\n        }\n        return false;\n    }\n    isStatic() {\n        return true;\n    }\n    constructor(v) {\n        super();\n        this._boolValue = v;\n    }\n}\nexport class JsonString extends Value {\n    constructor(s) {\n        super();\n        if ('string' === typeof s) {\n            this._stringBuffer = s;\n        }\n        if (s instanceof csmString) {\n            this._stringBuffer = s.s;\n        }\n    }\n    isString() {\n        return true;\n    }\n    getString(defaultValue, indent) {\n        return this._stringBuffer;\n    }\n    equals(value) {\n        if ('string' === typeof value) {\n            return this._stringBuffer == value;\n        }\n        if (value instanceof csmString) {\n            return this._stringBuffer == value.s;\n        }\n        return false;\n    }\n}\nexport class JsonError extends JsonString {\n    isStatic() {\n        return this._isStatic;\n    }\n    setErrorNotForClientCall(s) {\n        this._stringBuffer = s;\n        return this;\n    }\n    constructor(s, isStatic) {\n        if ('string' === typeof s) {\n            super(s);\n        }\n        else {\n            super(s);\n        }\n        this._isStatic = isStatic;\n    }\n    isError() {\n        return true;\n    }\n}\nexport class JsonNullvalue extends Value {\n    isNull() {\n        return true;\n    }\n    getString(defaultValue, indent) {\n        return this._stringBuffer;\n    }\n    isStatic() {\n        return true;\n    }\n    setErrorNotForClientCall(s) {\n        this._stringBuffer = s;\n        return JsonError.nullValue;\n    }\n    constructor() {\n        super();\n        this._stringBuffer = 'NullValue';\n    }\n}\nexport class JsonArray extends Value {\n    constructor() {\n        super();\n        this._array = new csmVector();\n    }\n    release() {\n        for (let ite = this._array.begin(); ite.notEqual(this._array.end()); ite.preIncrement()) {\n            let v = ite.ptr();\n            if (v && !v.isStatic()) {\n                v = void 0;\n                v = null;\n            }\n        }\n    }\n    isArray() {\n        return true;\n    }\n    getValueByIndex(index) {\n        if (index < 0 || this._array.getSize() <= index) {\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_INDEX_OF_BOUNDS);\n        }\n        const v = this._array.at(index);\n        if (v == null) {\n            return Value.nullValue;\n        }\n        return v;\n    }\n    getValueByString(s) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getString(defaultValue, indent) {\n        const stringBuffer = indent + '[\\n';\n        for (let ite = this._array.begin(); ite.notEqual(this._array.end()); ite.increment()) {\n            const v = ite.ptr();\n            this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\n';\n        }\n        this._stringBuffer = stringBuffer + indent + ']\\n';\n        return this._stringBuffer;\n    }\n    add(v) {\n        this._array.pushBack(v);\n    }\n    getVector(defaultValue = null) {\n        return this._array;\n    }\n    getSize() {\n        return this._array.getSize();\n    }\n}\nexport class JsonMap extends Value {\n    constructor() {\n        super();\n        this._map = new csmMap();\n    }\n    release() {\n        const ite = this._map.begin();\n        while (ite.notEqual(this._map.end())) {\n            let v = ite.ptr().second;\n            if (v && !v.isStatic()) {\n                v = void 0;\n                v = null;\n            }\n            ite.preIncrement();\n        }\n    }\n    isMap() {\n        return true;\n    }\n    getValueByString(s) {\n        if (s instanceof csmString) {\n            const ret = this._map.getValue(s.s);\n            if (ret == null) {\n                return Value.nullValue;\n            }\n            return ret;\n        }\n        for (let iter = this._map.begin(); iter.notEqual(this._map.end()); iter.preIncrement()) {\n            if (iter.ptr().first == s) {\n                if (iter.ptr().second == null) {\n                    return Value.nullValue;\n                }\n                return iter.ptr().second;\n            }\n        }\n        return Value.nullValue;\n    }\n    getValueByIndex(index) {\n        return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\n    }\n    getString(defaultValue, indent) {\n        this._stringBuffer = indent + '{\\n';\n        const ite = this._map.begin();\n        while (ite.notEqual(this._map.end())) {\n            const key = ite.ptr().first;\n            const v = ite.ptr().second;\n            this._stringBuffer +=\n                indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\n';\n            ite.preIncrement();\n        }\n        this._stringBuffer += indent + '}\\n';\n        return this._stringBuffer;\n    }\n    getMap(defaultValue) {\n        return this._map;\n    }\n    put(key, v) {\n        this._map.setValue(key, v);\n    }\n    getKeys() {\n        if (!this._keys) {\n            this._keys = new csmVector();\n            const ite = this._map.begin();\n            while (ite.notEqual(this._map.end())) {\n                const key = ite.ptr().first;\n                this._keys.pushBack(key);\n                ite.preIncrement();\n            }\n        }\n        return this._keys;\n    }\n    getSize() {\n        return this._keys.getSize();\n    }\n}\nimport * as $ from './cubismjson';\nimport { CubismJsonExtension } from './cubismjsonextension';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismJson = $.CubismJson;\n    Live2DCubismFramework.JsonArray = $.JsonArray;\n    Live2DCubismFramework.JsonBoolean = $.JsonBoolean;\n    Live2DCubismFramework.JsonError = $.JsonError;\n    Live2DCubismFramework.JsonFloat = $.JsonFloat;\n    Live2DCubismFramework.JsonMap = $.JsonMap;\n    Live2DCubismFramework.JsonNullvalue = $.JsonNullvalue;\n    Live2DCubismFramework.JsonString = $.JsonString;\n    Live2DCubismFramework.Value = $.Value;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismIdManager } from './id/cubismidmanager';\nimport { CubismRenderer } from './rendering/cubismrenderer';\nimport { CSM_ASSERT, CubismLogInfo, CubismLogWarning } from './utils/cubismdebug';\nimport { Value } from './utils/cubismjson';\nexport function strtod(s, endPtr) {\n    let index = 0;\n    for (let i = 1;; i++) {\n        const testC = s.slice(i - 1, i);\n        if (testC == 'e' || testC == '-' || testC == 'E') {\n            continue;\n        }\n        const test = s.substring(0, i);\n        const number = Number(test);\n        if (isNaN(number)) {\n            break;\n        }\n        index = i;\n    }\n    let d = parseFloat(s);\n    if (isNaN(d)) {\n        d = NaN;\n    }\n    endPtr[0] = s.slice(index);\n    return d;\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = null;\nlet s_cubismIdManager = null;\nexport const Constant = Object.freeze({\n    vertexOffset: 0,\n    vertexStep: 2\n});\nexport function csmDelete(address) {\n    if (!address) {\n        return;\n    }\n    address = void 0;\n}\nexport class CubismFramework {\n    static startUp(option = null) {\n        if (s_isStarted) {\n            CubismLogInfo('CubismFramework.startUp() is already done.');\n            return s_isStarted;\n        }\n        s_option = option;\n        if (s_option != null) {\n            Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n        }\n        s_isStarted = true;\n        if (s_isStarted) {\n            const version = Live2DCubismCore.Version.csmGetVersion();\n            const major = (version & 0xff000000) >> 24;\n            const minor = (version & 0x00ff0000) >> 16;\n            const patch = version & 0x0000ffff;\n            const versionNumber = version;\n            CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, ('00' + major).slice(-2), ('00' + minor).slice(-2), ('0000' + patch).slice(-4), versionNumber);\n        }\n        CubismLogInfo('CubismFramework.startUp() is complete.');\n        return s_isStarted;\n    }\n    static cleanUp() {\n        s_isStarted = false;\n        s_isInitialized = false;\n        s_option = null;\n        s_cubismIdManager = null;\n    }\n    static initialize(memorySize = 0) {\n        CSM_ASSERT(s_isStarted);\n        if (!s_isStarted) {\n            CubismLogWarning('CubismFramework is not started.');\n            return;\n        }\n        if (s_isInitialized) {\n            CubismLogWarning('CubismFramework.initialize() skipped, already initialized.');\n            return;\n        }\n        Value.staticInitializeNotForClientCall();\n        s_cubismIdManager = new CubismIdManager();\n        Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\n        s_isInitialized = true;\n        CubismLogInfo('CubismFramework.initialize() is complete.');\n    }\n    static dispose() {\n        CSM_ASSERT(s_isStarted);\n        if (!s_isStarted) {\n            CubismLogWarning('CubismFramework is not started.');\n            return;\n        }\n        if (!s_isInitialized) {\n            CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n            return;\n        }\n        Value.staticReleaseNotForClientCall();\n        s_cubismIdManager.release();\n        s_cubismIdManager = null;\n        CubismRenderer.staticRelease();\n        s_isInitialized = false;\n        CubismLogInfo('CubismFramework.dispose() is complete.');\n    }\n    static isStarted() {\n        return s_isStarted;\n    }\n    static isInitialized() {\n        return s_isInitialized;\n    }\n    static coreLogFunction(message) {\n        if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n            return;\n        }\n        Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    static getLoggingLevel() {\n        if (s_option != null) {\n            return s_option.loggingLevel;\n        }\n        return LogLevel.LogLevel_Off;\n    }\n    static getIdManager() {\n        return s_cubismIdManager;\n    }\n    constructor() { }\n}\nexport class Option {\n}\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel[LogLevel[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel[LogLevel[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel[LogLevel[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel[LogLevel[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel[LogLevel[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n})(LogLevel || (LogLevel = {}));\nimport * as $ from './live2dcubismframework';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.Constant = $.Constant;\n    Live2DCubismFramework.csmDelete = $.csmDelete;\n    Live2DCubismFramework.CubismFramework = $.CubismFramework;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { LogLevel } from '@framework/live2dcubismframework';\nexport const CanvasSize = 'auto';\nexport const CanvasNum = 1;\nexport const ViewScale = 1.0;\nexport const ViewMaxScale = 2.0;\nexport const ViewMinScale = 0.8;\nexport const ViewLogicalLeft = -1.0;\nexport const ViewLogicalRight = 1.0;\nexport const ViewLogicalBottom = -1.0;\nexport const ViewLogicalTop = 1.0;\nexport const ViewLogicalMaxLeft = -2.0;\nexport const ViewLogicalMaxRight = 2.0;\nexport const ViewLogicalMaxBottom = -2.0;\nexport const ViewLogicalMaxTop = 2.0;\nexport const ResourcesPath = '../../Resources/';\nexport const BackImageName = 'back_class_normal.png';\nexport const GearImageName = 'icon_gear.png';\nexport const PowerImageName = 'CloseNormal.png';\nexport const ModelDir = [\n    'Haru',\n    'Hiyori',\n    'Mark',\n    'Natori',\n    'Rice',\n    'Mao',\n    'Wanko'\n];\nexport const ModelDirSize = ModelDir.length;\nexport const MotionGroupIdle = 'Idle';\nexport const MotionGroupTapBody = 'TapBody';\nexport const HitAreaNameHead = 'Head';\nexport const HitAreaNameBody = 'Body';\nexport const PriorityNone = 0;\nexport const PriorityIdle = 1;\nexport const PriorityNormal = 2;\nexport const PriorityForce = 3;\nexport const MOCConsistencyValidationEnable = true;\nexport const MotionConsistencyValidationEnable = true;\nexport const DebugLogEnable = true;\nexport const DebugTouchLogEnable = false;\nexport const CubismLoggingLevel = LogLevel.LogLevel_Verbose;\nexport const RenderTargetWidth = 1900;\nexport const RenderTargetHeight = 1000;\n","export class LAppPal {\n    static loadFileAsBytes(filePath, callback) {\n        fetch(filePath)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\n    }\n    static getDeltaTime() {\n        return this.deltaTime;\n    }\n    static updateTime() {\n        this.currentFrame = Date.now();\n        this.deltaTime = (this.currentFrame - this.lastFrame) / 1000;\n        this.lastFrame = this.currentFrame;\n    }\n    static printMessage(message) {\n        console.log(message);\n    }\n}\nLAppPal.lastUpdate = Date.now();\nLAppPal.currentFrame = 0.0;\nLAppPal.lastFrame = 0.0;\nLAppPal.deltaTime = 0.0;\n","export class LAppGlManager {\n    constructor() {\n        this._gl = null;\n        this._gl = null;\n    }\n    initialize(canvas) {\n        this._gl = canvas.getContext('webgl2');\n        if (!this._gl) {\n            alert('Cannot initialize WebGL. This browser does not support.');\n            this._gl = null;\n            return false;\n        }\n        return true;\n    }\n    release() { }\n    getGl() {\n        return this._gl;\n    }\n}\n","export const CubismDefaultParameterId = Object.freeze({\n    HitAreaPrefix: 'HitArea',\n    HitAreaHead: 'Head',\n    HitAreaBody: 'Body',\n    PartsIdCore: 'Parts01Core',\n    PartsArmPrefix: 'Parts01Arm_',\n    PartsArmLPrefix: 'Parts01ArmL_',\n    PartsArmRPrefix: 'Parts01ArmR_',\n    ParamAngleX: 'ParamAngleX',\n    ParamAngleY: 'ParamAngleY',\n    ParamAngleZ: 'ParamAngleZ',\n    ParamEyeLOpen: 'ParamEyeLOpen',\n    ParamEyeLSmile: 'ParamEyeLSmile',\n    ParamEyeROpen: 'ParamEyeROpen',\n    ParamEyeRSmile: 'ParamEyeRSmile',\n    ParamEyeBallX: 'ParamEyeBallX',\n    ParamEyeBallY: 'ParamEyeBallY',\n    ParamEyeBallForm: 'ParamEyeBallForm',\n    ParamBrowLY: 'ParamBrowLY',\n    ParamBrowRY: 'ParamBrowRY',\n    ParamBrowLX: 'ParamBrowLX',\n    ParamBrowRX: 'ParamBrowRX',\n    ParamBrowLAngle: 'ParamBrowLAngle',\n    ParamBrowRAngle: 'ParamBrowRAngle',\n    ParamBrowLForm: 'ParamBrowLForm',\n    ParamBrowRForm: 'ParamBrowRForm',\n    ParamMouthForm: 'ParamMouthForm',\n    ParamMouthOpenY: 'ParamMouthOpenY',\n    ParamCheek: 'ParamCheek',\n    ParamBodyAngleX: 'ParamBodyAngleX',\n    ParamBodyAngleY: 'ParamBodyAngleY',\n    ParamBodyAngleZ: 'ParamBodyAngleZ',\n    ParamBreath: 'ParamBreath',\n    ParamArmLA: 'ParamArmLA',\n    ParamArmRA: 'ParamArmRA',\n    ParamArmLB: 'ParamArmLB',\n    ParamArmRB: 'ParamArmRB',\n    ParamHandL: 'ParamHandL',\n    ParamHandR: 'ParamHandR',\n    ParamHairFront: 'ParamHairFront',\n    ParamHairSide: 'ParamHairSide',\n    ParamHairBack: 'ParamHairBack',\n    ParamHairFluffy: 'ParamHairFluffy',\n    ParamShoulderY: 'ParamShoulderY',\n    ParamBustX: 'ParamBustX',\n    ParamBustY: 'ParamBustY',\n    ParamBaseX: 'ParamBaseX',\n    ParamBaseY: 'ParamBaseY',\n    ParamNONE: 'NONE:'\n});\nimport * as $ from './cubismdefaultparameterid';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.HitAreaBody = $.CubismDefaultParameterId.HitAreaBody;\n    Live2DCubismFramework.HitAreaHead = $.CubismDefaultParameterId.HitAreaHead;\n    Live2DCubismFramework.HitAreaPrefix = $.CubismDefaultParameterId.HitAreaPrefix;\n    Live2DCubismFramework.ParamAngleX = $.CubismDefaultParameterId.ParamAngleX;\n    Live2DCubismFramework.ParamAngleY = $.CubismDefaultParameterId.ParamAngleY;\n    Live2DCubismFramework.ParamAngleZ = $.CubismDefaultParameterId.ParamAngleZ;\n    Live2DCubismFramework.ParamArmLA = $.CubismDefaultParameterId.ParamArmLA;\n    Live2DCubismFramework.ParamArmLB = $.CubismDefaultParameterId.ParamArmLB;\n    Live2DCubismFramework.ParamArmRA = $.CubismDefaultParameterId.ParamArmRA;\n    Live2DCubismFramework.ParamArmRB = $.CubismDefaultParameterId.ParamArmRB;\n    Live2DCubismFramework.ParamBaseX = $.CubismDefaultParameterId.ParamBaseX;\n    Live2DCubismFramework.ParamBaseY = $.CubismDefaultParameterId.ParamBaseY;\n    Live2DCubismFramework.ParamBodyAngleX = $.CubismDefaultParameterId.ParamBodyAngleX;\n    Live2DCubismFramework.ParamBodyAngleY = $.CubismDefaultParameterId.ParamBodyAngleY;\n    Live2DCubismFramework.ParamBodyAngleZ = $.CubismDefaultParameterId.ParamBodyAngleZ;\n    Live2DCubismFramework.ParamBreath = $.CubismDefaultParameterId.ParamBreath;\n    Live2DCubismFramework.ParamBrowLAngle = $.CubismDefaultParameterId.ParamBrowLAngle;\n    Live2DCubismFramework.ParamBrowLForm = $.CubismDefaultParameterId.ParamBrowLForm;\n    Live2DCubismFramework.ParamBrowLX = $.CubismDefaultParameterId.ParamBrowLX;\n    Live2DCubismFramework.ParamBrowLY = $.CubismDefaultParameterId.ParamBrowLY;\n    Live2DCubismFramework.ParamBrowRAngle = $.CubismDefaultParameterId.ParamBrowRAngle;\n    Live2DCubismFramework.ParamBrowRForm = $.CubismDefaultParameterId.ParamBrowRForm;\n    Live2DCubismFramework.ParamBrowRX = $.CubismDefaultParameterId.ParamBrowRX;\n    Live2DCubismFramework.ParamBrowRY = $.CubismDefaultParameterId.ParamBrowRY;\n    Live2DCubismFramework.ParamBustX = $.CubismDefaultParameterId.ParamBustX;\n    Live2DCubismFramework.ParamBustY = $.CubismDefaultParameterId.ParamBustY;\n    Live2DCubismFramework.ParamCheek = $.CubismDefaultParameterId.ParamCheek;\n    Live2DCubismFramework.ParamEyeBallForm = $.CubismDefaultParameterId.ParamEyeBallForm;\n    Live2DCubismFramework.ParamEyeBallX = $.CubismDefaultParameterId.ParamEyeBallX;\n    Live2DCubismFramework.ParamEyeBallY = $.CubismDefaultParameterId.ParamEyeBallY;\n    Live2DCubismFramework.ParamEyeLOpen = $.CubismDefaultParameterId.ParamEyeLOpen;\n    Live2DCubismFramework.ParamEyeLSmile = $.CubismDefaultParameterId.ParamEyeLSmile;\n    Live2DCubismFramework.ParamEyeROpen = $.CubismDefaultParameterId.ParamEyeROpen;\n    Live2DCubismFramework.ParamEyeRSmile = $.CubismDefaultParameterId.ParamEyeRSmile;\n    Live2DCubismFramework.ParamHairBack = $.CubismDefaultParameterId.ParamHairBack;\n    Live2DCubismFramework.ParamHairFluffy = $.CubismDefaultParameterId.ParamHairFluffy;\n    Live2DCubismFramework.ParamHairFront = $.CubismDefaultParameterId.ParamHairFront;\n    Live2DCubismFramework.ParamHairSide = $.CubismDefaultParameterId.ParamHairSide;\n    Live2DCubismFramework.ParamHandL = $.CubismDefaultParameterId.ParamHandL;\n    Live2DCubismFramework.ParamHandR = $.CubismDefaultParameterId.ParamHandR;\n    Live2DCubismFramework.ParamMouthForm = $.CubismDefaultParameterId.ParamMouthForm;\n    Live2DCubismFramework.ParamMouthOpenY = $.CubismDefaultParameterId.ParamMouthOpenY;\n    Live2DCubismFramework.ParamNONE = $.CubismDefaultParameterId.ParamNONE;\n    Live2DCubismFramework.ParamShoulderY = $.CubismDefaultParameterId.ParamShoulderY;\n    Live2DCubismFramework.PartsArmLPrefix = $.CubismDefaultParameterId.PartsArmLPrefix;\n    Live2DCubismFramework.PartsArmPrefix = $.CubismDefaultParameterId.PartsArmPrefix;\n    Live2DCubismFramework.PartsArmRPrefix = $.CubismDefaultParameterId.PartsArmRPrefix;\n    Live2DCubismFramework.PartsIdCore = $.CubismDefaultParameterId.PartsIdCore;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class ICubismModelSetting {\n}\nimport * as $ from './icubismmodelsetting';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.ICubismModelSetting = $.ICubismModelSetting;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { ICubismModelSetting } from './icubismmodelsetting';\nimport { CubismFramework } from './live2dcubismframework';\nimport { csmVector } from './type/csmvector';\nimport { CubismJson } from './utils/cubismjson';\nexport var FrequestNode;\n(function (FrequestNode) {\n    FrequestNode[FrequestNode[\"FrequestNode_Groups\"] = 0] = \"FrequestNode_Groups\";\n    FrequestNode[FrequestNode[\"FrequestNode_Moc\"] = 1] = \"FrequestNode_Moc\";\n    FrequestNode[FrequestNode[\"FrequestNode_Motions\"] = 2] = \"FrequestNode_Motions\";\n    FrequestNode[FrequestNode[\"FrequestNode_Expressions\"] = 3] = \"FrequestNode_Expressions\";\n    FrequestNode[FrequestNode[\"FrequestNode_Textures\"] = 4] = \"FrequestNode_Textures\";\n    FrequestNode[FrequestNode[\"FrequestNode_Physics\"] = 5] = \"FrequestNode_Physics\";\n    FrequestNode[FrequestNode[\"FrequestNode_Pose\"] = 6] = \"FrequestNode_Pose\";\n    FrequestNode[FrequestNode[\"FrequestNode_HitAreas\"] = 7] = \"FrequestNode_HitAreas\";\n})(FrequestNode || (FrequestNode = {}));\nexport class CubismModelSettingJson extends ICubismModelSetting {\n    constructor(buffer, size) {\n        super();\n        this.version = 'Version';\n        this.fileReferences = 'FileReferences';\n        this.groups = 'Groups';\n        this.layout = 'Layout';\n        this.hitAreas = 'HitAreas';\n        this.moc = 'Moc';\n        this.textures = 'Textures';\n        this.physics = 'Physics';\n        this.pose = 'Pose';\n        this.expressions = 'Expressions';\n        this.motions = 'Motions';\n        this.userData = 'UserData';\n        this.name = 'Name';\n        this.filePath = 'File';\n        this.id = 'Id';\n        this.ids = 'Ids';\n        this.target = 'Target';\n        this.idle = 'Idle';\n        this.tapBody = 'TapBody';\n        this.pinchIn = 'PinchIn';\n        this.pinchOut = 'PinchOut';\n        this.shake = 'Shake';\n        this.flickHead = 'FlickHead';\n        this.parameter = 'Parameter';\n        this.soundPath = 'Sound';\n        this.fadeInTime = 'FadeInTime';\n        this.fadeOutTime = 'FadeOutTime';\n        this.centerX = 'CenterX';\n        this.centerY = 'CenterY';\n        this.x = 'X';\n        this.y = 'Y';\n        this.width = 'Width';\n        this.height = 'Height';\n        this.lipSync = 'LipSync';\n        this.eyeBlink = 'EyeBlink';\n        this.initParameter = 'init_param';\n        this.initPartsVisible = 'init_parts_visible';\n        this.val = 'val';\n        this._json = CubismJson.create(buffer, size);\n        if (this.getJson()) {\n            this._jsonValue = new csmVector();\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(this.groups));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.moc));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.motions));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.expressions));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.textures));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.physics));\n            this._jsonValue.pushBack(this.getJson()\n                .getRoot()\n                .getValueByString(this.fileReferences)\n                .getValueByString(this.pose));\n            this._jsonValue.pushBack(this.getJson().getRoot().getValueByString(this.hitAreas));\n        }\n    }\n    release() {\n        CubismJson.delete(this._json);\n        this._jsonValue = null;\n    }\n    getJson() {\n        return this._json;\n    }\n    getModelFileName() {\n        if (!this.isExistModelFile()) {\n            return '';\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Moc).getRawString();\n    }\n    getTextureCount() {\n        if (!this.isExistTextureFiles()) {\n            return 0;\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Textures).getSize();\n    }\n    getTextureDirectory() {\n        const texturePath = this._jsonValue\n            .at(FrequestNode.FrequestNode_Textures)\n            .getValueByIndex(0)\n            .getRawString();\n        const pathArray = texturePath.split('/');\n        const arrayLength = pathArray.length - 1;\n        let textureDirectoryStr = '';\n        for (let i = 0; i < arrayLength; i++) {\n            textureDirectoryStr += pathArray[i];\n            if (i < arrayLength - 1) {\n                textureDirectoryStr += '/';\n            }\n        }\n        return textureDirectoryStr;\n    }\n    getTextureFileName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Textures)\n            .getValueByIndex(index)\n            .getRawString();\n    }\n    getHitAreasCount() {\n        if (!this.isExistHitAreas()) {\n            return 0;\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_HitAreas).getSize();\n    }\n    getHitAreaId(index) {\n        return CubismFramework.getIdManager().getId(this._jsonValue\n            .at(FrequestNode.FrequestNode_HitAreas)\n            .getValueByIndex(index)\n            .getValueByString(this.id)\n            .getRawString());\n    }\n    getHitAreaName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_HitAreas)\n            .getValueByIndex(index)\n            .getValueByString(this.name)\n            .getRawString();\n    }\n    getPhysicsFileName() {\n        if (!this.isExistPhysicsFile()) {\n            return '';\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Physics).getRawString();\n    }\n    getPoseFileName() {\n        if (!this.isExistPoseFile()) {\n            return '';\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Pose).getRawString();\n    }\n    getExpressionCount() {\n        if (!this.isExistExpressionFile()) {\n            return 0;\n        }\n        return this._jsonValue.at(FrequestNode.FrequestNode_Expressions).getSize();\n    }\n    getExpressionName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Expressions)\n            .getValueByIndex(index)\n            .getValueByString(this.name)\n            .getRawString();\n    }\n    getExpressionFileName(index) {\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Expressions)\n            .getValueByIndex(index)\n            .getValueByString(this.filePath)\n            .getRawString();\n    }\n    getMotionGroupCount() {\n        if (!this.isExistMotionGroups()) {\n            return 0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getKeys()\n            .getSize();\n    }\n    getMotionGroupName(index) {\n        if (!this.isExistMotionGroups()) {\n            return null;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getKeys()\n            .at(index);\n    }\n    getMotionCount(groupName) {\n        if (!this.isExistMotionGroupName(groupName)) {\n            return 0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getSize();\n    }\n    getMotionFileName(groupName, index) {\n        if (!this.isExistMotionGroupName(groupName)) {\n            return '';\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.filePath)\n            .getRawString();\n    }\n    getMotionSoundFileName(groupName, index) {\n        if (!this.isExistMotionSoundFile(groupName, index)) {\n            return '';\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.soundPath)\n            .getRawString();\n    }\n    getMotionFadeInTimeValue(groupName, index) {\n        if (!this.isExistMotionFadeIn(groupName, index)) {\n            return -1.0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeInTime)\n            .toFloat();\n    }\n    getMotionFadeOutTimeValue(groupName, index) {\n        if (!this.isExistMotionFadeOut(groupName, index)) {\n            return -1.0;\n        }\n        return this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeOutTime)\n            .toFloat();\n    }\n    getUserDataFile() {\n        if (!this.isExistUserDataFile()) {\n            return '';\n        }\n        return this.getJson()\n            .getRoot()\n            .getValueByString(this.fileReferences)\n            .getValueByString(this.userData)\n            .getRawString();\n    }\n    getLayoutMap(outLayoutMap) {\n        const map = this.getJson()\n            .getRoot()\n            .getValueByString(this.layout)\n            .getMap();\n        if (map == null) {\n            return false;\n        }\n        let ret = false;\n        for (const ite = map.begin(); ite.notEqual(map.end()); ite.preIncrement()) {\n            outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\n            ret = true;\n        }\n        return ret;\n    }\n    getEyeBlinkParameterCount() {\n        if (!this.isExistEyeBlinkParameters()) {\n            return 0;\n        }\n        let num = 0;\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.eyeBlink) {\n                num = refI.getValueByString(this.ids).getVector().getSize();\n                break;\n            }\n        }\n        return num;\n    }\n    getEyeBlinkParameterId(index) {\n        if (!this.isExistEyeBlinkParameters()) {\n            return null;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.eyeBlink) {\n                return CubismFramework.getIdManager().getId(refI.getValueByString(this.ids).getValueByIndex(index).getRawString());\n            }\n        }\n        return null;\n    }\n    getLipSyncParameterCount() {\n        if (!this.isExistLipSyncParameters()) {\n            return 0;\n        }\n        let num = 0;\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.lipSync) {\n                num = refI.getValueByString(this.ids).getVector().getSize();\n                break;\n            }\n        }\n        return num;\n    }\n    getLipSyncParameterId(index) {\n        if (!this.isExistLipSyncParameters()) {\n            return null;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\n            const refI = this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i);\n            if (refI.isNull() || refI.isError()) {\n                continue;\n            }\n            if (refI.getValueByString(this.name).getRawString() == this.lipSync) {\n                return CubismFramework.getIdManager().getId(refI.getValueByString(this.ids).getValueByIndex(index).getRawString());\n            }\n        }\n        return null;\n    }\n    isExistModelFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Moc);\n        return !node.isNull() && !node.isError();\n    }\n    isExistTextureFiles() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Textures);\n        return !node.isNull() && !node.isError();\n    }\n    isExistHitAreas() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_HitAreas);\n        return !node.isNull() && !node.isError();\n    }\n    isExistPhysicsFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Physics);\n        return !node.isNull() && !node.isError();\n    }\n    isExistPoseFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Pose);\n        return !node.isNull() && !node.isError();\n    }\n    isExistExpressionFile() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Expressions);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionGroups() {\n        const node = this._jsonValue.at(FrequestNode.FrequestNode_Motions);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionGroupName(groupName) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionSoundFile(groupName, index) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.soundPath);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionFadeIn(groupName, index) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeInTime);\n        return !node.isNull() && !node.isError();\n    }\n    isExistMotionFadeOut(groupName, index) {\n        const node = this._jsonValue\n            .at(FrequestNode.FrequestNode_Motions)\n            .getValueByString(groupName)\n            .getValueByIndex(index)\n            .getValueByString(this.fadeOutTime);\n        return !node.isNull() && !node.isError();\n    }\n    isExistUserDataFile() {\n        const node = this.getJson()\n            .getRoot()\n            .getValueByString(this.fileReferences)\n            .getValueByString(this.userData);\n        return !node.isNull() && !node.isError();\n    }\n    isExistEyeBlinkParameters() {\n        if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\n            this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\n            return false;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\n            if (this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i)\n                .getValueByString(this.name)\n                .getRawString() == this.eyeBlink) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isExistLipSyncParameters() {\n        if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\n            this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\n            return false;\n        }\n        for (let i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\n            if (this._jsonValue\n                .at(FrequestNode.FrequestNode_Groups)\n                .getValueByIndex(i)\n                .getValueByString(this.name)\n                .getRawString() == this.lipSync) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nimport * as $ from './cubismmodelsettingjson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelSettingJson = $.CubismModelSettingJson;\n    Live2DCubismFramework.FrequestNode = $.FrequestNode;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class CubismBreath {\n    static create() {\n        return new CubismBreath();\n    }\n    static delete(instance) {\n        if (instance != null) {\n            instance = null;\n        }\n    }\n    setParameters(breathParameters) {\n        this._breathParameters = breathParameters;\n    }\n    getParameters() {\n        return this._breathParameters;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n        this._currentTime += deltaTimeSeconds;\n        const t = this._currentTime * 2.0 * Math.PI;\n        for (let i = 0; i < this._breathParameters.getSize(); ++i) {\n            const data = this._breathParameters.at(i);\n            model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n        }\n    }\n    constructor() {\n        this._currentTime = 0.0;\n    }\n}\nexport class BreathParameterData {\n    constructor(parameterId, offset, peak, cycle, weight) {\n        this.parameterId = parameterId == undefined ? null : parameterId;\n        this.offset = offset == undefined ? 0.0 : offset;\n        this.peak = peak == undefined ? 0.0 : peak;\n        this.cycle = cycle == undefined ? 0.0 : cycle;\n        this.weight = weight == undefined ? 0.0 : weight;\n    }\n}\nimport * as $ from './cubismbreath';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.BreathParameterData = $.BreathParameterData;\n    Live2DCubismFramework.CubismBreath = $.CubismBreath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmVector } from '../type/csmvector';\nexport class CubismEyeBlink {\n    static create(modelSetting = null) {\n        return new CubismEyeBlink(modelSetting);\n    }\n    static delete(eyeBlink) {\n        if (eyeBlink != null) {\n            eyeBlink = null;\n        }\n    }\n    setBlinkingInterval(blinkingInterval) {\n        this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    setBlinkingSetting(closing, closed, opening) {\n        this._closingSeconds = closing;\n        this._closedSeconds = closed;\n        this._openingSeconds = opening;\n    }\n    setParameterIds(parameterIds) {\n        this._parameterIds = parameterIds;\n    }\n    getParameterIds() {\n        return this._parameterIds;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        let parameterValue;\n        let t = 0.0;\n        const blinkingState = this._blinkingState;\n        switch (blinkingState) {\n            case EyeState.EyeState_Closing:\n                t =\n                    (this._userTimeSeconds - this._stateStartTimeSeconds) /\n                        this._closingSeconds;\n                if (t >= 1.0) {\n                    t = 1.0;\n                    this._blinkingState = EyeState.EyeState_Closed;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 1.0 - t;\n                break;\n            case EyeState.EyeState_Closed:\n                t =\n                    (this._userTimeSeconds - this._stateStartTimeSeconds) /\n                        this._closedSeconds;\n                if (t >= 1.0) {\n                    this._blinkingState = EyeState.EyeState_Opening;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 0.0;\n                break;\n            case EyeState.EyeState_Opening:\n                t =\n                    (this._userTimeSeconds - this._stateStartTimeSeconds) /\n                        this._openingSeconds;\n                if (t >= 1.0) {\n                    t = 1.0;\n                    this._blinkingState = EyeState.EyeState_Interval;\n                    this._nextBlinkingTime = this.determinNextBlinkingTiming();\n                }\n                parameterValue = t;\n                break;\n            case EyeState.EyeState_Interval:\n                if (this._nextBlinkingTime < this._userTimeSeconds) {\n                    this._blinkingState = EyeState.EyeState_Closing;\n                    this._stateStartTimeSeconds = this._userTimeSeconds;\n                }\n                parameterValue = 1.0;\n                break;\n            case EyeState.EyeState_First:\n            default:\n                this._blinkingState = EyeState.EyeState_Interval;\n                this._nextBlinkingTime = this.determinNextBlinkingTiming();\n                parameterValue = 1.0;\n                break;\n        }\n        if (!CubismEyeBlink.CloseIfZero) {\n            parameterValue = -parameterValue;\n        }\n        for (let i = 0; i < this._parameterIds.getSize(); ++i) {\n            model.setParameterValueById(this._parameterIds.at(i), parameterValue);\n        }\n    }\n    constructor(modelSetting) {\n        this._blinkingState = EyeState.EyeState_First;\n        this._nextBlinkingTime = 0.0;\n        this._stateStartTimeSeconds = 0.0;\n        this._blinkingIntervalSeconds = 4.0;\n        this._closingSeconds = 0.1;\n        this._closedSeconds = 0.05;\n        this._openingSeconds = 0.15;\n        this._userTimeSeconds = 0.0;\n        this._parameterIds = new csmVector();\n        if (modelSetting == null) {\n            return;\n        }\n        for (let i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i) {\n            this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\n        }\n    }\n    determinNextBlinkingTiming() {\n        const r = Math.random();\n        return (this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0));\n    }\n}\nCubismEyeBlink.CloseIfZero = true;\nexport var EyeState;\n(function (EyeState) {\n    EyeState[EyeState[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState[EyeState[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState[EyeState[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState[EyeState[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState[EyeState[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n})(EyeState || (EyeState = {}));\nimport * as $ from './cubismeyeblink';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismEyeBlink = $.CubismEyeBlink;\n    Live2DCubismFramework.EyeState = $.EyeState;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { CubismJson } from '../utils/cubismjson';\nconst Epsilon = 0.001;\nconst DefaultFadeInSeconds = 0.5;\nconst FadeIn = 'FadeInTime';\nconst Link = 'Link';\nconst Groups = 'Groups';\nconst Id = 'Id';\nexport class CubismPose {\n    static create(pose3json, size) {\n        const json = CubismJson.create(pose3json, size);\n        if (!json) {\n            return null;\n        }\n        const ret = new CubismPose();\n        const root = json.getRoot();\n        if (!root.getValueByString(FadeIn).isNull()) {\n            ret._fadeTimeSeconds = root\n                .getValueByString(FadeIn)\n                .toFloat(DefaultFadeInSeconds);\n            if (ret._fadeTimeSeconds < 0.0) {\n                ret._fadeTimeSeconds = DefaultFadeInSeconds;\n            }\n        }\n        const poseListInfo = root.getValueByString(Groups);\n        const poseCount = poseListInfo.getSize();\n        for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n            const idListInfo = poseListInfo.getValueByIndex(poseIndex);\n            const idCount = idListInfo.getSize();\n            let groupCount = 0;\n            for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n                const partInfo = idListInfo.getValueByIndex(groupIndex);\n                const partData = new PartData();\n                const parameterId = CubismFramework.getIdManager().getId(partInfo.getValueByString(Id).getRawString());\n                partData.partId = parameterId;\n                if (!partInfo.getValueByString(Link).isNull()) {\n                    const linkListInfo = partInfo.getValueByString(Link);\n                    const linkCount = linkListInfo.getSize();\n                    for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n                        const linkPart = new PartData();\n                        const linkId = CubismFramework.getIdManager().getId(linkListInfo.getValueByIndex(linkIndex).getString());\n                        linkPart.partId = linkId;\n                        partData.link.pushBack(linkPart);\n                    }\n                }\n                ret._partGroups.pushBack(partData.clone());\n                ++groupCount;\n            }\n            ret._partGroupCounts.pushBack(groupCount);\n        }\n        CubismJson.delete(json);\n        return ret;\n    }\n    static delete(pose) {\n        if (pose != null) {\n            pose = null;\n        }\n    }\n    updateParameters(model, deltaTimeSeconds) {\n        if (model != this._lastModel) {\n            this.reset(model);\n        }\n        this._lastModel = model;\n        if (deltaTimeSeconds < 0.0) {\n            deltaTimeSeconds = 0.0;\n        }\n        let beginIndex = 0;\n        for (let i = 0; i < this._partGroupCounts.getSize(); i++) {\n            const partGroupCount = this._partGroupCounts.at(i);\n            this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n            beginIndex += partGroupCount;\n        }\n        this.copyPartOpacities(model);\n    }\n    reset(model) {\n        let beginIndex = 0;\n        for (let i = 0; i < this._partGroupCounts.getSize(); ++i) {\n            const groupCount = this._partGroupCounts.at(i);\n            for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n                this._partGroups.at(j).initialize(model);\n                const partsIndex = this._partGroups.at(j).partIndex;\n                const paramIndex = this._partGroups.at(j).parameterIndex;\n                if (partsIndex < 0) {\n                    continue;\n                }\n                model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\n                model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1.0 : 0.0);\n                for (let k = 0; k < this._partGroups.at(j).link.getSize(); ++k) {\n                    this._partGroups.at(j).link.at(k).initialize(model);\n                }\n            }\n            beginIndex += groupCount;\n        }\n    }\n    copyPartOpacities(model) {\n        for (let groupIndex = 0; groupIndex < this._partGroups.getSize(); ++groupIndex) {\n            const partData = this._partGroups.at(groupIndex);\n            if (partData.link.getSize() == 0) {\n                continue;\n            }\n            const partIndex = this._partGroups.at(groupIndex).partIndex;\n            const opacity = model.getPartOpacityByIndex(partIndex);\n            for (let linkIndex = 0; linkIndex < partData.link.getSize(); ++linkIndex) {\n                const linkPart = partData.link.at(linkIndex);\n                const linkPartIndex = linkPart.partIndex;\n                if (linkPartIndex < 0) {\n                    continue;\n                }\n                model.setPartOpacityByIndex(linkPartIndex, opacity);\n            }\n        }\n    }\n    doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n        let visiblePartIndex = -1;\n        let newOpacity = 1.0;\n        const phi = 0.5;\n        const backOpacityThreshold = 0.15;\n        for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n            const partIndex = this._partGroups.at(i).partIndex;\n            const paramIndex = this._partGroups.at(i).parameterIndex;\n            if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n                if (visiblePartIndex >= 0) {\n                    break;\n                }\n                visiblePartIndex = i;\n                if (this._fadeTimeSeconds == 0) {\n                    newOpacity = 1.0;\n                    continue;\n                }\n                newOpacity = model.getPartOpacityByIndex(partIndex);\n                newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n                if (newOpacity > 1.0) {\n                    newOpacity = 1.0;\n                }\n            }\n        }\n        if (visiblePartIndex < 0) {\n            visiblePartIndex = 0;\n            newOpacity = 1.0;\n        }\n        for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n            const partsIndex = this._partGroups.at(i).partIndex;\n            if (visiblePartIndex == i) {\n                model.setPartOpacityByIndex(partsIndex, newOpacity);\n            }\n            else {\n                let opacity = model.getPartOpacityByIndex(partsIndex);\n                let a1;\n                if (newOpacity < phi) {\n                    a1 = (newOpacity * (phi - 1)) / phi + 1.0;\n                }\n                else {\n                    a1 = ((1 - newOpacity) * phi) / (1.0 - phi);\n                }\n                const backOpacity = (1.0 - a1) * (1.0 - newOpacity);\n                if (backOpacity > backOpacityThreshold) {\n                    a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\n                }\n                if (opacity > a1) {\n                    opacity = a1;\n                }\n                model.setPartOpacityByIndex(partsIndex, opacity);\n            }\n        }\n    }\n    constructor() {\n        this._fadeTimeSeconds = DefaultFadeInSeconds;\n        this._lastModel = null;\n        this._partGroups = new csmVector();\n        this._partGroupCounts = new csmVector();\n    }\n}\nexport class PartData {\n    constructor(v) {\n        this.parameterIndex = 0;\n        this.partIndex = 0;\n        this.link = new csmVector();\n        if (v != undefined) {\n            this.partId = v.partId;\n            for (const ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\n                this.link.pushBack(ite.ptr().clone());\n            }\n        }\n    }\n    assignment(v) {\n        this.partId = v.partId;\n        for (const ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\n            this.link.pushBack(ite.ptr().clone());\n        }\n        return this;\n    }\n    initialize(model) {\n        this.parameterIndex = model.getParameterIndex(this.partId);\n        this.partIndex = model.getPartIndex(this.partId);\n        model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    clone() {\n        const clonePartData = new PartData();\n        clonePartData.partId = this.partId;\n        clonePartData.parameterIndex = this.parameterIndex;\n        clonePartData.partIndex = this.partIndex;\n        clonePartData.link = new csmVector();\n        for (let ite = this.link.begin(); ite.notEqual(this.link.end()); ite.increment()) {\n            clonePartData.link.pushBack(ite.ptr().clone());\n        }\n        return clonePartData;\n    }\n}\nimport * as $ from './cubismpose';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPose = $.CubismPose;\n    Live2DCubismFramework.PartData = $.PartData;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMatrix44 } from './cubismmatrix44';\nexport class CubismModelMatrix extends CubismMatrix44 {\n    constructor(w, h) {\n        super();\n        this._width = w !== undefined ? w : 0.0;\n        this._height = h !== undefined ? h : 0.0;\n        this.setHeight(2.0);\n    }\n    setWidth(w) {\n        const scaleX = w / this._width;\n        const scaleY = scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    setHeight(h) {\n        const scaleX = h / this._height;\n        const scaleY = scaleX;\n        this.scale(scaleX, scaleY);\n    }\n    setPosition(x, y) {\n        this.translate(x, y);\n    }\n    setCenterPosition(x, y) {\n        this.centerX(x);\n        this.centerY(y);\n    }\n    top(y) {\n        this.setY(y);\n    }\n    bottom(y) {\n        const h = this._height * this.getScaleY();\n        this.translateY(y - h);\n    }\n    left(x) {\n        this.setX(x);\n    }\n    right(x) {\n        const w = this._width * this.getScaleX();\n        this.translateX(x - w);\n    }\n    centerX(x) {\n        const w = this._width * this.getScaleX();\n        this.translateX(x - w / 2.0);\n    }\n    setX(x) {\n        this.translateX(x);\n    }\n    centerY(y) {\n        const h = this._height * this.getScaleY();\n        this.translateY(y - h / 2.0);\n    }\n    setY(y) {\n        this.translateY(y);\n    }\n    setupFromLayout(layout) {\n        const keyWidth = 'width';\n        const keyHeight = 'height';\n        const keyX = 'x';\n        const keyY = 'y';\n        const keyCenterX = 'center_x';\n        const keyCenterY = 'center_y';\n        const keyTop = 'top';\n        const keyBottom = 'bottom';\n        const keyLeft = 'left';\n        const keyRight = 'right';\n        for (const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\n            const key = ite.ptr().first;\n            const value = ite.ptr().second;\n            if (key == keyWidth) {\n                this.setWidth(value);\n            }\n            else if (key == keyHeight) {\n                this.setHeight(value);\n            }\n        }\n        for (const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\n            const key = ite.ptr().first;\n            const value = ite.ptr().second;\n            if (key == keyX) {\n                this.setX(value);\n            }\n            else if (key == keyY) {\n                this.setY(value);\n            }\n            else if (key == keyCenterX) {\n                this.centerX(value);\n            }\n            else if (key == keyCenterY) {\n                this.centerY(value);\n            }\n            else if (key == keyTop) {\n                this.top(value);\n            }\n            else if (key == keyBottom) {\n                this.bottom(value);\n            }\n            else if (key == keyLeft) {\n                this.left(value);\n            }\n            else if (key == keyRight) {\n                this.right(value);\n            }\n        }\n    }\n}\nimport * as $ from './cubismmodelmatrix';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelMatrix = $.CubismModelMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","export class CubismVector2 {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.x = x == undefined ? 0.0 : x;\n        this.y = y == undefined ? 0.0 : y;\n    }\n    add(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x + vector2.x;\n        ret.y = this.y + vector2.y;\n        return ret;\n    }\n    substract(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x - vector2.x;\n        ret.y = this.y - vector2.y;\n        return ret;\n    }\n    multiply(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x * vector2.x;\n        ret.y = this.y * vector2.y;\n        return ret;\n    }\n    multiplyByScaler(scalar) {\n        return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    division(vector2) {\n        const ret = new CubismVector2(0.0, 0.0);\n        ret.x = this.x / vector2.x;\n        ret.y = this.y / vector2.y;\n        return ret;\n    }\n    divisionByScalar(scalar) {\n        return this.division(new CubismVector2(scalar, scalar));\n    }\n    getLength() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    getDistanceWith(a) {\n        return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    dot(a) {\n        return this.x * a.x + this.y * a.y;\n    }\n    normalize() {\n        const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n        this.x = this.x / length;\n        this.y = this.y / length;\n    }\n    isEqual(rhs) {\n        return this.x == rhs.x && this.y == rhs.y;\n    }\n    isNotEqual(rhs) {\n        return !this.isEqual(rhs);\n    }\n}\nimport * as $ from './cubismvector2';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismVector2 = $.CubismVector2;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismVector2 } from './cubismvector2';\nexport class CubismMath {\n    static range(value, min, max) {\n        if (value < min) {\n            value = min;\n        }\n        else if (value > max) {\n            value = max;\n        }\n        return value;\n    }\n    static sin(x) {\n        return Math.sin(x);\n    }\n    static cos(x) {\n        return Math.cos(x);\n    }\n    static abs(x) {\n        return Math.abs(x);\n    }\n    static sqrt(x) {\n        return Math.sqrt(x);\n    }\n    static cbrt(x) {\n        if (x === 0) {\n            return x;\n        }\n        let cx = x;\n        const isNegativeNumber = cx < 0;\n        if (isNegativeNumber) {\n            cx = -cx;\n        }\n        let ret;\n        if (cx === Infinity) {\n            ret = Infinity;\n        }\n        else {\n            ret = Math.exp(Math.log(cx) / 3);\n            ret = (cx / (ret * ret) + 2 * ret) / 3;\n        }\n        return isNegativeNumber ? -ret : ret;\n    }\n    static getEasingSine(value) {\n        if (value < 0.0) {\n            return 0.0;\n        }\n        else if (value > 1.0) {\n            return 1.0;\n        }\n        return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    static max(left, right) {\n        return left > right ? left : right;\n    }\n    static min(left, right) {\n        return left > right ? right : left;\n    }\n    static clamp(val, min, max) {\n        if (val < min) {\n            return min;\n        }\n        else if (max < val) {\n            return max;\n        }\n        return val;\n    }\n    static degreesToRadian(degrees) {\n        return (degrees / 180.0) * Math.PI;\n    }\n    static radianToDegrees(radian) {\n        return (radian * 180.0) / Math.PI;\n    }\n    static directionToRadian(from, to) {\n        const q1 = Math.atan2(to.y, to.x);\n        const q2 = Math.atan2(from.y, from.x);\n        let ret = q1 - q2;\n        while (ret < -Math.PI) {\n            ret += Math.PI * 2.0;\n        }\n        while (ret > Math.PI) {\n            ret -= Math.PI * 2.0;\n        }\n        return ret;\n    }\n    static directionToDegrees(from, to) {\n        const radian = this.directionToRadian(from, to);\n        let degree = this.radianToDegrees(radian);\n        if (to.x - from.x > 0.0) {\n            degree = -degree;\n        }\n        return degree;\n    }\n    static radianToDirection(totalAngle) {\n        const ret = new CubismVector2();\n        ret.x = this.sin(totalAngle);\n        ret.y = this.cos(totalAngle);\n        return ret;\n    }\n    static quadraticEquation(a, b, c) {\n        if (this.abs(a) < CubismMath.Epsilon) {\n            if (this.abs(b) < CubismMath.Epsilon) {\n                return -c;\n            }\n            return -c / b;\n        }\n        return -(b + this.sqrt(b * b - 4.0 * a * c)) / (2.0 * a);\n    }\n    static cardanoAlgorithmForBezier(a, b, c, d) {\n        if (this.abs(a) < CubismMath.Epsilon) {\n            return this.range(this.quadraticEquation(b, c, d), 0.0, 1.0);\n        }\n        const ba = b / a;\n        const ca = c / a;\n        const da = d / a;\n        const p = (3.0 * ca - ba * ba) / 3.0;\n        const p3 = p / 3.0;\n        const q = (2.0 * ba * ba * ba - 9.0 * ba * ca + 27.0 * da) / 27.0;\n        const q2 = q / 2.0;\n        const discriminant = q2 * q2 + p3 * p3 * p3;\n        const center = 0.5;\n        const threshold = center + 0.01;\n        if (discriminant < 0.0) {\n            const mp3 = -p / 3.0;\n            const mp33 = mp3 * mp3 * mp3;\n            const r = this.sqrt(mp33);\n            const t = -q / (2.0 * r);\n            const cosphi = this.range(t, -1.0, 1.0);\n            const phi = Math.acos(cosphi);\n            const crtr = this.cbrt(r);\n            const t1 = 2.0 * crtr;\n            const root1 = t1 * this.cos(phi / 3.0) - ba / 3.0;\n            if (this.abs(root1 - center) < threshold) {\n                return this.range(root1, 0.0, 1.0);\n            }\n            const root2 = t1 * this.cos((phi + 2.0 * Math.PI) / 3.0) - ba / 3.0;\n            if (this.abs(root2 - center) < threshold) {\n                return this.range(root2, 0.0, 1.0);\n            }\n            const root3 = t1 * this.cos((phi + 4.0 * Math.PI) / 3.0) - ba / 3.0;\n            return this.range(root3, 0.0, 1.0);\n        }\n        if (discriminant == 0.0) {\n            let u1;\n            if (q2 < 0.0) {\n                u1 = this.cbrt(-q2);\n            }\n            else {\n                u1 = -this.cbrt(q2);\n            }\n            const root1 = 2.0 * u1 - ba / 3.0;\n            if (this.abs(root1 - center) < threshold) {\n                return this.range(root1, 0.0, 1.0);\n            }\n            const root2 = -u1 - ba / 3.0;\n            return this.range(root2, 0.0, 1.0);\n        }\n        const sd = this.sqrt(discriminant);\n        const u1 = this.cbrt(sd - q2);\n        const v1 = this.cbrt(sd + q2);\n        const root1 = u1 - v1 - ba / 3.0;\n        return this.range(root1, 0.0, 1.0);\n    }\n    static mod(dividend, divisor) {\n        if (!isFinite(dividend) ||\n            divisor === 0 ||\n            isNaN(dividend) ||\n            isNaN(divisor)) {\n            console.warn(`divided: ${dividend}, divisor: ${divisor} mod() returns 'NaN'.`);\n            return NaN;\n        }\n        const absDividend = Math.abs(dividend);\n        const absDivisor = Math.abs(divisor);\n        let result = absDividend - Math.floor(absDividend / absDivisor) * absDivisor;\n        result *= Math.sign(dividend);\n        return result;\n    }\n    constructor() { }\n}\nCubismMath.Epsilon = 0.00001;\nimport * as $ from './cubismmath';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMath = $.CubismMath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMath } from './cubismmath';\nconst FrameRate = 30;\nconst Epsilon = 0.01;\nexport class CubismTargetPoint {\n    constructor() {\n        this._faceTargetX = 0.0;\n        this._faceTargetY = 0.0;\n        this._faceX = 0.0;\n        this._faceY = 0.0;\n        this._faceVX = 0.0;\n        this._faceVY = 0.0;\n        this._lastTimeSeconds = 0.0;\n        this._userTimeSeconds = 0.0;\n    }\n    update(deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        const faceParamMaxV = 40.0 / 10.0;\n        const maxV = (faceParamMaxV * 1.0) / FrameRate;\n        if (this._lastTimeSeconds == 0.0) {\n            this._lastTimeSeconds = this._userTimeSeconds;\n            return;\n        }\n        const deltaTimeWeight = (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\n        this._lastTimeSeconds = this._userTimeSeconds;\n        const timeToMaxSpeed = 0.15;\n        const frameToMaxSpeed = timeToMaxSpeed * FrameRate;\n        const maxA = (deltaTimeWeight * maxV) / frameToMaxSpeed;\n        const dx = this._faceTargetX - this._faceX;\n        const dy = this._faceTargetY - this._faceY;\n        if (CubismMath.abs(dx) <= Epsilon && CubismMath.abs(dy) <= Epsilon) {\n            return;\n        }\n        const d = CubismMath.sqrt(dx * dx + dy * dy);\n        const vx = (maxV * dx) / d;\n        const vy = (maxV * dy) / d;\n        let ax = vx - this._faceVX;\n        let ay = vy - this._faceVY;\n        const a = CubismMath.sqrt(ax * ax + ay * ay);\n        if (a < -maxA || a > maxA) {\n            ax *= maxA / a;\n            ay *= maxA / a;\n        }\n        this._faceVX += ax;\n        this._faceVY += ay;\n        {\n            const maxV = 0.5 *\n                (CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) -\n                    maxA);\n            const curV = CubismMath.sqrt(this._faceVX * this._faceVX + this._faceVY * this._faceVY);\n            if (curV > maxV) {\n                this._faceVX *= maxV / curV;\n                this._faceVY *= maxV / curV;\n            }\n        }\n        this._faceX += this._faceVX;\n        this._faceY += this._faceVY;\n    }\n    getX() {\n        return this._faceX;\n    }\n    getY() {\n        return this._faceY;\n    }\n    set(x, y) {\n        this._faceTargetX = x;\n        this._faceTargetY = y;\n    }\n}\nimport * as $ from './cubismtargetpoint';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismTargetPoint = $.CubismTargetPoint;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMath } from '../math/cubismmath';\nimport { csmVector } from '../type/csmvector';\nimport { CSM_ASSERT, CubismDebug } from '../utils/cubismdebug';\nexport class ACubismMotion {\n    static delete(motion) {\n        motion.release();\n        motion = null;\n    }\n    constructor() {\n        this.setBeganMotionHandler = (onBeganMotionHandler) => (this._onBeganMotion = onBeganMotionHandler);\n        this.getBeganMotionHandler = () => this._onBeganMotion;\n        this.setFinishedMotionHandler = (onFinishedMotionHandler) => (this._onFinishedMotion = onFinishedMotionHandler);\n        this.getFinishedMotionHandler = () => this._onFinishedMotion;\n        this._fadeInSeconds = -1.0;\n        this._fadeOutSeconds = -1.0;\n        this._weight = 1.0;\n        this._offsetSeconds = 0.0;\n        this._isLoop = false;\n        this._isLoopFadeIn = true;\n        this._previousLoopState = this._isLoop;\n        this._firedEventValues = new csmVector();\n    }\n    release() {\n        this._weight = 0.0;\n    }\n    updateParameters(model, motionQueueEntry, userTimeSeconds) {\n        if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n            return;\n        }\n        this.setupMotionQueueEntry(motionQueueEntry, userTimeSeconds);\n        const fadeWeight = this.updateFadeWeight(motionQueueEntry, userTimeSeconds);\n        this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n        if (motionQueueEntry.getEndTime() > 0 &&\n            motionQueueEntry.getEndTime() < userTimeSeconds) {\n            motionQueueEntry.setIsFinished(true);\n        }\n    }\n    setupMotionQueueEntry(motionQueueEntry, userTimeSeconds) {\n        if (motionQueueEntry == null || motionQueueEntry.isStarted()) {\n            return;\n        }\n        if (!motionQueueEntry.isAvailable()) {\n            return;\n        }\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        if (motionQueueEntry.getEndTime() < 0.0) {\n            this.adjustEndTime(motionQueueEntry);\n        }\n        if (motionQueueEntry._motion._onBeganMotion) {\n            motionQueueEntry._motion._onBeganMotion(motionQueueEntry._motion);\n        }\n    }\n    updateFadeWeight(motionQueueEntry, userTimeSeconds) {\n        if (motionQueueEntry == null) {\n            CubismDebug.print(LogLevel.LogLevel_Error, 'motionQueueEntry is null.');\n        }\n        let fadeWeight = this._weight;\n        const fadeIn = this._fadeInSeconds == 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                this._fadeInSeconds);\n        const fadeOut = this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\n                this._fadeOutSeconds);\n        fadeWeight = fadeWeight * fadeIn * fadeOut;\n        motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n        CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\n        return fadeWeight;\n    }\n    setFadeInTime(fadeInSeconds) {\n        this._fadeInSeconds = fadeInSeconds;\n    }\n    setFadeOutTime(fadeOutSeconds) {\n        this._fadeOutSeconds = fadeOutSeconds;\n    }\n    getFadeOutTime() {\n        return this._fadeOutSeconds;\n    }\n    getFadeInTime() {\n        return this._fadeInSeconds;\n    }\n    setWeight(weight) {\n        this._weight = weight;\n    }\n    getWeight() {\n        return this._weight;\n    }\n    getDuration() {\n        return -1.0;\n    }\n    getLoopDuration() {\n        return -1.0;\n    }\n    setOffsetTime(offsetSeconds) {\n        this._offsetSeconds = offsetSeconds;\n    }\n    setLoop(loop) {\n        this._isLoop = loop;\n    }\n    getLoop() {\n        return this._isLoop;\n    }\n    setLoopFadeIn(loopFadeIn) {\n        this._isLoopFadeIn = loopFadeIn;\n    }\n    getLoopFadeIn() {\n        return this._isLoopFadeIn;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n        return this._firedEventValues;\n    }\n    isExistModelOpacity() {\n        return false;\n    }\n    getModelOpacityIndex() {\n        return -1;\n    }\n    getModelOpacityId(index) {\n        return null;\n    }\n    getModelOpacityValue() {\n        return 1.0;\n    }\n    adjustEndTime(motionQueueEntry) {\n        const duration = this.getDuration();\n        const endTime = duration <= 0.0 ? -1 : motionQueueEntry.getStartTime() + duration;\n        motionQueueEntry.setEndTime(endTime);\n    }\n}\nimport * as $ from './acubismmotion';\nimport { LogLevel } from '../live2dcubismframework';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.ACubismMotion = $.ACubismMotion;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { CubismJson } from '../utils/cubismjson';\nimport { ACubismMotion } from './acubismmotion';\nconst ExpressionKeyFadeIn = 'FadeInTime';\nconst ExpressionKeyFadeOut = 'FadeOutTime';\nconst ExpressionKeyParameters = 'Parameters';\nconst ExpressionKeyId = 'Id';\nconst ExpressionKeyValue = 'Value';\nconst ExpressionKeyBlend = 'Blend';\nconst BlendValueAdd = 'Add';\nconst BlendValueMultiply = 'Multiply';\nconst BlendValueOverwrite = 'Overwrite';\nconst DefaultFadeTime = 1.0;\nexport class CubismExpressionMotion extends ACubismMotion {\n    static create(buffer, size) {\n        const expression = new CubismExpressionMotion();\n        expression.parse(buffer, size);\n        return expression;\n    }\n    doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n        for (let i = 0; i < this._parameters.getSize(); ++i) {\n            const parameter = this._parameters.at(i);\n            switch (parameter.blendType) {\n                case ExpressionBlendType.Additive: {\n                    model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n                    break;\n                }\n                case ExpressionBlendType.Multiply: {\n                    model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n                    break;\n                }\n                case ExpressionBlendType.Overwrite: {\n                    model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n    }\n    calculateExpressionParameters(model, userTimeSeconds, motionQueueEntry, expressionParameterValues, expressionIndex, fadeWeight) {\n        if (motionQueueEntry == null || expressionParameterValues == null) {\n            return;\n        }\n        if (!motionQueueEntry.isAvailable()) {\n            return;\n        }\n        this._fadeWeight = this.updateFadeWeight(motionQueueEntry, userTimeSeconds);\n        for (let i = 0; i < expressionParameterValues.getSize(); ++i) {\n            const expressionParameterValue = expressionParameterValues.at(i);\n            if (expressionParameterValue.parameterId == null) {\n                continue;\n            }\n            const currentParameterValue = (expressionParameterValue.overwriteValue =\n                model.getParameterValueById(expressionParameterValue.parameterId));\n            const expressionParameters = this.getExpressionParameters();\n            let parameterIndex = -1;\n            for (let j = 0; j < expressionParameters.getSize(); ++j) {\n                if (expressionParameterValue.parameterId !=\n                    expressionParameters.at(j).parameterId) {\n                    continue;\n                }\n                parameterIndex = j;\n                break;\n            }\n            if (parameterIndex < 0) {\n                if (expressionIndex == 0) {\n                    expressionParameterValue.additiveValue =\n                        CubismExpressionMotion.DefaultAdditiveValue;\n                    expressionParameterValue.multiplyValue =\n                        CubismExpressionMotion.DefaultMultiplyValue;\n                    expressionParameterValue.overwriteValue = currentParameterValue;\n                }\n                else {\n                    expressionParameterValue.additiveValue = this.calculateValue(expressionParameterValue.additiveValue, CubismExpressionMotion.DefaultAdditiveValue, fadeWeight);\n                    expressionParameterValue.multiplyValue = this.calculateValue(expressionParameterValue.multiplyValue, CubismExpressionMotion.DefaultMultiplyValue, fadeWeight);\n                    expressionParameterValue.overwriteValue = this.calculateValue(expressionParameterValue.overwriteValue, currentParameterValue, fadeWeight);\n                }\n                continue;\n            }\n            const value = expressionParameters.at(parameterIndex).value;\n            let newAdditiveValue, newMultiplyValue, newOverwriteValue;\n            switch (expressionParameters.at(parameterIndex).blendType) {\n                case ExpressionBlendType.Additive:\n                    newAdditiveValue = value;\n                    newMultiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    newOverwriteValue = currentParameterValue;\n                    break;\n                case ExpressionBlendType.Multiply:\n                    newAdditiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    newMultiplyValue = value;\n                    newOverwriteValue = currentParameterValue;\n                    break;\n                case ExpressionBlendType.Overwrite:\n                    newAdditiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    newMultiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    newOverwriteValue = value;\n                    break;\n                default:\n                    return;\n            }\n            if (expressionIndex == 0) {\n                expressionParameterValue.additiveValue = newAdditiveValue;\n                expressionParameterValue.multiplyValue = newMultiplyValue;\n                expressionParameterValue.overwriteValue = newOverwriteValue;\n            }\n            else {\n                expressionParameterValue.additiveValue =\n                    expressionParameterValue.additiveValue * (1.0 - fadeWeight) +\n                        newAdditiveValue * fadeWeight;\n                expressionParameterValue.multiplyValue =\n                    expressionParameterValue.multiplyValue * (1.0 - fadeWeight) +\n                        newMultiplyValue * fadeWeight;\n                expressionParameterValue.overwriteValue =\n                    expressionParameterValue.overwriteValue * (1.0 - fadeWeight) +\n                        newOverwriteValue * fadeWeight;\n            }\n        }\n    }\n    getExpressionParameters() {\n        return this._parameters;\n    }\n    getFadeWeight() {\n        return this._fadeWeight;\n    }\n    parse(buffer, size) {\n        const json = CubismJson.create(buffer, size);\n        if (!json) {\n            return;\n        }\n        const root = json.getRoot();\n        this.setFadeInTime(root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime));\n        this.setFadeOutTime(root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime));\n        const parameterCount = root\n            .getValueByString(ExpressionKeyParameters)\n            .getSize();\n        this._parameters.prepareCapacity(parameterCount);\n        for (let i = 0; i < parameterCount; ++i) {\n            const param = root\n                .getValueByString(ExpressionKeyParameters)\n                .getValueByIndex(i);\n            const parameterId = CubismFramework.getIdManager().getId(param.getValueByString(ExpressionKeyId).getRawString());\n            const value = param\n                .getValueByString(ExpressionKeyValue)\n                .toFloat();\n            let blendType;\n            if (param.getValueByString(ExpressionKeyBlend).isNull() ||\n                param.getValueByString(ExpressionKeyBlend).getString() == BlendValueAdd) {\n                blendType = ExpressionBlendType.Additive;\n            }\n            else if (param.getValueByString(ExpressionKeyBlend).getString() ==\n                BlendValueMultiply) {\n                blendType = ExpressionBlendType.Multiply;\n            }\n            else if (param.getValueByString(ExpressionKeyBlend).getString() ==\n                BlendValueOverwrite) {\n                blendType = ExpressionBlendType.Overwrite;\n            }\n            else {\n                blendType = ExpressionBlendType.Additive;\n            }\n            const item = new ExpressionParameter();\n            item.parameterId = parameterId;\n            item.blendType = blendType;\n            item.value = value;\n            this._parameters.pushBack(item);\n        }\n        CubismJson.delete(json);\n    }\n    calculateValue(source, destination, fadeWeight) {\n        return source * (1.0 - fadeWeight) + destination * fadeWeight;\n    }\n    constructor() {\n        super();\n        this._parameters = new csmVector();\n        this._fadeWeight = 0.0;\n    }\n}\nCubismExpressionMotion.DefaultAdditiveValue = 0.0;\nCubismExpressionMotion.DefaultMultiplyValue = 1.0;\nexport var ExpressionBlendType;\n(function (ExpressionBlendType) {\n    ExpressionBlendType[ExpressionBlendType[\"Additive\"] = 0] = \"Additive\";\n    ExpressionBlendType[ExpressionBlendType[\"Multiply\"] = 1] = \"Multiply\";\n    ExpressionBlendType[ExpressionBlendType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(ExpressionBlendType || (ExpressionBlendType = {}));\nexport class ExpressionParameter {\n}\nimport * as $ from './cubismexpressionmotion';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismExpressionMotion = $.CubismExpressionMotion;\n    Live2DCubismFramework.ExpressionBlendType = $.ExpressionBlendType;\n    Live2DCubismFramework.ExpressionParameter = $.ExpressionParameter;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { ACubismMotion } from './acubismmotion';\nexport class CubismMotionQueueEntry {\n    constructor() {\n        this._autoDelete = false;\n        this._motion = null;\n        this._available = true;\n        this._finished = false;\n        this._started = false;\n        this._startTimeSeconds = -1.0;\n        this._fadeInStartTimeSeconds = 0.0;\n        this._endTimeSeconds = -1.0;\n        this._stateTimeSeconds = 0.0;\n        this._stateWeight = 0.0;\n        this._lastEventCheckSeconds = 0.0;\n        this._motionQueueEntryHandle = this;\n        this._fadeOutSeconds = 0.0;\n        this._isTriggeredFadeOut = false;\n    }\n    release() {\n        if (this._autoDelete && this._motion) {\n            ACubismMotion.delete(this._motion);\n        }\n    }\n    setFadeOut(fadeOutSeconds) {\n        this._fadeOutSeconds = fadeOutSeconds;\n        this._isTriggeredFadeOut = true;\n    }\n    startFadeOut(fadeOutSeconds, userTimeSeconds) {\n        const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n        this._isTriggeredFadeOut = true;\n        if (this._endTimeSeconds < 0.0 ||\n            newEndTimeSeconds < this._endTimeSeconds) {\n            this._endTimeSeconds = newEndTimeSeconds;\n        }\n    }\n    isFinished() {\n        return this._finished;\n    }\n    isStarted() {\n        return this._started;\n    }\n    getStartTime() {\n        return this._startTimeSeconds;\n    }\n    getFadeInStartTime() {\n        return this._fadeInStartTimeSeconds;\n    }\n    getEndTime() {\n        return this._endTimeSeconds;\n    }\n    setStartTime(startTime) {\n        this._startTimeSeconds = startTime;\n    }\n    setFadeInStartTime(startTime) {\n        this._fadeInStartTimeSeconds = startTime;\n    }\n    setEndTime(endTime) {\n        this._endTimeSeconds = endTime;\n    }\n    setIsFinished(f) {\n        this._finished = f;\n    }\n    setIsStarted(f) {\n        this._started = f;\n    }\n    isAvailable() {\n        return this._available;\n    }\n    setIsAvailable(v) {\n        this._available = v;\n    }\n    setState(timeSeconds, weight) {\n        this._stateTimeSeconds = timeSeconds;\n        this._stateWeight = weight;\n    }\n    getStateTime() {\n        return this._stateTimeSeconds;\n    }\n    getStateWeight() {\n        return this._stateWeight;\n    }\n    getLastCheckEventSeconds() {\n        return this._lastEventCheckSeconds;\n    }\n    setLastCheckEventSeconds(checkSeconds) {\n        this._lastEventCheckSeconds = checkSeconds;\n    }\n    isTriggeredFadeOut() {\n        return this._isTriggeredFadeOut;\n    }\n    getFadeOutSeconds() {\n        return this._fadeOutSeconds;\n    }\n    getCubismMotion() {\n        return this._motion;\n    }\n}\nimport * as $ from './cubismmotionqueueentry';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionQueueEntry = $.CubismMotionQueueEntry;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMotionQueueEntry } from './cubismmotionqueueentry';\nimport { csmVector } from '../type/csmvector';\nexport class CubismMotionQueueManager {\n    constructor() {\n        this._userTimeSeconds = 0.0;\n        this._eventCallBack = null;\n        this._eventCustomData = null;\n        this._motions = new csmVector();\n    }\n    release() {\n        for (let i = 0; i < this._motions.getSize(); ++i) {\n            if (this._motions.at(i)) {\n                this._motions.at(i).release();\n                this._motions.set(i, null);\n            }\n        }\n        this._motions = null;\n    }\n    startMotion(motion, autoDelete, userTimeSeconds) {\n        if (motion == null) {\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        let motionQueueEntry = null;\n        for (let i = 0; i < this._motions.getSize(); ++i) {\n            motionQueueEntry = this._motions.at(i);\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n        }\n        motionQueueEntry = new CubismMotionQueueEntry();\n        motionQueueEntry._autoDelete = autoDelete;\n        motionQueueEntry._motion = motion;\n        this._motions.pushBack(motionQueueEntry);\n        return motionQueueEntry._motionQueueEntryHandle;\n    }\n    isFinished() {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            const motion = motionQueueEntry._motion;\n            if (motion == null) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            if (!motionQueueEntry.isFinished()) {\n                return false;\n            }\n            else {\n                ite.preIncrement();\n            }\n        }\n        return true;\n    }\n    isFinishedByHandle(motionQueueEntryNumber) {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.increment()) {\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\n                !motionQueueEntry.isFinished()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    stopAllMotions() {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            motionQueueEntry.release();\n            motionQueueEntry = null;\n            ite = this._motions.erase(ite);\n        }\n    }\n    getCubismMotionQueueEntries() {\n        return this._motions;\n    }\n    getCubismMotionQueueEntry(motionQueueEntryNumber) {\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.preIncrement()) {\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                continue;\n            }\n            if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber) {\n                return motionQueueEntry;\n            }\n        }\n        return null;\n    }\n    setEventCallback(callback, customData = null) {\n        this._eventCallBack = callback;\n        this._eventCustomData = customData;\n    }\n    doUpdateMotion(model, userTimeSeconds) {\n        let updated = false;\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            let motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            const motion = motionQueueEntry._motion;\n            if (motion == null) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite);\n                continue;\n            }\n            motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n            updated = true;\n            const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() -\n                motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n            for (let i = 0; i < firedList.getSize(); ++i) {\n                this._eventCallBack(this, firedList.at(i), this._eventCustomData);\n            }\n            motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n            if (motionQueueEntry.isFinished()) {\n                motionQueueEntry.release();\n                motionQueueEntry = null;\n                ite = this._motions.erase(ite);\n            }\n            else {\n                if (motionQueueEntry.isTriggeredFadeOut()) {\n                    motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n                }\n                ite.preIncrement();\n            }\n        }\n        return updated;\n    }\n}\nexport const InvalidMotionQueueEntryHandleValue = -1;\nimport * as $ from './cubismmotionqueuemanager';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionQueueManager = $.CubismMotionQueueManager;\n    Live2DCubismFramework.InvalidMotionQueueEntryHandleValue = $.InvalidMotionQueueEntryHandleValue;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmDelete } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { CubismExpressionMotion } from './cubismexpressionmotion';\nimport { CubismMotionQueueManager } from './cubismmotionqueuemanager';\nimport { CubismLogInfo } from '../utils/cubismdebug';\nexport class ExpressionParameterValue {\n}\nexport class CubismExpressionMotionManager extends CubismMotionQueueManager {\n    constructor() {\n        super();\n        this._currentPriority = 0;\n        this._reservePriority = 0;\n        this._expressionParameterValues = new csmVector();\n        this._fadeWeights = new csmVector();\n    }\n    release() {\n        if (this._expressionParameterValues) {\n            csmDelete(this._expressionParameterValues);\n            this._expressionParameterValues = null;\n        }\n        if (this._fadeWeights) {\n            csmDelete(this._fadeWeights);\n            this._fadeWeights = null;\n        }\n    }\n    getCurrentPriority() {\n        CubismLogInfo('CubismExpressionMotionManager.getCurrentPriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        return this._currentPriority;\n    }\n    getReservePriority() {\n        CubismLogInfo('CubismExpressionMotionManager.getReservePriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        return this._reservePriority;\n    }\n    getFadeWeight(index) {\n        if (index < 0 ||\n            this._fadeWeights.getSize() < 1 ||\n            index >= this._fadeWeights.getSize()) {\n            console.warn('Failed to get the fade weight value. The element at that index does not exist.');\n            return -1;\n        }\n        return this._fadeWeights.at(index);\n    }\n    setFadeWeight(index, expressionFadeWeight) {\n        if (index < 0 ||\n            this._fadeWeights.getSize() < 1 ||\n            this._fadeWeights.getSize() <= index) {\n            console.warn('Failed to set the fade weight value. The element at that index does not exist.');\n            return;\n        }\n        this._fadeWeights.set(index, expressionFadeWeight);\n    }\n    setReservePriority(priority) {\n        CubismLogInfo('CubismExpressionMotionManager.setReservePriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        this._reservePriority = priority;\n    }\n    startMotionPriority(motion, autoDelete, priority) {\n        CubismLogInfo('CubismExpressionMotionManager.startMotionPriority() is deprecated because a priority value is not actually used during expression motion playback.');\n        if (priority == this.getReservePriority()) {\n            this.setReservePriority(0);\n        }\n        this._currentPriority = priority;\n        return this.startMotion(motion, autoDelete);\n    }\n    updateMotion(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        let updated = false;\n        const motions = this.getCubismMotionQueueEntries();\n        let expressionWeight = 0.0;\n        let expressionIndex = 0;\n        if (this._fadeWeights.getSize() !== motions.getSize()) {\n            const difference = motions.getSize() - this._fadeWeights.getSize();\n            for (let i = 0; i < difference; i++) {\n                this._fadeWeights.pushBack(0.0);\n            }\n        }\n        for (let ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\n            const motionQueueEntry = ite.ptr();\n            if (motionQueueEntry == null) {\n                ite = motions.erase(ite);\n                continue;\n            }\n            const expressionMotion = (motionQueueEntry.getCubismMotion());\n            if (expressionMotion == null) {\n                csmDelete(motionQueueEntry);\n                ite = motions.erase(ite);\n                continue;\n            }\n            const expressionParameters = expressionMotion.getExpressionParameters();\n            if (motionQueueEntry.isAvailable()) {\n                for (let i = 0; i < expressionParameters.getSize(); ++i) {\n                    if (expressionParameters.at(i).parameterId == null) {\n                        continue;\n                    }\n                    let index = -1;\n                    for (let j = 0; j < this._expressionParameterValues.getSize(); ++j) {\n                        if (this._expressionParameterValues.at(j).parameterId !=\n                            expressionParameters.at(i).parameterId) {\n                            continue;\n                        }\n                        index = j;\n                        break;\n                    }\n                    if (index >= 0) {\n                        continue;\n                    }\n                    const item = new ExpressionParameterValue();\n                    item.parameterId = expressionParameters.at(i).parameterId;\n                    item.additiveValue = CubismExpressionMotion.DefaultAdditiveValue;\n                    item.multiplyValue = CubismExpressionMotion.DefaultMultiplyValue;\n                    item.overwriteValue = model.getParameterValueById(item.parameterId);\n                    this._expressionParameterValues.pushBack(item);\n                }\n            }\n            expressionMotion.setupMotionQueueEntry(motionQueueEntry, this._userTimeSeconds);\n            this.setFadeWeight(expressionIndex, expressionMotion.updateFadeWeight(motionQueueEntry, this._userTimeSeconds));\n            expressionMotion.calculateExpressionParameters(model, this._userTimeSeconds, motionQueueEntry, this._expressionParameterValues, expressionIndex, this.getFadeWeight(expressionIndex));\n            expressionWeight +=\n                expressionMotion.getFadeInTime() == 0.0\n                    ? 1.0\n                    : CubismMath.getEasingSine((this._userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                        expressionMotion.getFadeInTime());\n            updated = true;\n            if (motionQueueEntry.isTriggeredFadeOut()) {\n                motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), this._userTimeSeconds);\n            }\n            ite.preIncrement();\n            ++expressionIndex;\n        }\n        if (motions.getSize() > 1) {\n            const latestFadeWeight = this.getFadeWeight(this._fadeWeights.getSize() - 1);\n            if (latestFadeWeight >= 1.0) {\n                for (let i = motions.getSize() - 2; i >= 0; --i) {\n                    const motionQueueEntry = motions.at(i);\n                    csmDelete(motionQueueEntry);\n                    motions.remove(i);\n                    this._fadeWeights.remove(i);\n                }\n            }\n        }\n        if (expressionWeight > 1.0) {\n            expressionWeight = 1.0;\n        }\n        for (let i = 0; i < this._expressionParameterValues.getSize(); ++i) {\n            const expressionParameterValue = this._expressionParameterValues.at(i);\n            model.setParameterValueById(expressionParameterValue.parameterId, (expressionParameterValue.overwriteValue +\n                expressionParameterValue.additiveValue) *\n                expressionParameterValue.multiplyValue, expressionWeight);\n            expressionParameterValue.additiveValue =\n                CubismExpressionMotion.DefaultAdditiveValue;\n            expressionParameterValue.multiplyValue =\n                CubismExpressionMotion.DefaultMultiplyValue;\n        }\n        return updated;\n    }\n}\nimport * as $ from './cubismexpressionmotionmanager';\nimport { CubismMath } from '../math/cubismmath';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismExpressionMotionManager = $.CubismExpressionMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmVector } from '../type/csmvector';\nexport var CubismMotionCurveTarget;\n(function (CubismMotionCurveTarget) {\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n})(CubismMotionCurveTarget || (CubismMotionCurveTarget = {}));\nexport var CubismMotionSegmentType;\n(function (CubismMotionSegmentType) {\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n})(CubismMotionSegmentType || (CubismMotionSegmentType = {}));\nexport class CubismMotionPoint {\n    constructor() {\n        this.time = 0.0;\n        this.value = 0.0;\n    }\n}\nexport class CubismMotionSegment {\n    constructor() {\n        this.evaluate = null;\n        this.basePointIndex = 0;\n        this.segmentType = 0;\n    }\n}\nexport class CubismMotionCurve {\n    constructor() {\n        this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n        this.segmentCount = 0;\n        this.baseSegmentIndex = 0;\n        this.fadeInTime = 0.0;\n        this.fadeOutTime = 0.0;\n    }\n}\nexport class CubismMotionEvent {\n    constructor() {\n        this.fireTime = 0.0;\n    }\n}\nexport class CubismMotionData {\n    constructor() {\n        this.duration = 0.0;\n        this.loop = false;\n        this.curveCount = 0;\n        this.eventCount = 0;\n        this.fps = 0.0;\n        this.curves = new csmVector();\n        this.segments = new csmVector();\n        this.points = new csmVector();\n        this.events = new csmVector();\n    }\n}\nimport * as $ from './cubismmotioninternal';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionCurve = $.CubismMotionCurve;\n    Live2DCubismFramework.CubismMotionCurveTarget = $.CubismMotionCurveTarget;\n    Live2DCubismFramework.CubismMotionData = $.CubismMotionData;\n    Live2DCubismFramework.CubismMotionEvent = $.CubismMotionEvent;\n    Live2DCubismFramework.CubismMotionPoint = $.CubismMotionPoint;\n    Live2DCubismFramework.CubismMotionSegment = $.CubismMotionSegment;\n    Live2DCubismFramework.CubismMotionSegmentType = $.CubismMotionSegmentType;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmString } from '../type/csmstring';\nimport { CSM_ASSERT, CubismLogWarning } from '../utils/cubismdebug';\nimport { CubismJson } from '../utils/cubismjson';\nimport { CubismMotionSegmentType } from './cubismmotioninternal';\nconst Meta = 'Meta';\nconst Duration = 'Duration';\nconst Loop = 'Loop';\nconst AreBeziersRestricted = 'AreBeziersRestricted';\nconst CurveCount = 'CurveCount';\nconst Fps = 'Fps';\nconst TotalSegmentCount = 'TotalSegmentCount';\nconst TotalPointCount = 'TotalPointCount';\nconst Curves = 'Curves';\nconst Target = 'Target';\nconst Id = 'Id';\nconst FadeInTime = 'FadeInTime';\nconst FadeOutTime = 'FadeOutTime';\nconst Segments = 'Segments';\nconst UserData = 'UserData';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst Time = 'Time';\nconst Value = 'Value';\nexport class CubismMotionJson {\n    constructor(buffer, size) {\n        this._json = CubismJson.create(buffer, size);\n    }\n    release() {\n        CubismJson.delete(this._json);\n    }\n    getMotionDuration() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Duration)\n            .toFloat();\n    }\n    isMotionLoop() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Loop)\n            .toBoolean();\n    }\n    hasConsistency() {\n        let result = true;\n        if (!this._json || !this._json.getRoot()) {\n            return false;\n        }\n        const actualCurveListSize = this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getVector()\n            .getSize();\n        let actualTotalSegmentCount = 0;\n        let actualTotalPointCount = 0;\n        for (let curvePosition = 0; curvePosition < actualCurveListSize; ++curvePosition) {\n            for (let segmentPosition = 0; segmentPosition < this.getMotionCurveSegmentCount(curvePosition);) {\n                if (segmentPosition == 0) {\n                    actualTotalPointCount += 1;\n                    segmentPosition += 2;\n                }\n                const segment = this.getMotionCurveSegment(curvePosition, segmentPosition);\n                switch (segment) {\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n                        actualTotalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n                        actualTotalPointCount += 3;\n                        segmentPosition += 7;\n                        break;\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n                        actualTotalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n                        actualTotalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    default:\n                        CSM_ASSERT(0);\n                        break;\n                }\n                ++actualTotalSegmentCount;\n            }\n        }\n        if (actualCurveListSize != this.getMotionCurveCount()) {\n            CubismLogWarning('The number of curves does not match the metadata.');\n            result = false;\n        }\n        if (actualTotalSegmentCount != this.getMotionTotalSegmentCount()) {\n            CubismLogWarning('The number of segment does not match the metadata.');\n            result = false;\n        }\n        if (actualTotalPointCount != this.getMotionTotalPointCount()) {\n            CubismLogWarning('The number of point does not match the metadata.');\n            result = false;\n        }\n        return result;\n    }\n    getEvaluationOptionFlag(flagType) {\n        if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n            return this._json\n                .getRoot()\n                .getValueByString(Meta)\n                .getValueByString(AreBeziersRestricted)\n                .toBoolean();\n        }\n        return false;\n    }\n    getMotionCurveCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(CurveCount)\n            .toInt();\n    }\n    getMotionFps() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Fps)\n            .toFloat();\n    }\n    getMotionTotalSegmentCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalSegmentCount)\n            .toInt();\n    }\n    getMotionTotalPointCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalPointCount)\n            .toInt();\n    }\n    isExistMotionFadeInTime() {\n        return !this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeInTime)\n            .isNull();\n    }\n    isExistMotionFadeOutTime() {\n        return !this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeOutTime)\n            .isNull();\n    }\n    getMotionFadeInTime() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeInTime)\n            .toFloat();\n    }\n    getMotionFadeOutTime() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(FadeOutTime)\n            .toFloat();\n    }\n    getMotionCurveTarget(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Target)\n            .getRawString();\n    }\n    getMotionCurveId(curveIndex) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    isExistMotionCurveFadeInTime(curveIndex) {\n        return !this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeInTime)\n            .isNull();\n    }\n    isExistMotionCurveFadeOutTime(curveIndex) {\n        return !this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeOutTime)\n            .isNull();\n    }\n    getMotionCurveFadeInTime(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeInTime)\n            .toFloat();\n    }\n    getMotionCurveFadeOutTime(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(FadeOutTime)\n            .toFloat();\n    }\n    getMotionCurveSegmentCount(curveIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Segments)\n            .getVector()\n            .getSize();\n    }\n    getMotionCurveSegment(curveIndex, segmentIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(Curves)\n            .getValueByIndex(curveIndex)\n            .getValueByString(Segments)\n            .getValueByIndex(segmentIndex)\n            .toFloat();\n    }\n    getEventCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(UserDataCount)\n            .toInt();\n    }\n    getTotalEventValueSize() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalUserDataSize)\n            .toInt();\n    }\n    getEventTime(userDataIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(userDataIndex)\n            .getValueByString(Time)\n            .toFloat();\n    }\n    getEventValue(userDataIndex) {\n        return new csmString(this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(userDataIndex)\n            .getValueByString(Value)\n            .getRawString());\n    }\n}\nexport var EvaluationOptionFlag;\n(function (EvaluationOptionFlag) {\n    EvaluationOptionFlag[EvaluationOptionFlag[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n})(EvaluationOptionFlag || (EvaluationOptionFlag = {}));\nimport * as $ from './cubismmotionjson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionJson = $.CubismMotionJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmDelete, CubismFramework } from '../live2dcubismframework';\nimport { CubismMath } from '../math/cubismmath';\nimport { csmString } from '../type/csmstring';\nimport { CSM_ASSERT, CubismLogDebug, CubismLogError, CubismLogWarning } from '../utils/cubismdebug';\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionPoint, CubismMotionSegment, CubismMotionSegmentType } from './cubismmotioninternal';\nimport { CubismMotionJson, EvaluationOptionFlag } from './cubismmotionjson';\nconst EffectNameEyeBlink = 'EyeBlink';\nconst EffectNameLipSync = 'LipSync';\nconst TargetNameModel = 'Model';\nconst TargetNameParameter = 'Parameter';\nconst TargetNamePartOpacity = 'PartOpacity';\nconst IdNameOpacity = 'Opacity';\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n    const result = new CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n}\nfunction linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateBinarySearch(points, time) {\n    const xError = 0.01;\n    const x = time;\n    let x1 = points[0].time;\n    let x2 = points[3].time;\n    let cx1 = points[1].time;\n    let cx2 = points[2].time;\n    let ta = 0.0;\n    let tb = 1.0;\n    let t = 0.0;\n    let i = 0;\n    for (let var33 = true; i < 20; ++i) {\n        if (x < x1 + xError) {\n            t = ta;\n            break;\n        }\n        if (x2 - xError < x) {\n            t = tb;\n            break;\n        }\n        let centerx = (cx1 + cx2) * 0.5;\n        cx1 = (x1 + cx1) * 0.5;\n        cx2 = (x2 + cx2) * 0.5;\n        const ctrlx12 = (cx1 + centerx) * 0.5;\n        const ctrlx21 = (cx2 + centerx) * 0.5;\n        centerx = (ctrlx12 + ctrlx21) * 0.5;\n        if (x < centerx) {\n            tb = (ta + tb) * 0.5;\n            if (centerx - xError < x) {\n                t = tb;\n                break;\n            }\n            x2 = centerx;\n            cx2 = ctrlx12;\n        }\n        else {\n            ta = (ta + tb) * 0.5;\n            if (x < centerx + xError) {\n                t = ta;\n                break;\n            }\n            x1 = centerx;\n            cx1 = ctrlx21;\n        }\n    }\n    if (i == 20) {\n        t = (ta + tb) * 0.5;\n    }\n    if (t < 0.0) {\n        t = 0.0;\n    }\n    if (t > 1.0) {\n        t = 1.0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3.0 * cx2 + 3.0 * cx1 - x1;\n    const b = 3.0 * cx2 - 6.0 * cx1 + 3.0 * x1;\n    const c = 3.0 * cx1 - 3.0 * x1;\n    const d = x1 - x;\n    const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n    return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time, isCorrection, endTime) {\n    const curve = motionData.curves.at(index);\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n        pointPosition =\n            motionData.segments.at(i).basePointIndex +\n                (motionData.segments.at(i).segmentType ==\n                    CubismMotionSegmentType.CubismMotionSegmentType_Bezier\n                    ? 3\n                    : 1);\n        if (motionData.points.at(pointPosition).time > time) {\n            target = i;\n            break;\n        }\n    }\n    if (target == -1) {\n        if (isCorrection && time < endTime) {\n            return correctEndPoint(motionData, totalSegmentCount - 1, motionData.segments.at(curve.baseSegmentIndex).basePointIndex, pointPosition, time, endTime);\n        }\n        return motionData.points.at(pointPosition).value;\n    }\n    const segment = motionData.segments.at(target);\n    return segment.evaluate(motionData.points.get(segment.basePointIndex), time);\n}\nfunction correctEndPoint(motionData, segmentIndex, beginIndex, endIndex, time, endTime) {\n    const motionPoint = [\n        new CubismMotionPoint(),\n        new CubismMotionPoint()\n    ];\n    {\n        const src = motionData.points.at(endIndex);\n        motionPoint[0].time = src.time;\n        motionPoint[0].value = src.value;\n    }\n    {\n        const src = motionData.points.at(beginIndex);\n        motionPoint[1].time = endTime;\n        motionPoint[1].value = src.value;\n    }\n    switch (motionData.segments.at(segmentIndex).segmentType) {\n        case CubismMotionSegmentType.CubismMotionSegmentType_Linear:\n        case CubismMotionSegmentType.CubismMotionSegmentType_Bezier:\n        default:\n            return linearEvaluate(motionPoint, time);\n        case CubismMotionSegmentType.CubismMotionSegmentType_Stepped:\n            return steppedEvaluate(motionPoint, time);\n        case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped:\n            return inverseSteppedEvaluate(motionPoint, time);\n    }\n}\nexport var MotionBehavior;\n(function (MotionBehavior) {\n    MotionBehavior[MotionBehavior[\"MotionBehavior_V1\"] = 0] = \"MotionBehavior_V1\";\n    MotionBehavior[MotionBehavior[\"MotionBehavior_V2\"] = 1] = \"MotionBehavior_V2\";\n})(MotionBehavior || (MotionBehavior = {}));\nexport class CubismMotion extends ACubismMotion {\n    static create(buffer, size, onFinishedMotionHandler, onBeganMotionHandler, shouldCheckMotionConsistency = false) {\n        const ret = new CubismMotion();\n        ret.parse(buffer, size, shouldCheckMotionConsistency);\n        if (ret._motionData) {\n            ret._sourceFrameRate = ret._motionData.fps;\n            ret._loopDurationSeconds = ret._motionData.duration;\n            ret._onFinishedMotion = onFinishedMotionHandler;\n            ret._onBeganMotion = onBeganMotionHandler;\n        }\n        else {\n            csmDelete(ret);\n            return null;\n        }\n        return ret;\n    }\n    doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n        if (this._modelCurveIdEyeBlink == null) {\n            this._modelCurveIdEyeBlink =\n                CubismFramework.getIdManager().getId(EffectNameEyeBlink);\n        }\n        if (this._modelCurveIdLipSync == null) {\n            this._modelCurveIdLipSync =\n                CubismFramework.getIdManager().getId(EffectNameLipSync);\n        }\n        if (this._modelCurveIdOpacity == null) {\n            this._modelCurveIdOpacity =\n                CubismFramework.getIdManager().getId(IdNameOpacity);\n        }\n        if (this._motionBehavior === MotionBehavior.MotionBehavior_V2) {\n            if (this._previousLoopState !== this._isLoop) {\n                this.adjustEndTime(motionQueueEntry);\n                this._previousLoopState = this._isLoop;\n            }\n        }\n        let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n        if (timeOffsetSeconds < 0.0) {\n            timeOffsetSeconds = 0.0;\n        }\n        let lipSyncValue = Number.MAX_VALUE;\n        let eyeBlinkValue = Number.MAX_VALUE;\n        const maxTargetSize = 64;\n        let lipSyncFlags = 0;\n        let eyeBlinkFlags = 0;\n        if (this._eyeBlinkParameterIds.getSize() > maxTargetSize) {\n            CubismLogDebug('too many eye blink targets : {0}', this._eyeBlinkParameterIds.getSize());\n        }\n        if (this._lipSyncParameterIds.getSize() > maxTargetSize) {\n            CubismLogDebug('too many lip sync targets : {0}', this._lipSyncParameterIds.getSize());\n        }\n        const tmpFadeIn = this._fadeInSeconds <= 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                this._fadeInSeconds);\n        const tmpFadeOut = this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\n            ? 1.0\n            : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\n                this._fadeOutSeconds);\n        let value;\n        let c, parameterIndex;\n        let time = timeOffsetSeconds;\n        let duration = this._motionData.duration;\n        const isCorrection = this._motionBehavior === MotionBehavior.MotionBehavior_V2 && this._isLoop;\n        if (this._isLoop) {\n            if (this._motionBehavior === MotionBehavior.MotionBehavior_V2) {\n                duration += 1.0 / this._motionData.fps;\n            }\n            while (time > duration) {\n                time -= duration;\n            }\n        }\n        const curves = this._motionData.curves;\n        for (c = 0; c < this._motionData.curveCount &&\n            curves.at(c).type ==\n                CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n            value = evaluateCurve(this._motionData, c, time, isCorrection, duration);\n            if (curves.at(c).id == this._modelCurveIdEyeBlink) {\n                eyeBlinkValue = value;\n            }\n            else if (curves.at(c).id == this._modelCurveIdLipSync) {\n                lipSyncValue = value;\n            }\n            else if (curves.at(c).id == this._modelCurveIdOpacity) {\n                this._modelOpacity = value;\n                model.setModelOapcity(this.getModelOpacityValue());\n            }\n        }\n        let parameterMotionCurveCount = 0;\n        for (; c < this._motionData.curveCount &&\n            curves.at(c).type ==\n                CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n            parameterMotionCurveCount++;\n            parameterIndex = model.getParameterIndex(curves.at(c).id);\n            if (parameterIndex == -1) {\n                continue;\n            }\n            const sourceValue = model.getParameterValueByIndex(parameterIndex);\n            value = evaluateCurve(this._motionData, c, time, isCorrection, duration);\n            if (eyeBlinkValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._eyeBlinkParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\n                        value *= eyeBlinkValue;\n                        eyeBlinkFlags |= 1 << i;\n                        break;\n                    }\n                }\n            }\n            if (lipSyncValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._lipSyncParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\n                        value += lipSyncValue;\n                        lipSyncFlags |= 1 << i;\n                        break;\n                    }\n                }\n            }\n            if (model.isRepeat(parameterIndex)) {\n                value = model.getParameterRepeatValue(parameterIndex, value);\n            }\n            let v;\n            if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\n                v = sourceValue + (value - sourceValue) * fadeWeight;\n            }\n            else {\n                let fin;\n                let fout;\n                if (curves.at(c).fadeInTime < 0.0) {\n                    fin = tmpFadeIn;\n                }\n                else {\n                    fin =\n                        curves.at(c).fadeInTime == 0.0\n                            ? 1.0\n                            : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\n                                curves.at(c).fadeInTime);\n                }\n                if (curves.at(c).fadeOutTime < 0.0) {\n                    fout = tmpFadeOut;\n                }\n                else {\n                    fout =\n                        curves.at(c).fadeOutTime == 0.0 ||\n                            motionQueueEntry.getEndTime() < 0.0\n                            ? 1.0\n                            : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\n                                curves.at(c).fadeOutTime);\n                }\n                const paramWeight = this._weight * fin * fout;\n                v = sourceValue + (value - sourceValue) * paramWeight;\n            }\n            model.setParameterValueByIndex(parameterIndex, v, 1.0);\n        }\n        {\n            if (eyeBlinkValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._eyeBlinkParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds.at(i));\n                    if ((eyeBlinkFlags >> i) & 0x01) {\n                        continue;\n                    }\n                    const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n                    model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\n                }\n            }\n            if (lipSyncValue != Number.MAX_VALUE) {\n                for (let i = 0; i < this._lipSyncParameterIds.getSize() && i < maxTargetSize; ++i) {\n                    const sourceValue = model.getParameterValueById(this._lipSyncParameterIds.at(i));\n                    if ((lipSyncFlags >> i) & 0x01) {\n                        continue;\n                    }\n                    const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n                    model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\n                }\n            }\n        }\n        for (; c < this._motionData.curveCount &&\n            curves.at(c).type ==\n                CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n            parameterIndex = model.getParameterIndex(curves.at(c).id);\n            if (parameterIndex == -1) {\n                continue;\n            }\n            value = evaluateCurve(this._motionData, c, time, isCorrection, duration);\n            model.setParameterValueByIndex(parameterIndex, value);\n        }\n        if (timeOffsetSeconds >= duration) {\n            if (this._isLoop) {\n                this.updateForNextLoop(motionQueueEntry, userTimeSeconds, time);\n            }\n            else {\n                if (this._onFinishedMotion) {\n                    this._onFinishedMotion(this);\n                }\n                motionQueueEntry.setIsFinished(true);\n            }\n        }\n        this._lastWeight = fadeWeight;\n    }\n    setIsLoop(loop) {\n        CubismLogWarning('setIsLoop() is a deprecated function. Please use setLoop().');\n        this._isLoop = loop;\n    }\n    isLoop() {\n        CubismLogWarning('isLoop() is a deprecated function. Please use getLoop().');\n        return this._isLoop;\n    }\n    setIsLoopFadeIn(loopFadeIn) {\n        CubismLogWarning('setIsLoopFadeIn() is a deprecated function. Please use setLoopFadeIn().');\n        this._isLoopFadeIn = loopFadeIn;\n    }\n    isLoopFadeIn() {\n        CubismLogWarning('isLoopFadeIn() is a deprecated function. Please use getLoopFadeIn().');\n        return this._isLoopFadeIn;\n    }\n    setMotionBehavior(motionBehavior) {\n        this._motionBehavior = motionBehavior;\n    }\n    getMotionBehavior() {\n        return this._motionBehavior;\n    }\n    getDuration() {\n        return this._isLoop ? -1.0 : this._loopDurationSeconds;\n    }\n    getLoopDuration() {\n        return this._loopDurationSeconds;\n    }\n    setParameterFadeInTime(parameterId, value) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                curves.at(i).fadeInTime = value;\n                return;\n            }\n        }\n    }\n    setParameterFadeOutTime(parameterId, value) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                curves.at(i).fadeOutTime = value;\n                return;\n            }\n        }\n    }\n    getParameterFadeInTime(parameterId) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                return curves.at(i).fadeInTime;\n            }\n        }\n        return -1;\n    }\n    getParameterFadeOutTime(parameterId) {\n        const curves = this._motionData.curves;\n        for (let i = 0; i < this._motionData.curveCount; ++i) {\n            if (parameterId == curves.at(i).id) {\n                return curves.at(i).fadeOutTime;\n            }\n        }\n        return -1;\n    }\n    setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n        this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n        this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    constructor() {\n        super();\n        this._motionBehavior = MotionBehavior.MotionBehavior_V2;\n        this._sourceFrameRate = 30.0;\n        this._loopDurationSeconds = -1.0;\n        this._isLoop = false;\n        this._isLoopFadeIn = true;\n        this._lastWeight = 0.0;\n        this._motionData = null;\n        this._modelCurveIdEyeBlink = null;\n        this._modelCurveIdLipSync = null;\n        this._modelCurveIdOpacity = null;\n        this._eyeBlinkParameterIds = null;\n        this._lipSyncParameterIds = null;\n        this._modelOpacity = 1.0;\n        this._debugMode = false;\n    }\n    release() {\n        this._motionData = void 0;\n        this._motionData = null;\n    }\n    updateForNextLoop(motionQueueEntry, userTimeSeconds, time) {\n        switch (this._motionBehavior) {\n            case MotionBehavior.MotionBehavior_V2:\n            default:\n                motionQueueEntry.setStartTime(userTimeSeconds - time);\n                if (this._isLoopFadeIn) {\n                    motionQueueEntry.setFadeInStartTime(userTimeSeconds - time);\n                }\n                if (this._onFinishedMotion != null) {\n                    this._onFinishedMotion(this);\n                }\n                break;\n            case MotionBehavior.MotionBehavior_V1:\n                motionQueueEntry.setStartTime(userTimeSeconds);\n                if (this._isLoopFadeIn) {\n                    motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n                }\n                break;\n        }\n    }\n    parse(motionJson, size, shouldCheckMotionConsistency = false) {\n        let json = new CubismMotionJson(motionJson, size);\n        if (!json) {\n            json.release();\n            json = void 0;\n            return;\n        }\n        if (shouldCheckMotionConsistency) {\n            const consistency = json.hasConsistency();\n            if (!consistency) {\n                json.release();\n                CubismLogError('Inconsistent motion3.json.');\n                return;\n            }\n        }\n        this._motionData = new CubismMotionData();\n        this._motionData.duration = json.getMotionDuration();\n        this._motionData.loop = json.isMotionLoop();\n        this._motionData.curveCount = json.getMotionCurveCount();\n        this._motionData.fps = json.getMotionFps();\n        this._motionData.eventCount = json.getEventCount();\n        const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n        if (json.isExistMotionFadeInTime()) {\n            this._fadeInSeconds =\n                json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\n        }\n        else {\n            this._fadeInSeconds = 1.0;\n        }\n        if (json.isExistMotionFadeOutTime()) {\n            this._fadeOutSeconds =\n                json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\n        }\n        else {\n            this._fadeOutSeconds = 1.0;\n        }\n        this._motionData.curves.updateSize(this._motionData.curveCount, CubismMotionCurve, true);\n        this._motionData.segments.updateSize(json.getMotionTotalSegmentCount(), CubismMotionSegment, true);\n        this._motionData.points.updateSize(json.getMotionTotalPointCount(), CubismMotionPoint, true);\n        this._motionData.events.updateSize(this._motionData.eventCount, CubismMotionEvent, true);\n        let totalPointCount = 0;\n        let totalSegmentCount = 0;\n        for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n            if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\n                this._motionData.curves.at(curveCount).type =\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            }\n            else if (json.getMotionCurveTarget(curveCount) == TargetNameParameter) {\n                this._motionData.curves.at(curveCount).type =\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            }\n            else if (json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity) {\n                this._motionData.curves.at(curveCount).type =\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            }\n            else {\n                CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n            }\n            this._motionData.curves.at(curveCount).id =\n                json.getMotionCurveId(curveCount);\n            this._motionData.curves.at(curveCount).baseSegmentIndex =\n                totalSegmentCount;\n            this._motionData.curves.at(curveCount).fadeInTime =\n                json.isExistMotionCurveFadeInTime(curveCount)\n                    ? json.getMotionCurveFadeInTime(curveCount)\n                    : -1.0;\n            this._motionData.curves.at(curveCount).fadeOutTime =\n                json.isExistMotionCurveFadeOutTime(curveCount)\n                    ? json.getMotionCurveFadeOutTime(curveCount)\n                    : -1.0;\n            for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);) {\n                if (segmentPosition == 0) {\n                    this._motionData.segments.at(totalSegmentCount).basePointIndex =\n                        totalPointCount;\n                    this._motionData.points.at(totalPointCount).time =\n                        json.getMotionCurveSegment(curveCount, segmentPosition);\n                    this._motionData.points.at(totalPointCount).value =\n                        json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                    totalPointCount += 1;\n                    segmentPosition += 2;\n                }\n                else {\n                    this._motionData.segments.at(totalSegmentCount).basePointIndex =\n                        totalPointCount - 1;\n                }\n                const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n                const segmentType = segment;\n                switch (segmentType) {\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n                        this._motionData.segments.at(totalSegmentCount).evaluate =\n                            linearEvaluate;\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        totalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    }\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n                        if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                            this._motionData.segments.at(totalSegmentCount).evaluate =\n                                bezierEvaluate;\n                        }\n                        else {\n                            this._motionData.segments.at(totalSegmentCount).evaluate =\n                                bezierEvaluateCardanoInterpretation;\n                        }\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        this._motionData.points.at(totalPointCount + 1).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 3);\n                        this._motionData.points.at(totalPointCount + 1).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 4);\n                        this._motionData.points.at(totalPointCount + 2).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 5);\n                        this._motionData.points.at(totalPointCount + 2).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 6);\n                        totalPointCount += 3;\n                        segmentPosition += 7;\n                        break;\n                    }\n                    case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n                        this._motionData.segments.at(totalSegmentCount).evaluate =\n                            steppedEvaluate;\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        totalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    }\n                    case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n                        this._motionData.segments.at(totalSegmentCount).segmentType =\n                            CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n                        this._motionData.segments.at(totalSegmentCount).evaluate =\n                            inverseSteppedEvaluate;\n                        this._motionData.points.at(totalPointCount).time =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\n                        this._motionData.points.at(totalPointCount).value =\n                            json.getMotionCurveSegment(curveCount, segmentPosition + 2);\n                        totalPointCount += 1;\n                        segmentPosition += 3;\n                        break;\n                    }\n                    default: {\n                        CSM_ASSERT(0);\n                        break;\n                    }\n                }\n                ++this._motionData.curves.at(curveCount).segmentCount;\n                ++totalSegmentCount;\n            }\n        }\n        for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n            this._motionData.events.at(userdatacount).fireTime =\n                json.getEventTime(userdatacount);\n            this._motionData.events.at(userdatacount).value =\n                json.getEventValue(userdatacount);\n        }\n        json.release();\n        json = void 0;\n        json = null;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n        this._firedEventValues.updateSize(0);\n        for (let u = 0; u < this._motionData.eventCount; ++u) {\n            if (this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds &&\n                this._motionData.events.at(u).fireTime <= motionTimeSeconds) {\n                this._firedEventValues.pushBack(new csmString(this._motionData.events.at(u).value.s));\n            }\n        }\n        return this._firedEventValues;\n    }\n    isExistModelOpacity() {\n        for (let i = 0; i < this._motionData.curveCount; i++) {\n            const curve = this._motionData.curves.at(i);\n            if (curve.type != CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                continue;\n            }\n            if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getModelOpacityIndex() {\n        if (this.isExistModelOpacity()) {\n            for (let i = 0; i < this._motionData.curveCount; i++) {\n                const curve = this._motionData.curves.at(i);\n                if (curve.type != CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                    continue;\n                }\n                if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n    getModelOpacityId(index) {\n        if (index != -1) {\n            const curve = this._motionData.curves.at(index);\n            if (curve.type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model) {\n                if (curve.id.getString().s.localeCompare(IdNameOpacity) == 0) {\n                    return CubismFramework.getIdManager().getId(curve.id.getString().s);\n                }\n            }\n        }\n        return null;\n    }\n    getModelOpacityValue() {\n        return this._modelOpacity;\n    }\n    setDebugMode(debugMode) {\n        this._debugMode = debugMode;\n    }\n}\nimport * as $ from './cubismmotion';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotion = $.CubismMotion;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMotionQueueManager } from './cubismmotionqueuemanager';\nexport class CubismMotionManager extends CubismMotionQueueManager {\n    constructor() {\n        super();\n        this._currentPriority = 0;\n        this._reservePriority = 0;\n    }\n    getCurrentPriority() {\n        return this._currentPriority;\n    }\n    getReservePriority() {\n        return this._reservePriority;\n    }\n    setReservePriority(val) {\n        this._reservePriority = val;\n    }\n    startMotionPriority(motion, autoDelete, priority) {\n        if (priority == this._reservePriority) {\n            this._reservePriority = 0;\n        }\n        this._currentPriority = priority;\n        return super.startMotion(motion, autoDelete);\n    }\n    updateMotion(model, deltaTimeSeconds) {\n        this._userTimeSeconds += deltaTimeSeconds;\n        const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n        if (this.isFinished()) {\n            this._currentPriority = 0;\n        }\n        return updated;\n    }\n    reserveMotion(priority) {\n        if (priority <= this._reservePriority ||\n            priority <= this._currentPriority) {\n            return false;\n        }\n        this._reservePriority = priority;\n        return true;\n    }\n}\nimport * as $ from './cubismmotionmanager';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMotionManager = $.CubismMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismVector2 } from '../math/cubismvector2';\nimport { csmVector } from '../type/csmvector';\nexport var CubismPhysicsTargetType;\n(function (CubismPhysicsTargetType) {\n    CubismPhysicsTargetType[CubismPhysicsTargetType[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n})(CubismPhysicsTargetType || (CubismPhysicsTargetType = {}));\nexport var CubismPhysicsSource;\n(function (CubismPhysicsSource) {\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource[CubismPhysicsSource[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n})(CubismPhysicsSource || (CubismPhysicsSource = {}));\nexport class PhysicsJsonEffectiveForces {\n    constructor() {\n        this.gravity = new CubismVector2(0, 0);\n        this.wind = new CubismVector2(0, 0);\n    }\n}\nexport class CubismPhysicsParameter {\n}\nexport class CubismPhysicsNormalization {\n}\nexport class CubismPhysicsParticle {\n    constructor() {\n        this.initialPosition = new CubismVector2(0, 0);\n        this.position = new CubismVector2(0, 0);\n        this.lastPosition = new CubismVector2(0, 0);\n        this.lastGravity = new CubismVector2(0, 0);\n        this.force = new CubismVector2(0, 0);\n        this.velocity = new CubismVector2(0, 0);\n    }\n}\nexport class CubismPhysicsSubRig {\n    constructor() {\n        this.normalizationPosition = new CubismPhysicsNormalization();\n        this.normalizationAngle = new CubismPhysicsNormalization();\n    }\n}\nexport class CubismPhysicsInput {\n    constructor() {\n        this.source = new CubismPhysicsParameter();\n    }\n}\nexport class CubismPhysicsOutput {\n    constructor() {\n        this.destination = new CubismPhysicsParameter();\n        this.translationScale = new CubismVector2(0, 0);\n    }\n}\nexport class CubismPhysicsRig {\n    constructor() {\n        this.settings = new csmVector();\n        this.inputs = new csmVector();\n        this.outputs = new csmVector();\n        this.particles = new csmVector();\n        this.gravity = new CubismVector2(0, 0);\n        this.wind = new CubismVector2(0, 0);\n        this.fps = 0.0;\n    }\n}\nimport * as $ from './cubismphysicsinternal';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysicsInput = $.CubismPhysicsInput;\n    Live2DCubismFramework.CubismPhysicsNormalization = $.CubismPhysicsNormalization;\n    Live2DCubismFramework.CubismPhysicsOutput = $.CubismPhysicsOutput;\n    Live2DCubismFramework.CubismPhysicsParameter = $.CubismPhysicsParameter;\n    Live2DCubismFramework.CubismPhysicsParticle = $.CubismPhysicsParticle;\n    Live2DCubismFramework.CubismPhysicsRig = $.CubismPhysicsRig;\n    Live2DCubismFramework.CubismPhysicsSource = $.CubismPhysicsSource;\n    Live2DCubismFramework.CubismPhysicsSubRig = $.CubismPhysicsSubRig;\n    Live2DCubismFramework.CubismPhysicsTargetType = $.CubismPhysicsTargetType;\n    Live2DCubismFramework.PhysicsJsonEffectiveForces = $.PhysicsJsonEffectiveForces;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { CubismVector2 } from '../math/cubismvector2';\nimport { CubismJson } from '../utils/cubismjson';\nconst Position = 'Position';\nconst X = 'X';\nconst Y = 'Y';\nconst Angle = 'Angle';\nconst Type = 'Type';\nconst Id = 'Id';\nconst Meta = 'Meta';\nconst EffectiveForces = 'EffectiveForces';\nconst TotalInputCount = 'TotalInputCount';\nconst TotalOutputCount = 'TotalOutputCount';\nconst PhysicsSettingCount = 'PhysicsSettingCount';\nconst Gravity = 'Gravity';\nconst Wind = 'Wind';\nconst VertexCount = 'VertexCount';\nconst Fps = 'Fps';\nconst PhysicsSettings = 'PhysicsSettings';\nconst Normalization = 'Normalization';\nconst Minimum = 'Minimum';\nconst Maximum = 'Maximum';\nconst Default = 'Default';\nconst Reflect = 'Reflect';\nconst Weight = 'Weight';\nconst Input = 'Input';\nconst Source = 'Source';\nconst Output = 'Output';\nconst Scale = 'Scale';\nconst VertexIndex = 'VertexIndex';\nconst Destination = 'Destination';\nconst Vertices = 'Vertices';\nconst Mobility = 'Mobility';\nconst Delay = 'Delay';\nconst Radius = 'Radius';\nconst Acceleration = 'Acceleration';\nexport class CubismPhysicsJson {\n    constructor(buffer, size) {\n        this._json = CubismJson.create(buffer, size);\n    }\n    release() {\n        CubismJson.delete(this._json);\n    }\n    getGravity() {\n        const ret = new CubismVector2(0, 0);\n        ret.x = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Gravity)\n            .getValueByString(X)\n            .toFloat();\n        ret.y = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Gravity)\n            .getValueByString(Y)\n            .toFloat();\n        return ret;\n    }\n    getWind() {\n        const ret = new CubismVector2(0, 0);\n        ret.x = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Wind)\n            .getValueByString(X)\n            .toFloat();\n        ret.y = this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(EffectiveForces)\n            .getValueByString(Wind)\n            .getValueByString(Y)\n            .toFloat();\n        return ret;\n    }\n    getFps() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(Fps)\n            .toFloat(0.0);\n    }\n    getSubRigCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(PhysicsSettingCount)\n            .toInt();\n    }\n    getTotalInputCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalInputCount)\n            .toInt();\n    }\n    getTotalOutputCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalOutputCount)\n            .toInt();\n    }\n    getVertexCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(VertexCount)\n            .toInt();\n    }\n    getNormalizationPositionMinimumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Position)\n            .getValueByString(Minimum)\n            .toFloat();\n    }\n    getNormalizationPositionMaximumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Position)\n            .getValueByString(Maximum)\n            .toFloat();\n    }\n    getNormalizationPositionDefaultValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Position)\n            .getValueByString(Default)\n            .toFloat();\n    }\n    getNormalizationAngleMinimumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Angle)\n            .getValueByString(Minimum)\n            .toFloat();\n    }\n    getNormalizationAngleMaximumValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Angle)\n            .getValueByString(Maximum)\n            .toFloat();\n    }\n    getNormalizationAngleDefaultValue(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Normalization)\n            .getValueByString(Angle)\n            .getValueByString(Default)\n            .toFloat();\n    }\n    getInputCount(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getVector()\n            .getSize();\n    }\n    getInputWeight(physicsSettingIndex, inputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Weight)\n            .toFloat();\n    }\n    getInputReflect(physicsSettingIndex, inputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Reflect)\n            .toBoolean();\n    }\n    getInputType(physicsSettingIndex, inputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Type)\n            .getRawString();\n    }\n    getInputSourceId(physicsSettingIndex, inputIndex) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Input)\n            .getValueByIndex(inputIndex)\n            .getValueByString(Source)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    getOutputCount(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getVector()\n            .getSize();\n    }\n    getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(VertexIndex)\n            .toInt();\n    }\n    getOutputAngleScale(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Scale)\n            .toFloat();\n    }\n    getOutputWeight(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Weight)\n            .toFloat();\n    }\n    getOutputDestinationId(physicsSettingIndex, outputIndex) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Destination)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    getOutputType(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Type)\n            .getRawString();\n    }\n    getOutputReflect(physicsSettingIndex, outputIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Output)\n            .getValueByIndex(outputIndex)\n            .getValueByString(Reflect)\n            .toBoolean();\n    }\n    getParticleCount(physicsSettingIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getVector()\n            .getSize();\n    }\n    getParticleMobility(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Mobility)\n            .toFloat();\n    }\n    getParticleDelay(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Delay)\n            .toFloat();\n    }\n    getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Acceleration)\n            .toFloat();\n    }\n    getParticleRadius(physicsSettingIndex, vertexIndex) {\n        return this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Radius)\n            .toFloat();\n    }\n    getParticlePosition(physicsSettingIndex, vertexIndex) {\n        const ret = new CubismVector2(0, 0);\n        ret.x = this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Position)\n            .getValueByString(X)\n            .toFloat();\n        ret.y = this._json\n            .getRoot()\n            .getValueByString(PhysicsSettings)\n            .getValueByIndex(physicsSettingIndex)\n            .getValueByString(Vertices)\n            .getValueByIndex(vertexIndex)\n            .getValueByString(Position)\n            .getValueByString(Y)\n            .toFloat();\n        return ret;\n    }\n}\nimport * as $ from './cubismphysicsjson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysicsJson = $.CubismPhysicsJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMath } from '../math/cubismmath';\nimport { CubismVector2 } from '../math/cubismvector2';\nimport { csmVector } from '../type/csmvector';\nimport { CubismPhysicsInput, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType } from './cubismphysicsinternal';\nimport { CubismPhysicsJson } from './cubismphysicsjson';\nconst PhysicsTypeTagX = 'X';\nconst PhysicsTypeTagY = 'Y';\nconst PhysicsTypeTagAngle = 'Angle';\nconst AirResistance = 5.0;\nconst MaximumWeight = 100.0;\nconst MovementThreshold = 0.001;\nconst MaxDeltaTime = 5.0;\nexport class CubismPhysics {\n    static create(buffer, size) {\n        const ret = new CubismPhysics();\n        ret.parse(buffer, size);\n        ret._physicsRig.gravity.y = 0;\n        return ret;\n    }\n    static delete(physics) {\n        if (physics != null) {\n            physics.release();\n            physics = null;\n        }\n    }\n    parse(physicsJson, size) {\n        this._physicsRig = new CubismPhysicsRig();\n        let json = new CubismPhysicsJson(physicsJson, size);\n        this._physicsRig.gravity = json.getGravity();\n        this._physicsRig.wind = json.getWind();\n        this._physicsRig.subRigCount = json.getSubRigCount();\n        this._physicsRig.fps = json.getFps();\n        this._physicsRig.settings.updateSize(this._physicsRig.subRigCount, CubismPhysicsSubRig, true);\n        this._physicsRig.inputs.updateSize(json.getTotalInputCount(), CubismPhysicsInput, true);\n        this._physicsRig.outputs.updateSize(json.getTotalOutputCount(), CubismPhysicsOutput, true);\n        this._physicsRig.particles.updateSize(json.getVertexCount(), CubismPhysicsParticle, true);\n        this._currentRigOutputs.clear();\n        this._previousRigOutputs.clear();\n        let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n        for (let i = 0; i < this._physicsRig.settings.getSize(); ++i) {\n            this._physicsRig.settings.at(i).normalizationPosition.minimum =\n                json.getNormalizationPositionMinimumValue(i);\n            this._physicsRig.settings.at(i).normalizationPosition.maximum =\n                json.getNormalizationPositionMaximumValue(i);\n            this._physicsRig.settings.at(i).normalizationPosition.defalut =\n                json.getNormalizationPositionDefaultValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.minimum =\n                json.getNormalizationAngleMinimumValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.maximum =\n                json.getNormalizationAngleMaximumValue(i);\n            this._physicsRig.settings.at(i).normalizationAngle.defalut =\n                json.getNormalizationAngleDefaultValue(i);\n            this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\n            this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\n            for (let j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j) {\n                this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\n                this._physicsRig.inputs.at(inputIndex + j).weight = json.getInputWeight(i, j);\n                this._physicsRig.inputs.at(inputIndex + j).reflect =\n                    json.getInputReflect(i, j);\n                if (json.getInputType(i, j) == PhysicsTypeTagX) {\n                    this._physicsRig.inputs.at(inputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_X;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue =\n                        getInputTranslationXFromNormalizedParameterValue;\n                }\n                else if (json.getInputType(i, j) == PhysicsTypeTagY) {\n                    this._physicsRig.inputs.at(inputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Y;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue =\n                        getInputTranslationYFromNormalizedParamterValue;\n                }\n                else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\n                    this._physicsRig.inputs.at(inputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Angle;\n                    this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue =\n                        getInputAngleFromNormalizedParameterValue;\n                }\n                this._physicsRig.inputs.at(inputIndex + j).source.targetType =\n                    CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n                this._physicsRig.inputs.at(inputIndex + j).source.id =\n                    json.getInputSourceId(i, j);\n            }\n            inputIndex += this._physicsRig.settings.at(i).inputCount;\n            this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\n            this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\n            const currentRigOutput = new PhysicsOutput();\n            currentRigOutput.outputs.resize(this._physicsRig.settings.at(i).outputCount);\n            const previousRigOutput = new PhysicsOutput();\n            previousRigOutput.outputs.resize(this._physicsRig.settings.at(i).outputCount);\n            for (let j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j) {\n                currentRigOutput.outputs.set(j, 0.0);\n                previousRigOutput.outputs.set(j, 0.0);\n                this._physicsRig.outputs.at(outputIndex + j).destinationParameterIndex =\n                    -1;\n                this._physicsRig.outputs.at(outputIndex + j).vertexIndex =\n                    json.getOutputVertexIndex(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).angleScale =\n                    json.getOutputAngleScale(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).weight =\n                    json.getOutputWeight(i, j);\n                this._physicsRig.outputs.at(outputIndex + j).destination.targetType =\n                    CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n                this._physicsRig.outputs.at(outputIndex + j).destination.id =\n                    json.getOutputDestinationId(i, j);\n                if (json.getOutputType(i, j) == PhysicsTypeTagX) {\n                    this._physicsRig.outputs.at(outputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_X;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue =\n                        getOutputTranslationX;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale =\n                        getOutputScaleTranslationX;\n                }\n                else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\n                    this._physicsRig.outputs.at(outputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Y;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue =\n                        getOutputTranslationY;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale =\n                        getOutputScaleTranslationY;\n                }\n                else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\n                    this._physicsRig.outputs.at(outputIndex + j).type =\n                        CubismPhysicsSource.CubismPhysicsSource_Angle;\n                    this._physicsRig.outputs.at(outputIndex + j).getValue =\n                        getOutputAngle;\n                    this._physicsRig.outputs.at(outputIndex + j).getScale =\n                        getOutputScaleAngle;\n                }\n                this._physicsRig.outputs.at(outputIndex + j).reflect =\n                    json.getOutputReflect(i, j);\n            }\n            this._currentRigOutputs.pushBack(currentRigOutput);\n            this._previousRigOutputs.pushBack(previousRigOutput);\n            outputIndex += this._physicsRig.settings.at(i).outputCount;\n            this._physicsRig.settings.at(i).particleCount = json.getParticleCount(i);\n            this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\n            for (let j = 0; j < this._physicsRig.settings.at(i).particleCount; ++j) {\n                this._physicsRig.particles.at(particleIndex + j).mobility =\n                    json.getParticleMobility(i, j);\n                this._physicsRig.particles.at(particleIndex + j).delay =\n                    json.getParticleDelay(i, j);\n                this._physicsRig.particles.at(particleIndex + j).acceleration =\n                    json.getParticleAcceleration(i, j);\n                this._physicsRig.particles.at(particleIndex + j).radius =\n                    json.getParticleRadius(i, j);\n                this._physicsRig.particles.at(particleIndex + j).position =\n                    json.getParticlePosition(i, j);\n            }\n            particleIndex += this._physicsRig.settings.at(i).particleCount;\n        }\n        this.initialize();\n        json.release();\n        json = void 0;\n        json = null;\n    }\n    stabilization(model) {\n        var _a, _b, _c, _d;\n        let totalAngle;\n        let weight;\n        let radAngle;\n        let outputValue;\n        const totalTranslation = new CubismVector2();\n        let currentSetting;\n        let currentInputs;\n        let currentOutputs;\n        let currentParticles;\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        const parameterDefaultValues = model.getModel().parameters.defaultValues;\n        if (((_b = (_a = this._parameterCaches) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) < model.getParameterCount()) {\n            this._parameterCaches = new Float32Array(model.getParameterCount());\n        }\n        if (((_d = (_c = this._parameterInputCaches) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) < model.getParameterCount()) {\n            this._parameterInputCaches = new Float32Array(model.getParameterCount());\n        }\n        for (let j = 0; j < model.getParameterCount(); ++j) {\n            this._parameterCaches[j] = parameterValues[j];\n            this._parameterInputCaches[j] = parameterValues[j];\n        }\n        for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n            totalAngle = { angle: 0.0 };\n            totalTranslation.x = 0.0;\n            totalTranslation.y = 0.0;\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            currentInputs = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\n            currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n            currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n            for (let i = 0; i < currentSetting.inputCount; ++i) {\n                weight = currentInputs[i].weight / MaximumWeight;\n                if (currentInputs[i].sourceParameterIndex == -1) {\n                    currentInputs[i].sourceParameterIndex = model.getParameterIndex(currentInputs[i].source.id);\n                }\n                currentInputs[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValues[currentInputs[i].sourceParameterIndex], parameterMinimumValues[currentInputs[i].sourceParameterIndex], parameterMaximumValues[currentInputs[i].sourceParameterIndex], parameterDefaultValues[currentInputs[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInputs[i].reflect, weight);\n                this._parameterCaches[currentInputs[i].sourceParameterIndex] =\n                    parameterValues[currentInputs[i].sourceParameterIndex];\n            }\n            radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n            totalTranslation.x =\n                totalTranslation.x * CubismMath.cos(radAngle) -\n                    totalTranslation.y * CubismMath.sin(radAngle);\n            totalTranslation.y =\n                totalTranslation.x * CubismMath.sin(radAngle) +\n                    totalTranslation.y * CubismMath.cos(radAngle);\n            updateParticlesForStabilization(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum);\n            for (let i = 0; i < currentSetting.outputCount; ++i) {\n                const particleIndex = currentOutputs[i].vertexIndex;\n                if (currentOutputs[i].destinationParameterIndex == -1) {\n                    currentOutputs[i].destinationParameterIndex = model.getParameterIndex(currentOutputs[i].destination.id);\n                }\n                if (particleIndex < 1 ||\n                    particleIndex >= currentSetting.particleCount) {\n                    continue;\n                }\n                let translation = new CubismVector2();\n                translation = currentParticles[particleIndex].position.substract(currentParticles[particleIndex - 1].position);\n                outputValue = currentOutputs[i].getValue(translation, currentParticles, particleIndex, currentOutputs[i].reflect, this._options.gravity);\n                this._currentRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                this._previousRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                const outParameterCaches = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype\n                    ? JSON.parse(JSON.stringify(parameterValues.subarray(destinationParameterIndex)))\n                    : parameterValues.slice(destinationParameterIndex);\n                updateOutputParameterValue(outParameterCaches, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], outputValue, currentOutputs[i]);\n                for (let offset = destinationParameterIndex, outParamIndex = 0; offset < this._parameterCaches.length; offset++, outParamIndex++) {\n                    parameterValues[offset] = this._parameterCaches[offset] =\n                        outParameterCaches[outParamIndex];\n                }\n            }\n        }\n    }\n    evaluate(model, deltaTimeSeconds) {\n        var _a, _b, _c, _d;\n        let totalAngle;\n        let weight;\n        let radAngle;\n        let outputValue;\n        const totalTranslation = new CubismVector2();\n        let currentSetting;\n        let currentInputs;\n        let currentOutputs;\n        let currentParticles;\n        if (0.0 >= deltaTimeSeconds) {\n            return;\n        }\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        const parameterDefaultValues = model.getModel().parameters.defaultValues;\n        let physicsDeltaTime;\n        this._currentRemainTime += deltaTimeSeconds;\n        if (this._currentRemainTime > MaxDeltaTime) {\n            this._currentRemainTime = 0.0;\n        }\n        if (((_b = (_a = this._parameterCaches) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) < model.getParameterCount()) {\n            this._parameterCaches = new Float32Array(model.getParameterCount());\n        }\n        if (((_d = (_c = this._parameterInputCaches) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) < model.getParameterCount()) {\n            this._parameterInputCaches = new Float32Array(model.getParameterCount());\n            for (let j = 0; j < model.getParameterCount(); ++j) {\n                this._parameterInputCaches[j] = parameterValues[j];\n            }\n        }\n        if (this._physicsRig.fps > 0.0) {\n            physicsDeltaTime = 1.0 / this._physicsRig.fps;\n        }\n        else {\n            physicsDeltaTime = deltaTimeSeconds;\n        }\n        while (this._currentRemainTime >= physicsDeltaTime) {\n            for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n                currentSetting = this._physicsRig.settings.at(settingIndex);\n                currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n                for (let i = 0; i < currentSetting.outputCount; ++i) {\n                    this._previousRigOutputs\n                        .at(settingIndex)\n                        .outputs.set(i, this._currentRigOutputs.at(settingIndex).outputs.at(i));\n                }\n            }\n            const inputWeight = physicsDeltaTime / this._currentRemainTime;\n            for (let j = 0; j < model.getParameterCount(); ++j) {\n                this._parameterCaches[j] =\n                    this._parameterInputCaches[j] * (1.0 - inputWeight) +\n                        parameterValues[j] * inputWeight;\n                this._parameterInputCaches[j] = this._parameterCaches[j];\n            }\n            for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n                totalAngle = { angle: 0.0 };\n                totalTranslation.x = 0.0;\n                totalTranslation.y = 0.0;\n                currentSetting = this._physicsRig.settings.at(settingIndex);\n                currentInputs = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\n                currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n                currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n                for (let i = 0; i < currentSetting.inputCount; ++i) {\n                    weight = currentInputs[i].weight / MaximumWeight;\n                    if (currentInputs[i].sourceParameterIndex == -1) {\n                        currentInputs[i].sourceParameterIndex = model.getParameterIndex(currentInputs[i].source.id);\n                    }\n                    currentInputs[i].getNormalizedParameterValue(totalTranslation, totalAngle, this._parameterCaches[currentInputs[i].sourceParameterIndex], parameterMinimumValues[currentInputs[i].sourceParameterIndex], parameterMaximumValues[currentInputs[i].sourceParameterIndex], parameterDefaultValues[currentInputs[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInputs[i].reflect, weight);\n                }\n                radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n                totalTranslation.x =\n                    totalTranslation.x * CubismMath.cos(radAngle) -\n                        totalTranslation.y * CubismMath.sin(radAngle);\n                totalTranslation.y =\n                    totalTranslation.x * CubismMath.sin(radAngle) +\n                        totalTranslation.y * CubismMath.cos(radAngle);\n                updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, physicsDeltaTime, AirResistance);\n                for (let i = 0; i < currentSetting.outputCount; ++i) {\n                    const particleIndex = currentOutputs[i].vertexIndex;\n                    if (currentOutputs[i].destinationParameterIndex == -1) {\n                        currentOutputs[i].destinationParameterIndex =\n                            model.getParameterIndex(currentOutputs[i].destination.id);\n                    }\n                    if (particleIndex < 1 ||\n                        particleIndex >= currentSetting.particleCount) {\n                        continue;\n                    }\n                    const translation = new CubismVector2();\n                    translation.x =\n                        currentParticles[particleIndex].position.x -\n                            currentParticles[particleIndex - 1].position.x;\n                    translation.y =\n                        currentParticles[particleIndex].position.y -\n                            currentParticles[particleIndex - 1].position.y;\n                    outputValue = currentOutputs[i].getValue(translation, currentParticles, particleIndex, currentOutputs[i].reflect, this._options.gravity);\n                    this._currentRigOutputs.at(settingIndex).outputs.set(i, outputValue);\n                    const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                    const outParameterCaches = !Float32Array.prototype.slice &&\n                        'subarray' in Float32Array.prototype\n                        ? JSON.parse(JSON.stringify(this._parameterCaches.subarray(destinationParameterIndex)))\n                        : this._parameterCaches.slice(destinationParameterIndex);\n                    updateOutputParameterValue(outParameterCaches, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], outputValue, currentOutputs[i]);\n                    for (let offset = destinationParameterIndex, outParamIndex = 0; offset < this._parameterCaches.length; offset++, outParamIndex++) {\n                        this._parameterCaches[offset] = outParameterCaches[outParamIndex];\n                    }\n                }\n            }\n            this._currentRemainTime -= physicsDeltaTime;\n        }\n        const alpha = this._currentRemainTime / physicsDeltaTime;\n        this.interpolate(model, alpha);\n    }\n    interpolate(model, weight) {\n        let currentOutputs;\n        let currentSetting;\n        const parameterValues = model.getModel().parameters.values;\n        const parameterMaximumValues = model.getModel().parameters.maximumValues;\n        const parameterMinimumValues = model.getModel().parameters.minimumValues;\n        for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            currentOutputs = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\n            for (let i = 0; i < currentSetting.outputCount; ++i) {\n                if (currentOutputs[i].destinationParameterIndex == -1) {\n                    continue;\n                }\n                const destinationParameterIndex = currentOutputs[i].destinationParameterIndex;\n                const outParameterValues = !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype\n                    ? JSON.parse(JSON.stringify(parameterValues.subarray(destinationParameterIndex)))\n                    : parameterValues.slice(destinationParameterIndex);\n                updateOutputParameterValue(outParameterValues, parameterMinimumValues[destinationParameterIndex], parameterMaximumValues[destinationParameterIndex], this._previousRigOutputs.at(settingIndex).outputs.at(i) *\n                    (1 - weight) +\n                    this._currentRigOutputs.at(settingIndex).outputs.at(i) * weight, currentOutputs[i]);\n                for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValues.length; offset++, outParamIndex++) {\n                    parameterValues[offset] = outParameterValues[outParamIndex];\n                }\n            }\n        }\n    }\n    setOptions(options) {\n        this._options = options;\n    }\n    getOption() {\n        return this._options;\n    }\n    constructor() {\n        this._physicsRig = null;\n        this._options = new Options();\n        this._options.gravity.y = -1.0;\n        this._options.gravity.x = 0.0;\n        this._options.wind.x = 0.0;\n        this._options.wind.y = 0.0;\n        this._currentRigOutputs = new csmVector();\n        this._previousRigOutputs = new csmVector();\n        this._currentRemainTime = 0.0;\n        this._parameterCaches = null;\n        this._parameterInputCaches = null;\n    }\n    release() {\n        this._physicsRig = void 0;\n        this._physicsRig = null;\n    }\n    initialize() {\n        let strand;\n        let currentSetting;\n        let radius;\n        for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n            currentSetting = this._physicsRig.settings.at(settingIndex);\n            strand = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\n            strand[0].initialPosition = new CubismVector2(0.0, 0.0);\n            strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n            strand[0].lastGravity = new CubismVector2(0.0, -1.0);\n            strand[0].lastGravity.y *= -1.0;\n            strand[0].velocity = new CubismVector2(0.0, 0.0);\n            strand[0].force = new CubismVector2(0.0, 0.0);\n            for (let i = 1; i < currentSetting.particleCount; ++i) {\n                radius = new CubismVector2(0.0, 0.0);\n                radius.y = strand[i].radius;\n                strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n                strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n                strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n                strand[i].lastGravity = new CubismVector2(0.0, -1.0);\n                strand[i].lastGravity.y *= -1.0;\n                strand[i].velocity = new CubismVector2(0.0, 0.0);\n                strand[i].force = new CubismVector2(0.0, 0.0);\n            }\n        }\n    }\n}\nexport class Options {\n    constructor() {\n        this.gravity = new CubismVector2(0, 0);\n        this.wind = new CubismVector2(0, 0);\n    }\n}\nexport class PhysicsOutput {\n    constructor() {\n        this.outputs = new csmVector(0);\n    }\n}\nfunction sign(value) {\n    let ret = 0;\n    if (value > 0.0) {\n        ret = 1;\n    }\n    else if (value < 0.0) {\n        ret = -1;\n    }\n    return ret;\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x +=\n        normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y +=\n        normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle +=\n        normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n        parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    }\n    else {\n        parentGravity = parentGravity.multiplyByScaler(-1.0);\n    }\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n        outputValue *= -1.0;\n    }\n    return outputValue;\n}\nfunction getRangeValue(min, max) {\n    const maxValue = CubismMath.max(min, max);\n    const minValue = CubismMath.min(min, max);\n    return CubismMath.abs(maxValue - minValue);\n}\nfunction getDefaultValue(min, max) {\n    const minValue = CubismMath.min(min, max);\n    return minValue + getRangeValue(min, max) / 2.0;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(translationScale.x));\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(translationScale.y));\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n    return JSON.parse(JSON.stringify(angleScale));\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let delay;\n    let radian;\n    let direction = new CubismVector2(0.0, 0.0);\n    let velocity = new CubismVector2(0.0, 0.0);\n    let force = new CubismVector2(0.0, 0.0);\n    let newDirection = new CubismVector2(0.0, 0.0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    const totalRadian = CubismMath.degreesToRadian(totalAngle);\n    const currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n        strand[i].force = currentGravity\n            .multiplyByScaler(strand[i].acceleration)\n            .add(windDirection);\n        strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n        delay = strand[i].delay * deltaTimeSeconds * 30.0;\n        direction = strand[i].position.substract(strand[i - 1].position);\n        radian =\n            CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\n                airResistance;\n        direction.x =\n            CubismMath.cos(radian) * direction.x -\n                direction.y * CubismMath.sin(radian);\n        direction.y =\n            CubismMath.sin(radian) * direction.x +\n                direction.y * CubismMath.cos(radian);\n        strand[i].position = strand[i - 1].position.add(direction);\n        velocity = strand[i].velocity.multiplyByScaler(delay);\n        force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n        strand[i].position = strand[i].position.add(velocity).add(force);\n        newDirection = strand[i].position.substract(strand[i - 1].position);\n        newDirection.normalize();\n        strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n        if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n            strand[i].position.x = 0.0;\n        }\n        if (delay != 0.0) {\n            strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n            strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n            strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n        }\n        strand[i].force = new CubismVector2(0.0, 0.0);\n        strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n}\nfunction updateParticlesForStabilization(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue) {\n    let force = new CubismVector2(0.0, 0.0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    const totalRadian = CubismMath.degreesToRadian(totalAngle);\n    const currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n        strand[i].force = currentGravity\n            .multiplyByScaler(strand[i].acceleration)\n            .add(windDirection);\n        strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n        strand[i].velocity = new CubismVector2(0.0, 0.0);\n        force = strand[i].force;\n        force.normalize();\n        force = force.multiplyByScaler(strand[i].radius);\n        strand[i].position = strand[i - 1].position.add(force);\n        if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n            strand[i].position.x = 0.0;\n        }\n        strand[i].force = new CubismVector2(0.0, 0.0);\n        strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let value;\n    const outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n        if (value < output.valueBelowMinimum) {\n            output.valueBelowMinimum = value;\n        }\n        value = parameterValueMinimum;\n    }\n    else if (value > parameterValueMaximum) {\n        if (value > output.valueExceededMaximum) {\n            output.valueExceededMaximum = value;\n        }\n        value = parameterValueMaximum;\n    }\n    const weight = output.weight / MaximumWeight;\n    if (weight >= 1.0) {\n        parameterValue[0] = value;\n    }\n    else {\n        value = parameterValue[0] * (1.0 - weight) + value * weight;\n        parameterValue[0] = value;\n    }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0.0;\n    const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n        value = maxValue;\n    }\n    const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n        value = minValue;\n    }\n    const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch (sign(paramValue)) {\n        case 1: {\n            const nLength = maxNormValue - middleNormValue;\n            const pLength = maxValue - middleValue;\n            if (pLength != 0.0) {\n                result = paramValue * (nLength / pLength);\n                result += middleNormValue;\n            }\n            break;\n        }\n        case -1: {\n            const nLength = minNormValue - middleNormValue;\n            const pLength = minValue - middleValue;\n            if (pLength != 0.0) {\n                result = paramValue * (nLength / pLength);\n                result += middleNormValue;\n            }\n            break;\n        }\n        case 0: {\n            result = middleNormValue;\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n    return isInverted ? result : result * -1.0;\n}\nimport * as $ from './cubismphysics';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismPhysics = $.CubismPhysics;\n    Live2DCubismFramework.Options = $.Options;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { Constant } from '../live2dcubismframework';\nimport { csmVector } from '../type/csmvector';\nimport { csmRect } from '../type/csmrectf';\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\nimport { CubismTextureColor } from './cubismrenderer';\nimport { CubismLogError, CubismLogWarning } from '../utils/cubismdebug';\nconst ColorChannelCount = 4;\nconst ClippingMaskMaxCountOnDefault = 36;\nconst ClippingMaskMaxCountOnMultiRenderTexture = 32;\nexport class CubismClippingManager {\n    constructor(clippingContextFactory) {\n        this._renderTextureCount = 0;\n        this._clippingMaskBufferSize = 256;\n        this._clippingContextListForMask = new csmVector();\n        this._clippingContextListForDraw = new csmVector();\n        this._channelColors = new csmVector();\n        this._tmpBoundsOnModel = new csmRect();\n        this._tmpMatrix = new CubismMatrix44();\n        this._tmpMatrixForMask = new CubismMatrix44();\n        this._tmpMatrixForDraw = new CubismMatrix44();\n        this._clippingContexttConstructor = clippingContextFactory;\n        let tmp = new CubismTextureColor();\n        tmp.r = 1.0;\n        tmp.g = 0.0;\n        tmp.b = 0.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 1.0;\n        tmp.b = 0.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 0.0;\n        tmp.b = 1.0;\n        tmp.a = 0.0;\n        this._channelColors.pushBack(tmp);\n        tmp = new CubismTextureColor();\n        tmp.r = 0.0;\n        tmp.g = 0.0;\n        tmp.b = 0.0;\n        tmp.a = 1.0;\n        this._channelColors.pushBack(tmp);\n    }\n    release() {\n        for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\n            if (this._clippingContextListForMask.at(i)) {\n                this._clippingContextListForMask.at(i).release();\n                this._clippingContextListForMask.set(i, void 0);\n            }\n            this._clippingContextListForMask.set(i, null);\n        }\n        this._clippingContextListForMask = null;\n        for (let i = 0; i < this._clippingContextListForDraw.getSize(); i++) {\n            this._clippingContextListForDraw.set(i, null);\n        }\n        this._clippingContextListForDraw = null;\n        for (let i = 0; i < this._channelColors.getSize(); i++) {\n            this._channelColors.set(i, null);\n        }\n        this._channelColors = null;\n        if (this._clearedFrameBufferFlags != null) {\n            this._clearedFrameBufferFlags.clear();\n        }\n        this._clearedFrameBufferFlags = null;\n    }\n    initialize(model, renderTextureCount) {\n        if (renderTextureCount % 1 != 0) {\n            CubismLogWarning('The number of render textures must be specified as an integer. The decimal point is rounded down and corrected to an integer.');\n            renderTextureCount = ~~renderTextureCount;\n        }\n        if (renderTextureCount < 1) {\n            CubismLogWarning('The number of render textures must be an integer greater than or equal to 1. Set the number of render textures to 1.');\n        }\n        this._renderTextureCount = renderTextureCount < 1 ? 1 : renderTextureCount;\n        this._clearedFrameBufferFlags = new csmVector(this._renderTextureCount);\n        for (let i = 0; i < model.getDrawableCount(); i++) {\n            if (model.getDrawableMaskCounts()[i] <= 0) {\n                this._clippingContextListForDraw.pushBack(null);\n                continue;\n            }\n            let clippingContext = this.findSameClip(model.getDrawableMasks()[i], model.getDrawableMaskCounts()[i]);\n            if (clippingContext == null) {\n                clippingContext = new this._clippingContexttConstructor(this, model.getDrawableMasks()[i], model.getDrawableMaskCounts()[i]);\n                this._clippingContextListForMask.pushBack(clippingContext);\n            }\n            clippingContext.addClippedDrawable(i);\n            this._clippingContextListForDraw.pushBack(clippingContext);\n        }\n    }\n    findSameClip(drawableMasks, drawableMaskCounts) {\n        for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\n            const clippingContext = this._clippingContextListForMask.at(i);\n            const count = clippingContext._clippingIdCount;\n            if (count != drawableMaskCounts) {\n                continue;\n            }\n            let sameCount = 0;\n            for (let j = 0; j < count; j++) {\n                const clipId = clippingContext._clippingIdList[j];\n                for (let k = 0; k < count; k++) {\n                    if (drawableMasks[k] == clipId) {\n                        sameCount++;\n                        break;\n                    }\n                }\n            }\n            if (sameCount == count) {\n                return clippingContext;\n            }\n        }\n        return null;\n    }\n    setupMatrixForHighPrecision(model, isRightHanded) {\n        let usingClipCount = 0;\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n            const cc = this._clippingContextListForMask.at(clipIndex);\n            this.calcClippedDrawTotalBounds(model, cc);\n            if (cc._isUsing) {\n                usingClipCount++;\n            }\n        }\n        if (usingClipCount > 0) {\n            this.setupLayoutBounds(0);\n            if (this._clearedFrameBufferFlags.getSize() != this._renderTextureCount) {\n                this._clearedFrameBufferFlags.clear();\n                for (let i = 0; i < this._renderTextureCount; i++) {\n                    this._clearedFrameBufferFlags.pushBack(false);\n                }\n            }\n            else {\n                for (let i = 0; i < this._renderTextureCount; i++) {\n                    this._clearedFrameBufferFlags.set(i, false);\n                }\n            }\n            for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n                const clipContext = this._clippingContextListForMask.at(clipIndex);\n                const allClippedDrawRect = clipContext._allClippedDrawRect;\n                const layoutBoundsOnTex01 = clipContext._layoutBounds;\n                const margin = 0.05;\n                let scaleX = 0.0;\n                let scaleY = 0.0;\n                const ppu = model.getPixelsPerUnit();\n                const maskPixelSize = clipContext\n                    .getClippingManager()\n                    .getClippingMaskBufferSize();\n                const physicalMaskWidth = layoutBoundsOnTex01.width * maskPixelSize;\n                const physicalMaskHeight = layoutBoundsOnTex01.height * maskPixelSize;\n                this._tmpBoundsOnModel.setRect(allClippedDrawRect);\n                if (this._tmpBoundsOnModel.width * ppu > physicalMaskWidth) {\n                    this._tmpBoundsOnModel.expand(allClippedDrawRect.width * margin, 0.0);\n                    scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n                }\n                else {\n                    scaleX = ppu / physicalMaskWidth;\n                }\n                if (this._tmpBoundsOnModel.height * ppu > physicalMaskHeight) {\n                    this._tmpBoundsOnModel.expand(0.0, allClippedDrawRect.height * margin);\n                    scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n                }\n                else {\n                    scaleY = ppu / physicalMaskHeight;\n                }\n                this.createMatrixForMask(isRightHanded, layoutBoundsOnTex01, scaleX, scaleY);\n                clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n                clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n            }\n        }\n    }\n    createMatrixForMask(isRightHanded, layoutBoundsOnTex01, scaleX, scaleY) {\n        this._tmpMatrix.loadIdentity();\n        {\n            this._tmpMatrix.translateRelative(-1.0, -1.0);\n            this._tmpMatrix.scaleRelative(2.0, 2.0);\n        }\n        {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n        }\n        this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        this._tmpMatrix.loadIdentity();\n        {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y * (isRightHanded ? -1.0 : 1.0));\n            this._tmpMatrix.scaleRelative(scaleX, scaleY * (isRightHanded ? -1.0 : 1.0));\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n        }\n        this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n    }\n    setupLayoutBounds(usingClipCount) {\n        const useClippingMaskMaxCount = this._renderTextureCount <= 1\n            ? ClippingMaskMaxCountOnDefault\n            : ClippingMaskMaxCountOnMultiRenderTexture * this._renderTextureCount;\n        if (usingClipCount <= 0 || usingClipCount > useClippingMaskMaxCount) {\n            if (usingClipCount > useClippingMaskMaxCount) {\n                CubismLogError('not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}', usingClipCount - useClippingMaskMaxCount, this._renderTextureCount, usingClipCount);\n            }\n            for (let index = 0; index < this._clippingContextListForMask.getSize(); index++) {\n                const clipContext = this._clippingContextListForMask.at(index);\n                clipContext._layoutChannelIndex = 0;\n                clipContext._layoutBounds.x = 0.0;\n                clipContext._layoutBounds.y = 0.0;\n                clipContext._layoutBounds.width = 1.0;\n                clipContext._layoutBounds.height = 1.0;\n                clipContext._bufferIndex = 0;\n            }\n            return;\n        }\n        const layoutCountMaxValue = this._renderTextureCount <= 1 ? 9 : 8;\n        let countPerSheetDiv = usingClipCount / this._renderTextureCount;\n        const reduceLayoutTextureCount = usingClipCount % this._renderTextureCount;\n        countPerSheetDiv = Math.ceil(countPerSheetDiv);\n        let divCount = countPerSheetDiv / ColorChannelCount;\n        const modCount = countPerSheetDiv % ColorChannelCount;\n        divCount = ~~divCount;\n        let curClipIndex = 0;\n        for (let renderTextureIndex = 0; renderTextureIndex < this._renderTextureCount; renderTextureIndex++) {\n            for (let channelIndex = 0; channelIndex < ColorChannelCount; channelIndex++) {\n                let layoutCount = divCount + (channelIndex < modCount ? 1 : 0);\n                const checkChannelIndex = modCount + (divCount < 1 ? -1 : 0);\n                if (channelIndex == checkChannelIndex && reduceLayoutTextureCount > 0) {\n                    layoutCount -= !(renderTextureIndex < reduceLayoutTextureCount)\n                        ? 1\n                        : 0;\n                }\n                if (layoutCount == 0) {\n                }\n                else if (layoutCount == 1) {\n                    const clipContext = this._clippingContextListForMask.at(curClipIndex++);\n                    clipContext._layoutChannelIndex = channelIndex;\n                    clipContext._layoutBounds.x = 0.0;\n                    clipContext._layoutBounds.y = 0.0;\n                    clipContext._layoutBounds.width = 1.0;\n                    clipContext._layoutBounds.height = 1.0;\n                    clipContext._bufferIndex = renderTextureIndex;\n                }\n                else if (layoutCount == 2) {\n                    for (let i = 0; i < layoutCount; i++) {\n                        let xpos = i % 2;\n                        xpos = ~~xpos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos * 0.5;\n                        cc._layoutBounds.y = 0.0;\n                        cc._layoutBounds.width = 0.5;\n                        cc._layoutBounds.height = 1.0;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                }\n                else if (layoutCount <= 4) {\n                    for (let i = 0; i < layoutCount; i++) {\n                        let xpos = i % 2;\n                        let ypos = i / 2;\n                        xpos = ~~xpos;\n                        ypos = ~~ypos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos * 0.5;\n                        cc._layoutBounds.y = ypos * 0.5;\n                        cc._layoutBounds.width = 0.5;\n                        cc._layoutBounds.height = 0.5;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                }\n                else if (layoutCount <= layoutCountMaxValue) {\n                    for (let i = 0; i < layoutCount; i++) {\n                        let xpos = i % 3;\n                        let ypos = i / 3;\n                        xpos = ~~xpos;\n                        ypos = ~~ypos;\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = channelIndex;\n                        cc._layoutBounds.x = xpos / 3.0;\n                        cc._layoutBounds.y = ypos / 3.0;\n                        cc._layoutBounds.width = 1.0 / 3.0;\n                        cc._layoutBounds.height = 1.0 / 3.0;\n                        cc._bufferIndex = renderTextureIndex;\n                    }\n                }\n                else {\n                    CubismLogError('not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}', usingClipCount - useClippingMaskMaxCount, this._renderTextureCount, usingClipCount);\n                    for (let index = 0; index < layoutCount; index++) {\n                        const cc = this._clippingContextListForMask.at(curClipIndex++);\n                        cc._layoutChannelIndex = 0;\n                        cc._layoutBounds.x = 0.0;\n                        cc._layoutBounds.y = 0.0;\n                        cc._layoutBounds.width = 1.0;\n                        cc._layoutBounds.height = 1.0;\n                        cc._bufferIndex = 0;\n                    }\n                }\n            }\n        }\n    }\n    calcClippedDrawTotalBounds(model, clippingContext) {\n        let clippedDrawTotalMinX = Number.MAX_VALUE;\n        let clippedDrawTotalMinY = Number.MAX_VALUE;\n        let clippedDrawTotalMaxX = Number.MIN_VALUE;\n        let clippedDrawTotalMaxY = Number.MIN_VALUE;\n        const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n        for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n            const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n            const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n            const drawableVertexes = model.getDrawableVertices(drawableIndex);\n            let minX = Number.MAX_VALUE;\n            let minY = Number.MAX_VALUE;\n            let maxX = -Number.MAX_VALUE;\n            let maxY = -Number.MAX_VALUE;\n            const loop = drawableVertexCount * Constant.vertexStep;\n            for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n                const x = drawableVertexes[pi];\n                const y = drawableVertexes[pi + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n            if (minX == Number.MAX_VALUE) {\n                continue;\n            }\n            if (minX < clippedDrawTotalMinX) {\n                clippedDrawTotalMinX = minX;\n            }\n            if (minY < clippedDrawTotalMinY) {\n                clippedDrawTotalMinY = minY;\n            }\n            if (maxX > clippedDrawTotalMaxX) {\n                clippedDrawTotalMaxX = maxX;\n            }\n            if (maxY > clippedDrawTotalMaxY) {\n                clippedDrawTotalMaxY = maxY;\n            }\n            if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n                clippingContext._allClippedDrawRect.x = 0.0;\n                clippingContext._allClippedDrawRect.y = 0.0;\n                clippingContext._allClippedDrawRect.width = 0.0;\n                clippingContext._allClippedDrawRect.height = 0.0;\n                clippingContext._isUsing = false;\n            }\n            else {\n                clippingContext._isUsing = true;\n                const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n                const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n                clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n                clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n                clippingContext._allClippedDrawRect.width = w;\n                clippingContext._allClippedDrawRect.height = h;\n            }\n        }\n    }\n    getClippingContextListForDraw() {\n        return this._clippingContextListForDraw;\n    }\n    getClippingMaskBufferSize() {\n        return this._clippingMaskBufferSize;\n    }\n    getRenderTextureCount() {\n        return this._renderTextureCount;\n    }\n    getChannelFlagAsColor(channelNo) {\n        return this._channelColors.at(channelNo);\n    }\n    setClippingMaskBufferSize(size) {\n        this._clippingMaskBufferSize = size;\n    }\n}\n","import { csmMap } from '../type/csmmap';\nimport { csmVector } from '../type/csmvector';\nimport { CubismLogError } from '../utils/cubismdebug';\nimport { CubismBlendMode } from './cubismrenderer';\nlet s_instance;\nconst ShaderCount = 10;\nexport class CubismShader_WebGL {\n    constructor() {\n        this._shaderSets = new csmVector();\n    }\n    release() {\n        this.releaseShaderProgram();\n    }\n    setupShaderProgramForDraw(renderer, model, index) {\n        if (!renderer.isPremultipliedAlpha()) {\n            CubismLogError('NoPremultipliedAlpha is not allowed');\n        }\n        if (this._shaderSets.getSize() == 0) {\n            this.generateShaders();\n        }\n        let srcColor;\n        let dstColor;\n        let srcAlpha;\n        let dstAlpha;\n        const masked = renderer.getClippingContextBufferForDraw() != null;\n        const invertedMask = model.getDrawableInvertedMaskBit(index);\n        const offset = masked ? (invertedMask ? 2 : 1) : 0;\n        let shaderSet;\n        switch (model.getDrawableBlendMode(index)) {\n            case CubismBlendMode.CubismBlendMode_Normal:\n            default:\n                shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset);\n                srcColor = this.gl.ONE;\n                dstColor = this.gl.ONE_MINUS_SRC_ALPHA;\n                srcAlpha = this.gl.ONE;\n                dstAlpha = this.gl.ONE_MINUS_SRC_ALPHA;\n                break;\n            case CubismBlendMode.CubismBlendMode_Additive:\n                shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_AddPremultipliedAlpha + offset);\n                srcColor = this.gl.ONE;\n                dstColor = this.gl.ONE;\n                srcAlpha = this.gl.ZERO;\n                dstAlpha = this.gl.ONE;\n                break;\n            case CubismBlendMode.CubismBlendMode_Multiplicative:\n                shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_MultPremultipliedAlpha + offset);\n                srcColor = this.gl.DST_COLOR;\n                dstColor = this.gl.ONE_MINUS_SRC_ALPHA;\n                srcAlpha = this.gl.ZERO;\n                dstAlpha = this.gl.ONE;\n                break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (renderer._bufferData.vertex == null) {\n            renderer._bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.vertex);\n        const vertexArray = model.getDrawableVertices(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const uvArray = model.getDrawableVertexUvs(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (masked) {\n            this.gl.activeTexture(this.gl.TEXTURE1);\n            const tex = renderer\n                .getClippingContextBufferForDraw()\n                .getClippingManager()\n                .getColorBuffer()\n                .at(renderer.getClippingContextBufferForDraw()._bufferIndex);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n            this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n            this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray());\n            const channelIndex = renderer.getClippingContextBufferForDraw()._layoutChannelIndex;\n            const colorChannel = renderer\n                .getClippingContextBufferForDraw()\n                .getClippingManager()\n                .getChannelFlagAsColor(channelIndex);\n            this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.r, colorChannel.g, colorChannel.b, colorChannel.a);\n        }\n        const textureNo = model.getDrawableTextureIndex(index);\n        const textureId = renderer\n            .getBindedTextures()\n            .getValue(textureNo);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        const matrix4x4 = renderer.getMvpMatrix();\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        const baseColor = renderer.getModelColorWithOpacity(model.getDrawableOpacity(index));\n        const multiplyColor = model.getMultiplyColor(index);\n        const screenColor = model.getScreenColor(index);\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.r, baseColor.g, baseColor.b, baseColor.a);\n        this.gl.uniform4f(shaderSet.uniformMultiplyColorLocation, multiplyColor.r, multiplyColor.g, multiplyColor.b, multiplyColor.a);\n        this.gl.uniform4f(shaderSet.uniformScreenColorLocation, screenColor.r, screenColor.g, screenColor.b, screenColor.a);\n        if (renderer._bufferData.index == null) {\n            renderer._bufferData.index = this.gl.createBuffer();\n        }\n        const indexArray = model.getDrawableVertexIndices(index);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, renderer._bufferData.index);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.blendFuncSeparate(srcColor, dstColor, srcAlpha, dstAlpha);\n    }\n    setupShaderProgramForMask(renderer, model, index) {\n        if (!renderer.isPremultipliedAlpha()) {\n            CubismLogError('NoPremultipliedAlpha is not allowed');\n        }\n        if (this._shaderSets.getSize() == 0) {\n            this.generateShaders();\n        }\n        const shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_SetupMask);\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (renderer._bufferData.vertex == null) {\n            renderer._bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.vertex);\n        const vertexArray = model.getDrawableVertices(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const textureNo = model.getDrawableTextureIndex(index);\n        const textureId = renderer\n            .getBindedTextures()\n            .getValue(textureNo);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        if (renderer._bufferData.uv == null) {\n            renderer._bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, renderer._bufferData.uv);\n        const uvArray = model.getDrawableVertexUvs(index);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        const context = renderer.getClippingContextBufferForMask();\n        const channelIndex = renderer.getClippingContextBufferForMask()._layoutChannelIndex;\n        const colorChannel = renderer\n            .getClippingContextBufferForMask()\n            .getClippingManager()\n            .getChannelFlagAsColor(channelIndex);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.r, colorChannel.g, colorChannel.b, colorChannel.a);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForMask()._matrixForMask.getArray());\n        const rect = renderer.getClippingContextBufferForMask()._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2.0 - 1.0, rect.y * 2.0 - 1.0, rect.getRight() * 2.0 - 1.0, rect.getBottom() * 2.0 - 1.0);\n        const multiplyColor = model.getMultiplyColor(index);\n        const screenColor = model.getScreenColor(index);\n        this.gl.uniform4f(shaderSet.uniformMultiplyColorLocation, multiplyColor.r, multiplyColor.g, multiplyColor.b, multiplyColor.a);\n        this.gl.uniform4f(shaderSet.uniformScreenColorLocation, screenColor.r, screenColor.g, screenColor.b, screenColor.a);\n        const srcColor = this.gl.ZERO;\n        const dstColor = this.gl.ONE_MINUS_SRC_COLOR;\n        const srcAlpha = this.gl.ZERO;\n        const dstAlpha = this.gl.ONE_MINUS_SRC_ALPHA;\n        if (renderer._bufferData.index == null) {\n            renderer._bufferData.index = this.gl.createBuffer();\n        }\n        const indexArray = model.getDrawableVertexIndices(index);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, renderer._bufferData.index);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.blendFuncSeparate(srcColor, dstColor, srcAlpha, dstAlpha);\n    }\n    releaseShaderProgram() {\n        for (let i = 0; i < this._shaderSets.getSize(); i++) {\n            this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\n            this._shaderSets.at(i).shaderProgram = 0;\n            this._shaderSets.set(i, void 0);\n            this._shaderSets.set(i, null);\n        }\n    }\n    generateShaders() {\n        for (let i = 0; i < ShaderCount; i++) {\n            this._shaderSets.pushBack(new CubismShaderSet());\n        }\n        this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n        this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n        this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n        this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n        this._shaderSets.at(4).shaderProgram = this._shaderSets.at(1).shaderProgram;\n        this._shaderSets.at(5).shaderProgram = this._shaderSets.at(2).shaderProgram;\n        this._shaderSets.at(6).shaderProgram = this._shaderSets.at(3).shaderProgram;\n        this._shaderSets.at(7).shaderProgram = this._shaderSets.at(1).shaderProgram;\n        this._shaderSets.at(8).shaderProgram = this._shaderSets.at(2).shaderProgram;\n        this._shaderSets.at(9).shaderProgram = this._shaderSets.at(3).shaderProgram;\n        this._shaderSets.at(0).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_position');\n        this._shaderSets.at(0).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(0).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 's_texture0');\n        this._shaderSets.at(0).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(0).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(0).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(0).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(0).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(1).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_position');\n        this._shaderSets.at(1).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(1).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 's_texture0');\n        this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_matrix');\n        this._shaderSets.at(1).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(1).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(1).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(2).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_position');\n        this._shaderSets.at(2).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(2).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture0');\n        this._shaderSets.at(2).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture1');\n        this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_matrix');\n        this._shaderSets.at(2).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(2).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(2).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(2).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(2).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(3).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_position');\n        this._shaderSets.at(3).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(3).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture0');\n        this._shaderSets.at(3).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture1');\n        this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_matrix');\n        this._shaderSets.at(3).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(3).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(3).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(3).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(3).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(4).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_position');\n        this._shaderSets.at(4).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(4).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 's_texture0');\n        this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_matrix');\n        this._shaderSets.at(4).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(4).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(4).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(5).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_position');\n        this._shaderSets.at(5).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(5).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture0');\n        this._shaderSets.at(5).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture1');\n        this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_matrix');\n        this._shaderSets.at(5).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(5).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(5).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(5).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(5).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(6).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_position');\n        this._shaderSets.at(6).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(6).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture0');\n        this._shaderSets.at(6).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture1');\n        this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_matrix');\n        this._shaderSets.at(6).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(6).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(6).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(6).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(6).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(7).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_position');\n        this._shaderSets.at(7).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(7).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 's_texture0');\n        this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_matrix');\n        this._shaderSets.at(7).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(7).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(7).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(8).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_position');\n        this._shaderSets.at(8).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(8).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture0');\n        this._shaderSets.at(8).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture1');\n        this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_matrix');\n        this._shaderSets.at(8).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(8).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(8).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(8).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(8).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_screenColor');\n        this._shaderSets.at(9).attributePositionLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_position');\n        this._shaderSets.at(9).attributeTexCoordLocation =\n            this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_texCoord');\n        this._shaderSets.at(9).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture0');\n        this._shaderSets.at(9).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture1');\n        this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_matrix');\n        this._shaderSets.at(9).uniformClipMatrixLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_clipMatrix');\n        this._shaderSets.at(9).uniformChannelFlagLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_channelFlag');\n        this._shaderSets.at(9).uniformBaseColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_baseColor');\n        this._shaderSets.at(9).uniformMultiplyColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_multiplyColor');\n        this._shaderSets.at(9).uniformScreenColorLocation =\n            this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_screenColor');\n    }\n    loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n        let shaderProgram = this.gl.createProgram();\n        let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n        if (!vertShader) {\n            CubismLogError('Vertex shader compile error!');\n            return 0;\n        }\n        let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n        if (!fragShader) {\n            CubismLogError('Vertex shader compile error!');\n            return 0;\n        }\n        this.gl.attachShader(shaderProgram, vertShader);\n        this.gl.attachShader(shaderProgram, fragShader);\n        this.gl.linkProgram(shaderProgram);\n        const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n        if (!linkStatus) {\n            CubismLogError('Failed to link program: {0}', shaderProgram);\n            this.gl.deleteShader(vertShader);\n            vertShader = 0;\n            this.gl.deleteShader(fragShader);\n            fragShader = 0;\n            if (shaderProgram) {\n                this.gl.deleteProgram(shaderProgram);\n                shaderProgram = 0;\n            }\n            return 0;\n        }\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        return shaderProgram;\n    }\n    compileShaderSource(shaderType, shaderSource) {\n        const source = shaderSource;\n        const shader = this.gl.createShader(shaderType);\n        this.gl.shaderSource(shader, source);\n        this.gl.compileShader(shader);\n        if (!shader) {\n            const log = this.gl.getShaderInfoLog(shader);\n            CubismLogError('Shader compile log: {0} ', log);\n        }\n        const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n        if (!status) {\n            this.gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    }\n    setGl(gl) {\n        this.gl = gl;\n    }\n}\nexport class CubismShaderManager_WebGL {\n    static getInstance() {\n        if (s_instance == null) {\n            s_instance = new CubismShaderManager_WebGL();\n        }\n        return s_instance;\n    }\n    static deleteInstance() {\n        if (s_instance) {\n            s_instance.release();\n            s_instance = null;\n        }\n    }\n    constructor() {\n        this._shaderMap = new csmMap();\n    }\n    release() {\n        for (const ite = this._shaderMap.begin(); ite.notEqual(this._shaderMap.end()); ite.preIncrement()) {\n            ite.ptr().second.release();\n        }\n        this._shaderMap.clear();\n    }\n    getShader(gl) {\n        return this._shaderMap.getValue(gl);\n    }\n    setGlContext(gl) {\n        if (!this._shaderMap.isExist(gl)) {\n            const instance = new CubismShader_WebGL();\n            instance.setGl(gl);\n            this._shaderMap.setValue(gl, instance);\n        }\n    }\n}\nexport class CubismShaderSet {\n}\nexport var ShaderNames;\n(function (ShaderNames) {\n    ShaderNames[ShaderNames[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    ShaderNames[ShaderNames[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames[ShaderNames[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n})(ShaderNames || (ShaderNames = {}));\nexport const vertexShaderSrcSetupMask = 'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_myPos;' +\n    'uniform mat4       u_clipMatrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_clipMatrix * a_position;' +\n    '   v_myPos = u_clipMatrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\nexport const fragmentShaderSrcsetupMask = 'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_myPos;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform vec4       u_channelFlag;' +\n    'uniform sampler2D  s_texture0;' +\n    'void main()' +\n    '{' +\n    '   float isInside = ' +\n    '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\n    '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\n    '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\n    '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\n    '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\n    '}';\nexport const vertexShaderSrc = 'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'uniform mat4       u_matrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_matrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\nexport const vertexShaderSrcMasked = 'attribute vec4     a_position;' +\n    'attribute vec2     a_texCoord;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_clipPos;' +\n    'uniform mat4       u_matrix;' +\n    'uniform mat4       u_clipMatrix;' +\n    'void main()' +\n    '{' +\n    '   gl_Position = u_matrix * a_position;' +\n    '   v_clipPos = u_clipMatrix * a_position;' +\n    '   v_texCoord = a_texCoord;' +\n    '   v_texCoord.y = 1.0 - v_texCoord.y;' +\n    '}';\nexport const fragmentShaderSrcPremultipliedAlpha = 'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform sampler2D  s_texture0;' +\n    'uniform vec4       u_multiplyColor;' +\n    'uniform vec4       u_screenColor;' +\n    'void main()' +\n    '{' +\n    '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\n    '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\n    '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\n    '   vec4 color = texColor * u_baseColor;' +\n    '   gl_FragColor = vec4(color.rgb, color.a);' +\n    '}';\nexport const fragmentShaderSrcMaskPremultipliedAlpha = 'precision mediump float;' +\n    'varying vec2       v_texCoord;' +\n    'varying vec4       v_clipPos;' +\n    'uniform vec4       u_baseColor;' +\n    'uniform vec4       u_channelFlag;' +\n    'uniform sampler2D  s_texture0;' +\n    'uniform sampler2D  s_texture1;' +\n    'uniform vec4       u_multiplyColor;' +\n    'uniform vec4       u_screenColor;' +\n    'void main()' +\n    '{' +\n    '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\n    '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\n    '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\n    '   vec4 col_formask = texColor * u_baseColor;' +\n    '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n    '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n    '   col_formask = col_formask * maskVal;' +\n    '   gl_FragColor = col_formask;' +\n    '}';\nexport const fragmentShaderSrcMaskInvertedPremultipliedAlpha = 'precision mediump float;' +\n    'varying vec2      v_texCoord;' +\n    'varying vec4      v_clipPos;' +\n    'uniform sampler2D s_texture0;' +\n    'uniform sampler2D s_texture1;' +\n    'uniform vec4      u_channelFlag;' +\n    'uniform vec4      u_baseColor;' +\n    'uniform vec4      u_multiplyColor;' +\n    'uniform vec4      u_screenColor;' +\n    'void main()' +\n    '{' +\n    '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\n    '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\n    '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\n    '   vec4 col_formask = texColor * u_baseColor;' +\n    '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\n    '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\n    '   col_formask = col_formask * (1.0 - maskVal);' +\n    '   gl_FragColor = col_formask;' +\n    '}';\nimport * as $ from './cubismshader_webgl';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismShaderSet = $.CubismShaderSet;\n    Live2DCubismFramework.CubismShader_WebGL = $.CubismShader_WebGL;\n    Live2DCubismFramework.CubismShaderManager_WebGL = $.CubismShaderManager_WebGL;\n    Live2DCubismFramework.ShaderNames = $.ShaderNames;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { csmMap } from '../type/csmmap';\nimport { csmVector } from '../type/csmvector';\nimport { CubismLogError } from '../utils/cubismdebug';\nimport { CubismClippingManager } from './cubismclippingmanager';\nimport { CubismClippingContext, CubismRenderer } from './cubismrenderer';\nimport { CubismShaderManager_WebGL } from './cubismshader_webgl';\nlet s_viewport;\nlet s_fbo;\nexport class CubismClippingManager_WebGL extends CubismClippingManager {\n    getMaskRenderTexture() {\n        if (this._maskTexture && this._maskTexture.textures != null) {\n            this._maskTexture.frameNo = this._currentFrameNo;\n        }\n        else {\n            if (this._maskRenderTextures != null) {\n                this._maskRenderTextures.clear();\n            }\n            this._maskRenderTextures = new csmVector();\n            if (this._maskColorBuffers != null) {\n                this._maskColorBuffers.clear();\n            }\n            this._maskColorBuffers = new csmVector();\n            const size = this._clippingMaskBufferSize;\n            for (let index = 0; index < this._renderTextureCount; index++) {\n                this._maskColorBuffers.pushBack(this.gl.createTexture());\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._maskColorBuffers.at(index));\n                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n                this._maskRenderTextures.pushBack(this.gl.createFramebuffer());\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTextures.at(index));\n                this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._maskColorBuffers.at(index), 0);\n            }\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n            this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, this._maskRenderTextures);\n        }\n        return this._maskTexture.textures;\n    }\n    setGL(gl) {\n        this.gl = gl;\n    }\n    constructor() {\n        super(CubismClippingContext_WebGL);\n    }\n    setupClippingContext(model, renderer) {\n        this._currentFrameNo++;\n        let usingClipCount = 0;\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n            const cc = this._clippingContextListForMask.at(clipIndex);\n            this.calcClippedDrawTotalBounds(model, cc);\n            if (cc._isUsing) {\n                usingClipCount++;\n            }\n        }\n        if (usingClipCount > 0) {\n            this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n            this._currentMaskRenderTexture = this.getMaskRenderTexture().at(0);\n            renderer.preDraw();\n            this.setupLayoutBounds(usingClipCount);\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._currentMaskRenderTexture);\n            if (this._clearedFrameBufferFlags.getSize() != this._renderTextureCount) {\n                this._clearedFrameBufferFlags.clear();\n                this._clearedFrameBufferFlags = new csmVector(this._renderTextureCount);\n            }\n            for (let index = 0; index < this._clearedFrameBufferFlags.getSize(); index++) {\n                this._clearedFrameBufferFlags.set(index, false);\n            }\n            for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\n                const clipContext = this._clippingContextListForMask.at(clipIndex);\n                const allClipedDrawRect = clipContext._allClippedDrawRect;\n                const layoutBoundsOnTex01 = clipContext._layoutBounds;\n                const margin = 0.05;\n                let scaleX = 0;\n                let scaleY = 0;\n                const clipContextRenderTexture = this.getMaskRenderTexture().at(clipContext._bufferIndex);\n                if (this._currentMaskRenderTexture != clipContextRenderTexture) {\n                    this._currentMaskRenderTexture = clipContextRenderTexture;\n                    renderer.preDraw();\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._currentMaskRenderTexture);\n                }\n                this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n                this._tmpBoundsOnModel.expand(allClipedDrawRect.width * margin, allClipedDrawRect.height * margin);\n                scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n                scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n                {\n                    this._tmpMatrix.loadIdentity();\n                    {\n                        this._tmpMatrix.translateRelative(-1.0, -1.0);\n                        this._tmpMatrix.scaleRelative(2.0, 2.0);\n                    }\n                    {\n                        this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n                        this._tmpMatrix.scaleRelative(scaleX, scaleY);\n                        this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n                    }\n                    this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n                }\n                {\n                    this._tmpMatrix.loadIdentity();\n                    {\n                        this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n                        this._tmpMatrix.scaleRelative(scaleX, scaleY);\n                        this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n                    }\n                    this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n                }\n                clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n                clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n                const clipDrawCount = clipContext._clippingIdCount;\n                for (let i = 0; i < clipDrawCount; i++) {\n                    const clipDrawIndex = clipContext._clippingIdList[i];\n                    if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n                        continue;\n                    }\n                    renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n                    if (!this._clearedFrameBufferFlags.at(clipContext._bufferIndex)) {\n                        this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n                        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n                        this._clearedFrameBufferFlags.set(clipContext._bufferIndex, true);\n                    }\n                    renderer.setClippingContextBufferForMask(clipContext);\n                    renderer.drawMeshWebGL(model, clipDrawIndex);\n                }\n            }\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n            renderer.setClippingContextBufferForMask(null);\n            this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n        }\n    }\n    getColorBuffer() {\n        return this._maskColorBuffers;\n    }\n    getClippingMaskCount() {\n        return this._clippingContextListForMask.getSize();\n    }\n}\nexport class CubismRenderTextureResource {\n    constructor(frameNo, texture) {\n        this.frameNo = frameNo;\n        this.textures = texture;\n    }\n}\nexport class CubismClippingContext_WebGL extends CubismClippingContext {\n    constructor(manager, clippingDrawableIndices, clipCount) {\n        super(clippingDrawableIndices, clipCount);\n        this._owner = manager;\n    }\n    getClippingManager() {\n        return this._owner;\n    }\n    setGl(gl) {\n        this._owner.setGL(gl);\n    }\n}\nexport class CubismRendererProfile_WebGL {\n    setGlEnable(index, enabled) {\n        if (enabled)\n            this.gl.enable(index);\n        else\n            this.gl.disable(index);\n    }\n    setGlEnableVertexAttribArray(index, enabled) {\n        if (enabled)\n            this.gl.enableVertexAttribArray(index);\n        else\n            this.gl.disableVertexAttribArray(index);\n    }\n    save() {\n        if (this.gl == null) {\n            CubismLogError(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        this._lastArrayBufferBinding = this.gl.getParameter(this.gl.ARRAY_BUFFER_BINDING);\n        this._lastElementArrayBufferBinding = this.gl.getParameter(this.gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this._lastProgram = this.gl.getParameter(this.gl.CURRENT_PROGRAM);\n        this._lastActiveTexture = this.gl.getParameter(this.gl.ACTIVE_TEXTURE);\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        this._lastTexture1Binding2D = this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this._lastTexture0Binding2D = this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n        this._lastVertexAttribArrayEnabled[0] = this.gl.getVertexAttrib(0, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[1] = this.gl.getVertexAttrib(1, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[2] = this.gl.getVertexAttrib(2, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastVertexAttribArrayEnabled[3] = this.gl.getVertexAttrib(3, this.gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n        this._lastScissorTest = this.gl.isEnabled(this.gl.SCISSOR_TEST);\n        this._lastStencilTest = this.gl.isEnabled(this.gl.STENCIL_TEST);\n        this._lastDepthTest = this.gl.isEnabled(this.gl.DEPTH_TEST);\n        this._lastCullFace = this.gl.isEnabled(this.gl.CULL_FACE);\n        this._lastBlend = this.gl.isEnabled(this.gl.BLEND);\n        this._lastFrontFace = this.gl.getParameter(this.gl.FRONT_FACE);\n        this._lastColorMask = this.gl.getParameter(this.gl.COLOR_WRITEMASK);\n        this._lastBlending[0] = this.gl.getParameter(this.gl.BLEND_SRC_RGB);\n        this._lastBlending[1] = this.gl.getParameter(this.gl.BLEND_DST_RGB);\n        this._lastBlending[2] = this.gl.getParameter(this.gl.BLEND_SRC_ALPHA);\n        this._lastBlending[3] = this.gl.getParameter(this.gl.BLEND_DST_ALPHA);\n        this._lastFBO = this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n        this._lastViewport = this.gl.getParameter(this.gl.VIEWPORT);\n    }\n    restore() {\n        if (this.gl == null) {\n            CubismLogError(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        this.gl.useProgram(this._lastProgram);\n        this.setGlEnableVertexAttribArray(0, this._lastVertexAttribArrayEnabled[0]);\n        this.setGlEnableVertexAttribArray(1, this._lastVertexAttribArrayEnabled[1]);\n        this.setGlEnableVertexAttribArray(2, this._lastVertexAttribArrayEnabled[2]);\n        this.setGlEnableVertexAttribArray(3, this._lastVertexAttribArrayEnabled[3]);\n        this.setGlEnable(this.gl.SCISSOR_TEST, this._lastScissorTest);\n        this.setGlEnable(this.gl.STENCIL_TEST, this._lastStencilTest);\n        this.setGlEnable(this.gl.DEPTH_TEST, this._lastDepthTest);\n        this.setGlEnable(this.gl.CULL_FACE, this._lastCullFace);\n        this.setGlEnable(this.gl.BLEND, this._lastBlend);\n        this.gl.frontFace(this._lastFrontFace);\n        this.gl.colorMask(this._lastColorMask[0], this._lastColorMask[1], this._lastColorMask[2], this._lastColorMask[3]);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this._lastArrayBufferBinding);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this._lastElementArrayBufferBinding);\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture1Binding2D);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture0Binding2D);\n        this.gl.activeTexture(this._lastActiveTexture);\n        this.gl.blendFuncSeparate(this._lastBlending[0], this._lastBlending[1], this._lastBlending[2], this._lastBlending[3]);\n    }\n    setGl(gl) {\n        this.gl = gl;\n    }\n    constructor() {\n        this._lastVertexAttribArrayEnabled = new Array(4);\n        this._lastColorMask = new Array(4);\n        this._lastBlending = new Array(4);\n        this._lastViewport = new Array(4);\n    }\n}\nexport class CubismRenderer_WebGL extends CubismRenderer {\n    initialize(model, maskBufferCount = 1) {\n        if (model.isUsingMasking()) {\n            this._clippingManager = new CubismClippingManager_WebGL();\n            this._clippingManager.initialize(model, maskBufferCount);\n        }\n        this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\n        super.initialize(model);\n    }\n    bindTexture(modelTextureNo, glTexture) {\n        this._textures.setValue(modelTextureNo, glTexture);\n    }\n    getBindedTextures() {\n        return this._textures;\n    }\n    setClippingMaskBufferSize(size) {\n        if (!this._model.isUsingMasking()) {\n            return;\n        }\n        const renderTextureCount = this._clippingManager.getRenderTextureCount();\n        this._clippingManager.release();\n        this._clippingManager = void 0;\n        this._clippingManager = null;\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.setClippingMaskBufferSize(size);\n        this._clippingManager.initialize(this.getModel(), renderTextureCount);\n    }\n    getClippingMaskBufferSize() {\n        return this._model.isUsingMasking()\n            ? this._clippingManager.getClippingMaskBufferSize()\n            : -1;\n    }\n    getRenderTextureCount() {\n        return this._model.isUsingMasking()\n            ? this._clippingManager.getRenderTextureCount()\n            : -1;\n    }\n    constructor() {\n        super();\n        this._clippingContextBufferForMask = null;\n        this._clippingContextBufferForDraw = null;\n        this._rendererProfile = new CubismRendererProfile_WebGL();\n        this.firstDraw = true;\n        this._textures = new csmMap();\n        this._sortedDrawableIndexList = new csmVector();\n        this._bufferData = {\n            vertex: (WebGLBuffer = null),\n            uv: (WebGLBuffer = null),\n            index: (WebGLBuffer = null)\n        };\n        this._textures.prepareCapacity(32, true);\n    }\n    release() {\n        if (this._clippingManager) {\n            this._clippingManager.release();\n            this._clippingManager = void 0;\n            this._clippingManager = null;\n        }\n        if (this.gl == null) {\n            return;\n        }\n        this.gl.deleteBuffer(this._bufferData.vertex);\n        this._bufferData.vertex = null;\n        this.gl.deleteBuffer(this._bufferData.uv);\n        this._bufferData.uv = null;\n        this.gl.deleteBuffer(this._bufferData.index);\n        this._bufferData.index = null;\n        this._bufferData = null;\n        this._textures = null;\n    }\n    doDrawModel() {\n        if (this.gl == null) {\n            CubismLogError(\"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\");\n            return;\n        }\n        if (this._clippingManager != null) {\n            this.preDraw();\n            if (this.isUsingHighPrecisionMask()) {\n                this._clippingManager.setupMatrixForHighPrecision(this.getModel(), false);\n            }\n            else {\n                this._clippingManager.setupClippingContext(this.getModel(), this);\n            }\n        }\n        this.preDraw();\n        const drawableCount = this.getModel().getDrawableCount();\n        const renderOrder = this.getModel().getDrawableRenderOrders();\n        for (let i = 0; i < drawableCount; ++i) {\n            const order = renderOrder[i];\n            this._sortedDrawableIndexList.set(order, i);\n        }\n        for (let i = 0; i < drawableCount; ++i) {\n            const drawableIndex = this._sortedDrawableIndexList.at(i);\n            if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n                continue;\n            }\n            const clipContext = this._clippingManager != null\n                ? this._clippingManager\n                    .getClippingContextListForDraw()\n                    .at(drawableIndex)\n                : null;\n            if (clipContext != null && this.isUsingHighPrecisionMask()) {\n                if (clipContext._isUsing) {\n                    this.gl.viewport(0, 0, this._clippingManager.getClippingMaskBufferSize(), this._clippingManager.getClippingMaskBufferSize());\n                    this.preDraw();\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, clipContext\n                        .getClippingManager()\n                        .getMaskRenderTexture()\n                        .at(clipContext._bufferIndex));\n                    this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n                    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n                }\n                {\n                    const clipDrawCount = clipContext._clippingIdCount;\n                    for (let index = 0; index < clipDrawCount; index++) {\n                        const clipDrawIndex = clipContext._clippingIdList[index];\n                        if (!this._model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n                            continue;\n                        }\n                        this.setIsCulling(this._model.getDrawableCulling(clipDrawIndex) != false);\n                        this.setClippingContextBufferForMask(clipContext);\n                        this.drawMeshWebGL(this._model, clipDrawIndex);\n                    }\n                }\n                {\n                    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n                    this.setClippingContextBufferForMask(null);\n                    this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n                    this.preDraw();\n                }\n            }\n            this.setClippingContextBufferForDraw(clipContext);\n            this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n            this.drawMeshWebGL(this._model, drawableIndex);\n        }\n    }\n    drawMeshWebGL(model, index) {\n        if (this.isCulling()) {\n            this.gl.enable(this.gl.CULL_FACE);\n        }\n        else {\n            this.gl.disable(this.gl.CULL_FACE);\n        }\n        this.gl.frontFace(this.gl.CCW);\n        if (this.isGeneratingMask()) {\n            CubismShaderManager_WebGL.getInstance()\n                .getShader(this.gl)\n                .setupShaderProgramForMask(this, model, index);\n        }\n        else {\n            CubismShaderManager_WebGL.getInstance()\n                .getShader(this.gl)\n                .setupShaderProgramForDraw(this, model, index);\n        }\n        {\n            const indexCount = model.getDrawableVertexIndexCount(index);\n            this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n        }\n        this.gl.useProgram(null);\n        this.setClippingContextBufferForDraw(null);\n        this.setClippingContextBufferForMask(null);\n    }\n    saveProfile() {\n        this._rendererProfile.save();\n    }\n    restoreProfile() {\n        this._rendererProfile.restore();\n    }\n    static doStaticRelease() {\n        CubismShaderManager_WebGL.deleteInstance();\n    }\n    setRenderState(fbo, viewport) {\n        s_fbo = fbo;\n        s_viewport = viewport;\n    }\n    preDraw() {\n        if (this.firstDraw) {\n            this.firstDraw = false;\n        }\n        this.gl.disable(this.gl.SCISSOR_TEST);\n        this.gl.disable(this.gl.STENCIL_TEST);\n        this.gl.disable(this.gl.DEPTH_TEST);\n        this.gl.frontFace(this.gl.CW);\n        this.gl.enable(this.gl.BLEND);\n        this.gl.colorMask(true, true, true, true);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n        if (this.getAnisotropy() > 0.0 && this._extension) {\n            for (let i = 0; i < this._textures.getSize(); ++i) {\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._textures.getValue(i));\n                this.gl.texParameterf(this.gl.TEXTURE_2D, this._extension.TEXTURE_MAX_ANISOTROPY_EXT, this.getAnisotropy());\n            }\n        }\n    }\n    setClippingContextBufferForMask(clip) {\n        this._clippingContextBufferForMask = clip;\n    }\n    getClippingContextBufferForMask() {\n        return this._clippingContextBufferForMask;\n    }\n    setClippingContextBufferForDraw(clip) {\n        this._clippingContextBufferForDraw = clip;\n    }\n    getClippingContextBufferForDraw() {\n        return this._clippingContextBufferForDraw;\n    }\n    isGeneratingMask() {\n        return this.getClippingContextBufferForMask() != null;\n    }\n    startUp(gl) {\n        this.gl = gl;\n        if (this._clippingManager) {\n            this._clippingManager.setGL(gl);\n        }\n        CubismShaderManager_WebGL.getInstance().setGlContext(gl);\n        this._rendererProfile.setGl(gl);\n        this._extension =\n            this.gl.getExtension('EXT_texture_filter_anisotropic') ||\n                this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\n                this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\n    }\n}\nCubismRenderer.staticRelease = () => {\n    CubismRenderer_WebGL.doStaticRelease();\n};\nimport * as $ from './cubismrenderer_webgl';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismClippingContext = $.CubismClippingContext_WebGL;\n    Live2DCubismFramework.CubismClippingManager_WebGL = $.CubismClippingManager_WebGL;\n    Live2DCubismFramework.CubismRenderTextureResource = $.CubismRenderTextureResource;\n    Live2DCubismFramework.CubismRenderer_WebGL = $.CubismRenderer_WebGL;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { CubismMath } from '../math/cubismmath';\nimport { CubismBlendMode, CubismTextureColor } from '../rendering/cubismrenderer';\nimport { csmMap } from '../type/csmmap';\nimport { csmVector } from '../type/csmvector';\nimport { CSM_ASSERT, CubismLogWarning } from '../utils/cubismdebug';\nexport class ParameterRepeatData {\n    constructor(isOverridden = false, isParameterRepeated = false) {\n        this.isOverridden = isOverridden;\n        this.isParameterRepeated = isParameterRepeated;\n    }\n}\nexport class DrawableColorData {\n    constructor(isOverridden = false, color = new CubismTextureColor()) {\n        this.isOverridden = isOverridden;\n        this.color = color;\n    }\n    get isOverwritten() {\n        return this.isOverridden;\n    }\n}\nexport class PartColorData {\n    constructor(isOverridden = false, color = new CubismTextureColor()) {\n        this.isOverridden = isOverridden;\n        this.color = color;\n    }\n    get isOverwritten() {\n        return this.isOverridden;\n    }\n}\nexport class DrawableCullingData {\n    constructor(isOverridden = false, isCulling = false) {\n        this.isOverridden = isOverridden;\n        this.isCulling = isCulling;\n    }\n    get isOverwritten() {\n        return this.isOverridden;\n    }\n}\nexport class CubismModel {\n    update() {\n        this._model.update();\n        this._model.drawables.resetDynamicFlags();\n    }\n    getPixelsPerUnit() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return this._model.canvasinfo.PixelsPerUnit;\n    }\n    getCanvasWidth() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return (this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit);\n    }\n    getCanvasHeight() {\n        if (this._model == null) {\n            return 0.0;\n        }\n        return (this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit);\n    }\n    saveParameters() {\n        const parameterCount = this._model.parameters.count;\n        const savedParameterCount = this._savedParameters.getSize();\n        for (let i = 0; i < parameterCount; ++i) {\n            if (i < savedParameterCount) {\n                this._savedParameters.set(i, this._parameterValues[i]);\n            }\n            else {\n                this._savedParameters.pushBack(this._parameterValues[i]);\n            }\n        }\n    }\n    getMultiplyColor(index) {\n        if (this.getOverrideFlagForModelMultiplyColors() ||\n            this.getOverrideFlagForDrawableMultiplyColors(index)) {\n            return this._userMultiplyColors.at(index).color;\n        }\n        const color = this.getDrawableMultiplyColor(index);\n        return color;\n    }\n    getScreenColor(index) {\n        if (this.getOverrideFlagForModelScreenColors() ||\n            this.getOverrideFlagForDrawableScreenColors(index)) {\n            return this._userScreenColors.at(index).color;\n        }\n        const color = this.getDrawableScreenColor(index);\n        return color;\n    }\n    setMultiplyColorByTextureColor(index, color) {\n        this.setMultiplyColorByRGBA(index, color.r, color.g, color.b, color.a);\n    }\n    setMultiplyColorByRGBA(index, r, g, b, a = 1.0) {\n        this._userMultiplyColors.at(index).color.r = r;\n        this._userMultiplyColors.at(index).color.g = g;\n        this._userMultiplyColors.at(index).color.b = b;\n        this._userMultiplyColors.at(index).color.a = a;\n    }\n    setScreenColorByTextureColor(index, color) {\n        this.setScreenColorByRGBA(index, color.r, color.g, color.b, color.a);\n    }\n    setScreenColorByRGBA(index, r, g, b, a = 1.0) {\n        this._userScreenColors.at(index).color.r = r;\n        this._userScreenColors.at(index).color.g = g;\n        this._userScreenColors.at(index).color.b = b;\n        this._userScreenColors.at(index).color.a = a;\n    }\n    getPartMultiplyColor(partIndex) {\n        return this._userPartMultiplyColors.at(partIndex).color;\n    }\n    getPartScreenColor(partIndex) {\n        return this._userPartScreenColors.at(partIndex).color;\n    }\n    setPartColor(partIndex, r, g, b, a, partColors, drawableColors) {\n        partColors.at(partIndex).color.r = r;\n        partColors.at(partIndex).color.g = g;\n        partColors.at(partIndex).color.b = b;\n        partColors.at(partIndex).color.a = a;\n        if (partColors.at(partIndex).isOverridden) {\n            for (let i = 0; i < this._partChildDrawables.at(partIndex).getSize(); ++i) {\n                const drawableIndex = this._partChildDrawables.at(partIndex).at(i);\n                drawableColors.at(drawableIndex).color.r = r;\n                drawableColors.at(drawableIndex).color.g = g;\n                drawableColors.at(drawableIndex).color.b = b;\n                drawableColors.at(drawableIndex).color.a = a;\n            }\n        }\n    }\n    setPartMultiplyColorByTextureColor(partIndex, color) {\n        this.setPartMultiplyColorByRGBA(partIndex, color.r, color.g, color.b, color.a);\n    }\n    setPartMultiplyColorByRGBA(partIndex, r, g, b, a) {\n        this.setPartColor(partIndex, r, g, b, a, this._userPartMultiplyColors, this._userMultiplyColors);\n    }\n    setPartScreenColorByTextureColor(partIndex, color) {\n        this.setPartScreenColorByRGBA(partIndex, color.r, color.g, color.b, color.a);\n    }\n    setPartScreenColorByRGBA(partIndex, r, g, b, a) {\n        this.setPartColor(partIndex, r, g, b, a, this._userPartScreenColors, this._userScreenColors);\n    }\n    getOverrideFlagForModelParameterRepeat() {\n        return this._isOverriddenParameterRepeat;\n    }\n    setOverrideFlagForModelParameterRepeat(isRepeat) {\n        this._isOverriddenParameterRepeat = isRepeat;\n    }\n    getOverrideFlagForParameterRepeat(parameterIndex) {\n        return this._userParameterRepeatDataList.at(parameterIndex).isOverridden;\n    }\n    setOverrideFlagForParameterRepeat(parameterIndex, value) {\n        this._userParameterRepeatDataList.at(parameterIndex).isOverridden = value;\n    }\n    getRepeatFlagForParameterRepeat(parameterIndex) {\n        return this._userParameterRepeatDataList.at(parameterIndex)\n            .isParameterRepeated;\n    }\n    setRepeatFlagForParameterRepeat(parameterIndex, value) {\n        this._userParameterRepeatDataList.at(parameterIndex).isParameterRepeated =\n            value;\n    }\n    getOverwriteFlagForModelMultiplyColors() {\n        CubismLogWarning('getOverwriteFlagForModelMultiplyColors() is a deprecated function. Please use getOverrideFlagForModelMultiplyColors().');\n        return this.getOverrideFlagForModelMultiplyColors();\n    }\n    getOverrideFlagForModelMultiplyColors() {\n        return this._isOverriddenModelMultiplyColors;\n    }\n    getOverwriteFlagForModelScreenColors() {\n        CubismLogWarning('getOverwriteFlagForModelScreenColors() is a deprecated function. Please use getOverrideFlagForModelScreenColors().');\n        return this.getOverrideFlagForModelScreenColors();\n    }\n    getOverrideFlagForModelScreenColors() {\n        return this._isOverriddenModelScreenColors;\n    }\n    setOverwriteFlagForModelMultiplyColors(value) {\n        CubismLogWarning('setOverwriteFlagForModelMultiplyColors(value: boolean) is a deprecated function. Please use setOverrideFlagForModelMultiplyColors(value: boolean).');\n        this.setOverrideFlagForModelMultiplyColors(value);\n    }\n    setOverrideFlagForModelMultiplyColors(value) {\n        this._isOverriddenModelMultiplyColors = value;\n    }\n    setOverwriteFlagForModelScreenColors(value) {\n        CubismLogWarning('setOverwriteFlagForModelScreenColors(value: boolean) is a deprecated function. Please use setOverrideFlagForModelScreenColors(value: boolean).');\n        this.setOverrideFlagForModelScreenColors(value);\n    }\n    setOverrideFlagForModelScreenColors(value) {\n        this._isOverriddenModelScreenColors = value;\n    }\n    getOverwriteFlagForDrawableMultiplyColors(drawableindex) {\n        CubismLogWarning('getOverwriteFlagForDrawableMultiplyColors(drawableindex: number) is a deprecated function. Please use getOverrideFlagForDrawableMultiplyColors(drawableindex: number).');\n        return this.getOverrideFlagForDrawableMultiplyColors(drawableindex);\n    }\n    getOverrideFlagForDrawableMultiplyColors(drawableindex) {\n        return this._userMultiplyColors.at(drawableindex).isOverridden;\n    }\n    getOverwriteFlagForDrawableScreenColors(drawableindex) {\n        CubismLogWarning('getOverwriteFlagForDrawableScreenColors(drawableindex: number) is a deprecated function. Please use getOverrideFlagForDrawableScreenColors(drawableindex: number).');\n        return this.getOverrideFlagForDrawableScreenColors(drawableindex);\n    }\n    getOverrideFlagForDrawableScreenColors(drawableindex) {\n        return this._userScreenColors.at(drawableindex).isOverridden;\n    }\n    setOverwriteFlagForDrawableMultiplyColors(drawableindex, value) {\n        CubismLogWarning('setOverwriteFlagForDrawableMultiplyColors(drawableindex: number, value: boolean) is a deprecated function. Please use setOverrideFlagForDrawableMultiplyColors(drawableindex: number, value: boolean).');\n        this.setOverrideFlagForDrawableMultiplyColors(drawableindex, value);\n    }\n    setOverrideFlagForDrawableMultiplyColors(drawableindex, value) {\n        this._userMultiplyColors.at(drawableindex).isOverridden = value;\n    }\n    setOverwriteFlagForDrawableScreenColors(drawableindex, value) {\n        CubismLogWarning('setOverwriteFlagForDrawableScreenColors(drawableindex: number, value: boolean) is a deprecated function. Please use setOverrideFlagForDrawableScreenColors(drawableindex: number, value: boolean).');\n        this.setOverrideFlagForDrawableScreenColors(drawableindex, value);\n    }\n    setOverrideFlagForDrawableScreenColors(drawableindex, value) {\n        this._userScreenColors.at(drawableindex).isOverridden = value;\n    }\n    getOverwriteColorForPartMultiplyColors(partIndex) {\n        CubismLogWarning('getOverwriteColorForPartMultiplyColors(partIndex: number) is a deprecated function. Please use getOverrideColorForPartMultiplyColors(partIndex: number).');\n        return this.getOverrideColorForPartMultiplyColors(partIndex);\n    }\n    getOverrideColorForPartMultiplyColors(partIndex) {\n        return this._userPartMultiplyColors.at(partIndex).isOverridden;\n    }\n    getOverwriteColorForPartScreenColors(partIndex) {\n        CubismLogWarning('getOverwriteColorForPartScreenColors(partIndex: number) is a deprecated function. Please use getOverrideColorForPartScreenColors(partIndex: number).');\n        return this.getOverrideColorForPartScreenColors(partIndex);\n    }\n    getOverrideColorForPartScreenColors(partIndex) {\n        return this._userPartScreenColors.at(partIndex).isOverridden;\n    }\n    setOverwriteColorForPartColors(partIndex, value, partColors, drawableColors) {\n        CubismLogWarning('setOverwriteColorForPartColors(partIndex: number, value: boolean, partColors: csmVector<PartColorData>, drawableColors: csmVector<DrawableColorData>) is a deprecated function. Please use setOverrideColorForPartColors(partIndex: number, value: boolean, partColors: csmVector<PartColorData>, drawableColors: csmVector<DrawableColorData>).');\n        this.setOverrideColorForPartColors(partIndex, value, partColors, drawableColors);\n    }\n    setOverrideColorForPartColors(partIndex, value, partColors, drawableColors) {\n        partColors.at(partIndex).isOverridden = value;\n        for (let i = 0; i < this._partChildDrawables.at(partIndex).getSize(); ++i) {\n            const drawableIndex = this._partChildDrawables.at(partIndex).at(i);\n            drawableColors.at(drawableIndex).isOverridden = value;\n            if (value) {\n                drawableColors.at(drawableIndex).color.r =\n                    partColors.at(partIndex).color.r;\n                drawableColors.at(drawableIndex).color.g =\n                    partColors.at(partIndex).color.g;\n                drawableColors.at(drawableIndex).color.b =\n                    partColors.at(partIndex).color.b;\n                drawableColors.at(drawableIndex).color.a =\n                    partColors.at(partIndex).color.a;\n            }\n        }\n    }\n    setOverwriteColorForPartMultiplyColors(partIndex, value) {\n        CubismLogWarning('setOverwriteColorForPartMultiplyColors(partIndex: number, value: boolean) is a deprecated function. Please use setOverrideColorForPartMultiplyColors(partIndex: number, value: boolean).');\n        this.setOverrideColorForPartMultiplyColors(partIndex, value);\n    }\n    setOverrideColorForPartMultiplyColors(partIndex, value) {\n        this._userPartMultiplyColors.at(partIndex).isOverridden = value;\n        this.setOverrideColorForPartColors(partIndex, value, this._userPartMultiplyColors, this._userMultiplyColors);\n    }\n    setOverwriteColorForPartScreenColors(partIndex, value) {\n        CubismLogWarning('setOverwriteColorForPartScreenColors(partIndex: number, value: boolean) is a deprecated function. Please use setOverrideColorForPartScreenColors(partIndex: number, value: boolean).');\n        this.setOverrideColorForPartScreenColors(partIndex, value);\n    }\n    setOverrideColorForPartScreenColors(partIndex, value) {\n        this._userPartScreenColors.at(partIndex).isOverridden = value;\n        this.setOverrideColorForPartColors(partIndex, value, this._userPartScreenColors, this._userScreenColors);\n    }\n    getDrawableCulling(drawableIndex) {\n        if (this.getOverrideFlagForModelCullings() ||\n            this.getOverrideFlagForDrawableCullings(drawableIndex)) {\n            return this._userCullings.at(drawableIndex).isCulling;\n        }\n        const constantFlags = this._model.drawables.constantFlags;\n        return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    setDrawableCulling(drawableIndex, isCulling) {\n        this._userCullings.at(drawableIndex).isCulling = isCulling;\n    }\n    getOverwriteFlagForModelCullings() {\n        CubismLogWarning('getOverwriteFlagForModelCullings() is a deprecated function. Please use getOverrideFlagForModelCullings().');\n        return this.getOverrideFlagForModelCullings();\n    }\n    getOverrideFlagForModelCullings() {\n        return this._isOverriddenCullings;\n    }\n    setOverwriteFlagForModelCullings(isOverriddenCullings) {\n        CubismLogWarning('setOverwriteFlagForModelCullings(isOverriddenCullings: boolean) is a deprecated function. Please use setOverrideFlagForModelCullings(isOverriddenCullings: boolean).');\n        this.setOverrideFlagForModelCullings(isOverriddenCullings);\n    }\n    setOverrideFlagForModelCullings(isOverriddenCullings) {\n        this._isOverriddenCullings = isOverriddenCullings;\n    }\n    getOverwriteFlagForDrawableCullings(drawableIndex) {\n        CubismLogWarning('getOverwriteFlagForDrawableCullings(drawableIndex: number) is a deprecated function. Please use getOverrideFlagForDrawableCullings(drawableIndex: number).');\n        return this.getOverrideFlagForDrawableCullings(drawableIndex);\n    }\n    getOverrideFlagForDrawableCullings(drawableIndex) {\n        return this._userCullings.at(drawableIndex).isOverridden;\n    }\n    setOverwriteFlagForDrawableCullings(drawableIndex, isOverriddenCullings) {\n        CubismLogWarning('setOverwriteFlagForDrawableCullings(drawableIndex: number, isOverriddenCullings: boolean) is a deprecated function. Please use setOverrideFlagForDrawableCullings(drawableIndex: number, isOverriddenCullings: boolean).');\n        this.setOverrideFlagForDrawableCullings(drawableIndex, isOverriddenCullings);\n    }\n    setOverrideFlagForDrawableCullings(drawableIndex, isOverriddenCullings) {\n        this._userCullings.at(drawableIndex).isOverridden = isOverriddenCullings;\n    }\n    getModelOapcity() {\n        return this._modelOpacity;\n    }\n    setModelOapcity(value) {\n        this._modelOpacity = value;\n    }\n    getModel() {\n        return this._model;\n    }\n    getPartIndex(partId) {\n        let partIndex;\n        const partCount = this._model.parts.count;\n        for (partIndex = 0; partIndex < partCount; ++partIndex) {\n            if (partId == this._partIds.at(partIndex)) {\n                return partIndex;\n            }\n        }\n        if (this._notExistPartId.isExist(partId)) {\n            return this._notExistPartId.getValue(partId);\n        }\n        partIndex = partCount + this._notExistPartId.getSize();\n        this._notExistPartId.setValue(partId, partIndex);\n        this._notExistPartOpacities.appendKey(partIndex);\n        return partIndex;\n    }\n    getPartId(partIndex) {\n        const partId = this._model.parts.ids[partIndex];\n        return CubismFramework.getIdManager().getId(partId);\n    }\n    getPartCount() {\n        const partCount = this._model.parts.count;\n        return partCount;\n    }\n    getPartParentPartIndices() {\n        const parentIndices = this._model.parts.parentIndices;\n        return parentIndices;\n    }\n    setPartOpacityByIndex(partIndex, opacity) {\n        if (this._notExistPartOpacities.isExist(partIndex)) {\n            this._notExistPartOpacities.setValue(partIndex, opacity);\n            return;\n        }\n        CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n        this._partOpacities[partIndex] = opacity;\n    }\n    setPartOpacityById(partId, opacity) {\n        const index = this.getPartIndex(partId);\n        if (index < 0) {\n            return;\n        }\n        this.setPartOpacityByIndex(index, opacity);\n    }\n    getPartOpacityByIndex(partIndex) {\n        if (this._notExistPartOpacities.isExist(partIndex)) {\n            return this._notExistPartOpacities.getValue(partIndex);\n        }\n        CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n        return this._partOpacities[partIndex];\n    }\n    getPartOpacityById(partId) {\n        const index = this.getPartIndex(partId);\n        if (index < 0) {\n            return 0;\n        }\n        return this.getPartOpacityByIndex(index);\n    }\n    getParameterIndex(parameterId) {\n        let parameterIndex;\n        const idCount = this._model.parameters.count;\n        for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n            if (parameterId != this._parameterIds.at(parameterIndex)) {\n                continue;\n            }\n            return parameterIndex;\n        }\n        if (this._notExistParameterId.isExist(parameterId)) {\n            return this._notExistParameterId.getValue(parameterId);\n        }\n        parameterIndex =\n            this._model.parameters.count + this._notExistParameterId.getSize();\n        this._notExistParameterId.setValue(parameterId, parameterIndex);\n        this._notExistParameterValues.appendKey(parameterIndex);\n        return parameterIndex;\n    }\n    getParameterCount() {\n        return this._model.parameters.count;\n    }\n    getParameterType(parameterIndex) {\n        return this._model.parameters.types[parameterIndex];\n    }\n    getParameterMaximumValue(parameterIndex) {\n        return this._model.parameters.maximumValues[parameterIndex];\n    }\n    getParameterMinimumValue(parameterIndex) {\n        return this._model.parameters.minimumValues[parameterIndex];\n    }\n    getParameterDefaultValue(parameterIndex) {\n        return this._model.parameters.defaultValues[parameterIndex];\n    }\n    getParameterId(parameterIndex) {\n        return CubismFramework.getIdManager().getId(this._model.parameters.ids[parameterIndex]);\n    }\n    getParameterValueByIndex(parameterIndex) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return this._notExistParameterValues.getValue(parameterIndex);\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        return this._parameterValues[parameterIndex];\n    }\n    getParameterValueById(parameterId) {\n        const parameterIndex = this.getParameterIndex(parameterId);\n        return this.getParameterValueByIndex(parameterIndex);\n    }\n    setParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            this._notExistParameterValues.setValue(parameterIndex, weight == 1\n                ? value\n                : this._notExistParameterValues.getValue(parameterIndex) *\n                    (1 - weight) +\n                    value * weight);\n            return;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        if (this.isRepeat(parameterIndex)) {\n            value = this.getParameterRepeatValue(parameterIndex, value);\n        }\n        else {\n            value = this.getParameterClampValue(parameterIndex, value);\n        }\n        this._parameterValues[parameterIndex] =\n            weight == 1\n                ? value\n                : (this._parameterValues[parameterIndex] =\n                    this._parameterValues[parameterIndex] * (1 - weight) +\n                        value * weight);\n    }\n    setParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.setParameterValueByIndex(index, value, weight);\n    }\n    addParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    addParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.addParameterValueByIndex(index, value, weight);\n    }\n    isRepeat(parameterIndex) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return false;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        let isRepeat;\n        if (this._isOverriddenParameterRepeat ||\n            this._userParameterRepeatDataList.at(parameterIndex).isOverridden) {\n            isRepeat =\n                this._userParameterRepeatDataList.at(parameterIndex).isParameterRepeated;\n        }\n        else {\n            isRepeat = this._model.parameters.repeats[parameterIndex] != 0;\n        }\n        return isRepeat;\n    }\n    getParameterRepeatValue(parameterIndex, value) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return value;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        const maxValue = this._model.parameters.maximumValues[parameterIndex];\n        const minValue = this._model.parameters.minimumValues[parameterIndex];\n        const valueSize = maxValue - minValue;\n        if (maxValue < value) {\n            const overValue = CubismMath.mod(value - maxValue, valueSize);\n            if (!Number.isNaN(overValue)) {\n                value = minValue + overValue;\n            }\n            else {\n                value = maxValue;\n            }\n        }\n        if (value < minValue) {\n            const overValue = CubismMath.mod(minValue - value, valueSize);\n            if (!Number.isNaN(overValue)) {\n                value = maxValue - overValue;\n            }\n            else {\n                value = minValue;\n            }\n        }\n        return value;\n    }\n    getParameterClampValue(parameterIndex, value) {\n        if (this._notExistParameterValues.isExist(parameterIndex)) {\n            return value;\n        }\n        CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n        const maxValue = this._model.parameters.maximumValues[parameterIndex];\n        const minValue = this._model.parameters.minimumValues[parameterIndex];\n        return CubismMath.clamp(value, minValue, maxValue);\n    }\n    getParameterRepeats(parameterIndex) {\n        return this._model.parameters.repeats[parameterIndex] != 0;\n    }\n    multiplyParameterValueById(parameterId, value, weight = 1.0) {\n        const index = this.getParameterIndex(parameterId);\n        this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueByIndex(parameterIndex, value, weight = 1.0) {\n        this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) *\n            (1.0 + (value - 1.0) * weight));\n    }\n    getDrawableIndex(drawableId) {\n        const drawableCount = this._model.drawables.count;\n        for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n            if (this._drawableIds.at(drawableIndex) == drawableId) {\n                return drawableIndex;\n            }\n        }\n        return -1;\n    }\n    getDrawableCount() {\n        const drawableCount = this._model.drawables.count;\n        return drawableCount;\n    }\n    getDrawableId(drawableIndex) {\n        const parameterIds = this._model.drawables.ids;\n        return CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\n    }\n    getDrawableRenderOrders() {\n        const renderOrders = this._model.drawables.renderOrders;\n        return renderOrders;\n    }\n    getDrawableTextureIndices(drawableIndex) {\n        return this.getDrawableTextureIndex(drawableIndex);\n    }\n    getDrawableTextureIndex(drawableIndex) {\n        const textureIndices = this._model.drawables.textureIndices;\n        return textureIndices[drawableIndex];\n    }\n    getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableVertexIndexCount(drawableIndex) {\n        const indexCounts = this._model.drawables.indexCounts;\n        return indexCounts[drawableIndex];\n    }\n    getDrawableVertexCount(drawableIndex) {\n        const vertexCounts = this._model.drawables.vertexCounts;\n        return vertexCounts[drawableIndex];\n    }\n    getDrawableVertices(drawableIndex) {\n        return this.getDrawableVertexPositions(drawableIndex);\n    }\n    getDrawableVertexIndices(drawableIndex) {\n        const indicesArray = this._model.drawables.indices;\n        return indicesArray[drawableIndex];\n    }\n    getDrawableVertexPositions(drawableIndex) {\n        const verticesArray = this._model.drawables.vertexPositions;\n        return verticesArray[drawableIndex];\n    }\n    getDrawableVertexUvs(drawableIndex) {\n        const uvsArray = this._model.drawables.vertexUvs;\n        return uvsArray[drawableIndex];\n    }\n    getDrawableOpacity(drawableIndex) {\n        const opacities = this._model.drawables.opacities;\n        return opacities[drawableIndex];\n    }\n    getDrawableMultiplyColor(drawableIndex) {\n        const multiplyColors = this._model.drawables.multiplyColors;\n        const index = drawableIndex * 4;\n        const multiplyColor = new CubismTextureColor();\n        multiplyColor.r = multiplyColors[index];\n        multiplyColor.g = multiplyColors[index + 1];\n        multiplyColor.b = multiplyColors[index + 2];\n        multiplyColor.a = multiplyColors[index + 3];\n        return multiplyColor;\n    }\n    getDrawableScreenColor(drawableIndex) {\n        const screenColors = this._model.drawables.screenColors;\n        const index = drawableIndex * 4;\n        const screenColor = new CubismTextureColor();\n        screenColor.r = screenColors[index];\n        screenColor.g = screenColors[index + 1];\n        screenColor.b = screenColors[index + 2];\n        screenColor.a = screenColors[index + 3];\n        return screenColor;\n    }\n    getDrawableParentPartIndex(drawableIndex) {\n        return this._model.drawables.parentPartIndices[drawableIndex];\n    }\n    getDrawableBlendMode(drawableIndex) {\n        const constantFlags = this._model.drawables.constantFlags;\n        return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex])\n            ? CubismBlendMode.CubismBlendMode_Additive\n            : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex])\n                ? CubismBlendMode.CubismBlendMode_Multiplicative\n                : CubismBlendMode.CubismBlendMode_Normal;\n    }\n    getDrawableInvertedMaskBit(drawableIndex) {\n        const constantFlags = this._model.drawables.constantFlags;\n        return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    getDrawableMasks() {\n        const masks = this._model.drawables.masks;\n        return masks;\n    }\n    getDrawableMaskCounts() {\n        const maskCounts = this._model.drawables.maskCounts;\n        return maskCounts;\n    }\n    isUsingMasking() {\n        for (let d = 0; d < this._model.drawables.count; ++d) {\n            if (this._model.drawables.maskCounts[d] <= 0) {\n                continue;\n            }\n            return true;\n        }\n        return false;\n    }\n    getDrawableDynamicFlagIsVisible(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagBlendColorDidChange(drawableIndex) {\n        const dynamicFlags = this._model.drawables.dynamicFlags;\n        return Live2DCubismCore.Utils.hasBlendColorDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    loadParameters() {\n        let parameterCount = this._model.parameters.count;\n        const savedParameterCount = this._savedParameters.getSize();\n        if (parameterCount > savedParameterCount) {\n            parameterCount = savedParameterCount;\n        }\n        for (let i = 0; i < parameterCount; ++i) {\n            this._parameterValues[i] = this._savedParameters.at(i);\n        }\n    }\n    initialize() {\n        CSM_ASSERT(this._model);\n        this._parameterValues = this._model.parameters.values;\n        this._partOpacities = this._model.parts.opacities;\n        this._parameterMaximumValues = this._model.parameters.maximumValues;\n        this._parameterMinimumValues = this._model.parameters.minimumValues;\n        {\n            const parameterIds = this._model.parameters.ids;\n            const parameterCount = this._model.parameters.count;\n            this._parameterIds.prepareCapacity(parameterCount);\n            this._userParameterRepeatDataList.prepareCapacity(parameterCount);\n            for (let i = 0; i < parameterCount; ++i) {\n                this._parameterIds.pushBack(CubismFramework.getIdManager().getId(parameterIds[i]));\n                this._userParameterRepeatDataList.pushBack(new ParameterRepeatData(false, false));\n            }\n        }\n        const partCount = this._model.parts.count;\n        {\n            const partIds = this._model.parts.ids;\n            this._partIds.prepareCapacity(partCount);\n            for (let i = 0; i < partCount; ++i) {\n                this._partIds.pushBack(CubismFramework.getIdManager().getId(partIds[i]));\n            }\n            this._userPartMultiplyColors.prepareCapacity(partCount);\n            this._userPartScreenColors.prepareCapacity(partCount);\n            this._partChildDrawables.prepareCapacity(partCount);\n        }\n        {\n            const drawableIds = this._model.drawables.ids;\n            const drawableCount = this._model.drawables.count;\n            this._userMultiplyColors.prepareCapacity(drawableCount);\n            this._userScreenColors.prepareCapacity(drawableCount);\n            this._userCullings.prepareCapacity(drawableCount);\n            const userCulling = new DrawableCullingData(false, false);\n            {\n                for (let i = 0; i < partCount; ++i) {\n                    const multiplyColor = new CubismTextureColor(1.0, 1.0, 1.0, 1.0);\n                    const screenColor = new CubismTextureColor(0.0, 0.0, 0.0, 1.0);\n                    const userMultiplyColor = new PartColorData(false, multiplyColor);\n                    const userScreenColor = new PartColorData(false, screenColor);\n                    this._userPartMultiplyColors.pushBack(userMultiplyColor);\n                    this._userPartScreenColors.pushBack(userScreenColor);\n                    this._partChildDrawables.pushBack(new csmVector());\n                    this._partChildDrawables.at(i).prepareCapacity(drawableCount);\n                }\n            }\n            {\n                for (let i = 0; i < drawableCount; ++i) {\n                    const multiplyColor = new CubismTextureColor(1.0, 1.0, 1.0, 1.0);\n                    const screenColor = new CubismTextureColor(0.0, 0.0, 0.0, 1.0);\n                    const userMultiplyColor = new DrawableColorData(false, multiplyColor);\n                    const userScreenColor = new DrawableColorData(false, screenColor);\n                    this._drawableIds.pushBack(CubismFramework.getIdManager().getId(drawableIds[i]));\n                    this._userMultiplyColors.pushBack(userMultiplyColor);\n                    this._userScreenColors.pushBack(userScreenColor);\n                    this._userCullings.pushBack(userCulling);\n                    const parentIndex = this.getDrawableParentPartIndex(i);\n                    if (parentIndex >= 0) {\n                        this._partChildDrawables.at(parentIndex).pushBack(i);\n                    }\n                }\n            }\n        }\n    }\n    constructor(model) {\n        this._model = model;\n        this._parameterValues = null;\n        this._parameterMaximumValues = null;\n        this._parameterMinimumValues = null;\n        this._partOpacities = null;\n        this._savedParameters = new csmVector();\n        this._parameterIds = new csmVector();\n        this._drawableIds = new csmVector();\n        this._partIds = new csmVector();\n        this._isOverriddenParameterRepeat = true;\n        this._isOverriddenModelMultiplyColors = false;\n        this._isOverriddenModelScreenColors = false;\n        this._isOverriddenCullings = false;\n        this._modelOpacity = 1.0;\n        this._userParameterRepeatDataList = new csmVector();\n        this._userMultiplyColors = new csmVector();\n        this._userScreenColors = new csmVector();\n        this._userCullings = new csmVector();\n        this._userPartMultiplyColors = new csmVector();\n        this._userPartScreenColors = new csmVector();\n        this._partChildDrawables = new csmVector();\n        this._notExistPartId = new csmMap();\n        this._notExistParameterId = new csmMap();\n        this._notExistParameterValues = new csmMap();\n        this._notExistPartOpacities = new csmMap();\n    }\n    release() {\n        this._model.release();\n        this._model = null;\n    }\n}\nimport * as $ from './cubismmodel';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModel = $.CubismModel;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CSM_ASSERT, CubismLogError } from '../utils/cubismdebug';\nimport { CubismModel } from './cubismmodel';\nexport class CubismMoc {\n    static create(mocBytes, shouldCheckMocConsistency) {\n        let cubismMoc = null;\n        if (shouldCheckMocConsistency) {\n            const consistency = this.hasMocConsistency(mocBytes);\n            if (!consistency) {\n                CubismLogError(`Inconsistent MOC3.`);\n                return cubismMoc;\n            }\n        }\n        const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n        if (moc) {\n            cubismMoc = new CubismMoc(moc);\n            cubismMoc._mocVersion = Live2DCubismCore.Version.csmGetMocVersion(moc, mocBytes);\n        }\n        return cubismMoc;\n    }\n    static delete(moc) {\n        moc._moc._release();\n        moc._moc = null;\n        moc = null;\n    }\n    createModel() {\n        let cubismModel = null;\n        const model = Live2DCubismCore.Model.fromMoc(this._moc);\n        if (model) {\n            cubismModel = new CubismModel(model);\n            cubismModel.initialize();\n            ++this._modelCount;\n        }\n        return cubismModel;\n    }\n    deleteModel(model) {\n        if (model != null) {\n            model.release();\n            model = null;\n            --this._modelCount;\n        }\n    }\n    constructor(moc) {\n        this._moc = moc;\n        this._modelCount = 0;\n        this._mocVersion = 0;\n    }\n    release() {\n        CSM_ASSERT(this._modelCount == 0);\n        this._moc._release();\n        this._moc = null;\n    }\n    getLatestMocVersion() {\n        return Live2DCubismCore.Version.csmGetLatestMocVersion();\n    }\n    getMocVersion() {\n        return this._mocVersion;\n    }\n    static hasMocConsistency(mocBytes) {\n        const isConsistent = Live2DCubismCore.Moc.prototype.hasMocConsistency(mocBytes);\n        return isConsistent === 1 ? true : false;\n    }\n}\nimport * as $ from './cubismmoc';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismMoc = $.CubismMoc;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { CubismJson } from '../utils/cubismjson';\nconst Meta = 'Meta';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst UserData = 'UserData';\nconst Target = 'Target';\nconst Id = 'Id';\nconst Value = 'Value';\nexport class CubismModelUserDataJson {\n    constructor(buffer, size) {\n        this._json = CubismJson.create(buffer, size);\n    }\n    release() {\n        CubismJson.delete(this._json);\n    }\n    getUserDataCount() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(UserDataCount)\n            .toInt();\n    }\n    getTotalUserDataSize() {\n        return this._json\n            .getRoot()\n            .getValueByString(Meta)\n            .getValueByString(TotalUserDataSize)\n            .toInt();\n    }\n    getUserDataTargetType(i) {\n        return this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(i)\n            .getValueByString(Target)\n            .getRawString();\n    }\n    getUserDataId(i) {\n        return CubismFramework.getIdManager().getId(this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(i)\n            .getValueByString(Id)\n            .getRawString());\n    }\n    getUserDataValue(i) {\n        return this._json\n            .getRoot()\n            .getValueByString(UserData)\n            .getValueByIndex(i)\n            .getValueByString(Value)\n            .getRawString();\n    }\n}\nimport * as $ from './cubismmodeluserdatajson';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelUserDataJson = $.CubismModelUserDataJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismFramework } from '../live2dcubismframework';\nimport { csmString } from '../type/csmstring';\nimport { csmVector } from '../type/csmvector';\nimport { CubismModelUserDataJson } from './cubismmodeluserdatajson';\nconst ArtMesh = 'ArtMesh';\nexport class CubismModelUserDataNode {\n}\nexport class CubismModelUserData {\n    static create(buffer, size) {\n        const ret = new CubismModelUserData();\n        ret.parseUserData(buffer, size);\n        return ret;\n    }\n    static delete(modelUserData) {\n        if (modelUserData != null) {\n            modelUserData.release();\n            modelUserData = null;\n        }\n    }\n    getArtMeshUserDatas() {\n        return this._artMeshUserDataNode;\n    }\n    parseUserData(buffer, size) {\n        let json = new CubismModelUserDataJson(buffer, size);\n        if (!json) {\n            json.release();\n            json = void 0;\n            return;\n        }\n        const typeOfArtMesh = CubismFramework.getIdManager().getId(ArtMesh);\n        const nodeCount = json.getUserDataCount();\n        for (let i = 0; i < nodeCount; i++) {\n            const addNode = new CubismModelUserDataNode();\n            addNode.targetId = json.getUserDataId(i);\n            addNode.targetType = CubismFramework.getIdManager().getId(json.getUserDataTargetType(i));\n            addNode.value = new csmString(json.getUserDataValue(i));\n            this._userDataNodes.pushBack(addNode);\n            if (addNode.targetType == typeOfArtMesh) {\n                this._artMeshUserDataNode.pushBack(addNode);\n            }\n        }\n        json.release();\n        json = void 0;\n    }\n    constructor() {\n        this._userDataNodes = new csmVector();\n        this._artMeshUserDataNode = new csmVector();\n    }\n    release() {\n        for (let i = 0; i < this._userDataNodes.getSize(); ++i) {\n            this._userDataNodes.set(i, null);\n        }\n        this._userDataNodes = null;\n    }\n}\nimport * as $ from './cubismmodeluserdata';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismModelUserData = $.CubismModelUserData;\n    Live2DCubismFramework.CubismModelUserDataNode = $.CubismModelUserDataNode;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismBreath } from '../effect/cubismbreath';\nimport { CubismEyeBlink } from '../effect/cubismeyeblink';\nimport { CubismPose } from '../effect/cubismpose';\nimport { Constant } from '../live2dcubismframework';\nimport { CubismModelMatrix } from '../math/cubismmodelmatrix';\nimport { CubismTargetPoint } from '../math/cubismtargetpoint';\nimport { CubismExpressionMotion } from '../motion/cubismexpressionmotion';\nimport { CubismExpressionMotionManager } from '../motion/cubismexpressionmotionmanager';\nimport { CubismMotion } from '../motion/cubismmotion';\nimport { CubismMotionManager } from '../motion/cubismmotionmanager';\nimport { CubismPhysics } from '../physics/cubismphysics';\nimport { CubismRenderer_WebGL } from '../rendering/cubismrenderer_webgl';\nimport { CubismLogError, CubismLogInfo } from '../utils/cubismdebug';\nimport { CubismMoc } from './cubismmoc';\nimport { CubismModelUserData } from './cubismmodeluserdata';\nexport class CubismUserModel {\n    isInitialized() {\n        return this._initialized;\n    }\n    setInitialized(v) {\n        this._initialized = v;\n    }\n    isUpdating() {\n        return this._updating;\n    }\n    setUpdating(v) {\n        this._updating = v;\n    }\n    setDragging(x, y) {\n        this._dragManager.set(x, y);\n    }\n    setAcceleration(x, y, z) {\n        this._accelerationX = x;\n        this._accelerationY = y;\n        this._accelerationZ = z;\n    }\n    getModelMatrix() {\n        return this._modelMatrix;\n    }\n    setOpacity(a) {\n        this._opacity = a;\n    }\n    getOpacity() {\n        return this._opacity;\n    }\n    loadModel(buffer, shouldCheckMocConsistency = false) {\n        this._moc = CubismMoc.create(buffer, shouldCheckMocConsistency);\n        if (this._moc == null) {\n            CubismLogError('Failed to CubismMoc.create().');\n            return;\n        }\n        this._model = this._moc.createModel();\n        if (this._model == null) {\n            CubismLogError('Failed to CreateModel().');\n            return;\n        }\n        this._model.saveParameters();\n        this._modelMatrix = new CubismModelMatrix(this._model.getCanvasWidth(), this._model.getCanvasHeight());\n    }\n    loadMotion(buffer, size, name, onFinishedMotionHandler, onBeganMotionHandler, modelSetting, group, index, shouldCheckMotionConsistency = false) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadMotion().');\n            return null;\n        }\n        const motion = CubismMotion.create(buffer, size, onFinishedMotionHandler, onBeganMotionHandler, shouldCheckMotionConsistency);\n        if (motion == null) {\n            CubismLogError(`Failed to create motion from buffer in LoadMotion()`);\n            return null;\n        }\n        if (modelSetting) {\n            const fadeInTime = modelSetting.getMotionFadeInTimeValue(group, index);\n            if (fadeInTime >= 0.0) {\n                motion.setFadeInTime(fadeInTime);\n            }\n            const fadeOutTime = modelSetting.getMotionFadeOutTimeValue(group, index);\n            if (fadeOutTime >= 0.0) {\n                motion.setFadeOutTime(fadeOutTime);\n            }\n        }\n        return motion;\n    }\n    loadExpression(buffer, size, name) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadExpression().');\n            return null;\n        }\n        return CubismExpressionMotion.create(buffer, size);\n    }\n    loadPose(buffer, size) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadPose().');\n            return;\n        }\n        this._pose = CubismPose.create(buffer, size);\n    }\n    loadUserData(buffer, size) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadUserData().');\n            return;\n        }\n        this._modelUserData = CubismModelUserData.create(buffer, size);\n    }\n    loadPhysics(buffer, size) {\n        if (buffer == null || size == 0) {\n            CubismLogError('Failed to loadPhysics().');\n            return;\n        }\n        this._physics = CubismPhysics.create(buffer, size);\n    }\n    isHit(drawableId, pointX, pointY) {\n        const drawIndex = this._model.getDrawableIndex(drawableId);\n        if (drawIndex < 0) {\n            return false;\n        }\n        const count = this._model.getDrawableVertexCount(drawIndex);\n        const vertices = this._model.getDrawableVertices(drawIndex);\n        let left = vertices[0];\n        let right = vertices[0];\n        let top = vertices[1];\n        let bottom = vertices[1];\n        for (let j = 1; j < count; ++j) {\n            const x = vertices[Constant.vertexOffset + j * Constant.vertexStep];\n            const y = vertices[Constant.vertexOffset + j * Constant.vertexStep + 1];\n            if (x < left) {\n                left = x;\n            }\n            if (x > right) {\n                right = x;\n            }\n            if (y < top) {\n                top = y;\n            }\n            if (y > bottom) {\n                bottom = y;\n            }\n        }\n        const tx = this._modelMatrix.invertTransformX(pointX);\n        const ty = this._modelMatrix.invertTransformY(pointY);\n        return left <= tx && tx <= right && top <= ty && ty <= bottom;\n    }\n    getModel() {\n        return this._model;\n    }\n    getRenderer() {\n        return this._renderer;\n    }\n    createRenderer(maskBufferCount = 1) {\n        if (this._renderer) {\n            this.deleteRenderer();\n        }\n        this._renderer = new CubismRenderer_WebGL();\n        this._renderer.initialize(this._model, maskBufferCount);\n    }\n    deleteRenderer() {\n        if (this._renderer != null) {\n            this._renderer.release();\n            this._renderer = null;\n        }\n    }\n    motionEventFired(eventValue) {\n        CubismLogInfo('{0}', eventValue.s);\n    }\n    static cubismDefaultMotionEventCallback(caller, eventValue, customData) {\n        const model = customData;\n        if (model != null) {\n            model.motionEventFired(eventValue);\n        }\n    }\n    constructor() {\n        this._moc = null;\n        this._model = null;\n        this._motionManager = null;\n        this._expressionManager = null;\n        this._eyeBlink = null;\n        this._breath = null;\n        this._modelMatrix = null;\n        this._pose = null;\n        this._dragManager = null;\n        this._physics = null;\n        this._modelUserData = null;\n        this._initialized = false;\n        this._updating = false;\n        this._opacity = 1.0;\n        this._lipsync = true;\n        this._lastLipSyncValue = 0.0;\n        this._dragX = 0.0;\n        this._dragY = 0.0;\n        this._accelerationX = 0.0;\n        this._accelerationY = 0.0;\n        this._accelerationZ = 0.0;\n        this._mocConsistency = false;\n        this._debugMode = false;\n        this._renderer = null;\n        this._motionManager = new CubismMotionManager();\n        this._motionManager.setEventCallback(CubismUserModel.cubismDefaultMotionEventCallback, this);\n        this._expressionManager = new CubismExpressionMotionManager();\n        this._dragManager = new CubismTargetPoint();\n    }\n    release() {\n        if (this._motionManager != null) {\n            this._motionManager.release();\n            this._motionManager = null;\n        }\n        if (this._expressionManager != null) {\n            this._expressionManager.release();\n            this._expressionManager = null;\n        }\n        if (this._moc != null) {\n            this._moc.deleteModel(this._model);\n            this._moc.release();\n            this._moc = null;\n        }\n        this._modelMatrix = null;\n        CubismPose.delete(this._pose);\n        CubismEyeBlink.delete(this._eyeBlink);\n        CubismBreath.delete(this._breath);\n        this._dragManager = null;\n        CubismPhysics.delete(this._physics);\n        CubismModelUserData.delete(this._modelUserData);\n        this.deleteRenderer();\n    }\n}\nimport * as $ from './cubismusermodel';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismUserModel = $.CubismUserModel;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport let s_instance = null;\nexport class LAppWavFileHandler {\n    static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppWavFileHandler();\n        }\n        return s_instance;\n    }\n    static releaseInstance() {\n        if (s_instance != null) {\n            s_instance = void 0;\n        }\n        s_instance = null;\n    }\n    update(deltaTimeSeconds) {\n        let goalOffset;\n        let rms;\n        if (this._pcmData == null ||\n            this._sampleOffset >= this._wavFileInfo._samplesPerChannel) {\n            this._lastRms = 0.0;\n            return false;\n        }\n        this._userTimeSeconds += deltaTimeSeconds;\n        goalOffset = Math.floor(this._userTimeSeconds * this._wavFileInfo._samplingRate);\n        if (goalOffset > this._wavFileInfo._samplesPerChannel) {\n            goalOffset = this._wavFileInfo._samplesPerChannel;\n        }\n        rms = 0.0;\n        for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n            for (let sampleCount = this._sampleOffset; sampleCount < goalOffset; sampleCount++) {\n                const pcm = this._pcmData[channelCount][sampleCount];\n                rms += pcm * pcm;\n            }\n        }\n        rms = Math.sqrt(rms /\n            (this._wavFileInfo._numberOfChannels *\n                (goalOffset - this._sampleOffset)));\n        this._lastRms = rms;\n        this._sampleOffset = goalOffset;\n        return true;\n    }\n    start(filePath) {\n        this._sampleOffset = 0;\n        this._userTimeSeconds = 0.0;\n        this._lastRms = 0.0;\n        this.loadWavFile(filePath);\n    }\n    getRms() {\n        return this._lastRms;\n    }\n    loadWavFile(filePath) {\n        return new Promise(resolveValue => {\n            let ret = false;\n            if (this._pcmData != null) {\n                this.releasePcmData();\n            }\n            const asyncFileLoad = () => __awaiter(this, void 0, void 0, function* () {\n                return fetch(filePath).then(responce => {\n                    return responce.arrayBuffer();\n                });\n            });\n            const asyncWavFileManager = (() => __awaiter(this, void 0, void 0, function* () {\n                this._byteReader._fileByte = yield asyncFileLoad();\n                this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\n                this._byteReader._fileSize = this._byteReader._fileByte.byteLength;\n                this._byteReader._readOffset = 0;\n                if (this._byteReader._fileByte == null ||\n                    this._byteReader._fileSize < 4) {\n                    resolveValue(false);\n                    return;\n                }\n                this._wavFileInfo._fileName = filePath;\n                try {\n                    if (!this._byteReader.getCheckSignature('RIFF')) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"RIFF\".');\n                    }\n                    this._byteReader.get32LittleEndian();\n                    if (!this._byteReader.getCheckSignature('WAVE')) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"WAVE\".');\n                    }\n                    if (!this._byteReader.getCheckSignature('fmt ')) {\n                        ret = false;\n                        throw new Error('Cannot find Signeture \"fmt\".');\n                    }\n                    const fmtChunkSize = this._byteReader.get32LittleEndian();\n                    if (this._byteReader.get16LittleEndian() != 1) {\n                        ret = false;\n                        throw new Error('File is not linear PCM.');\n                    }\n                    this._wavFileInfo._numberOfChannels =\n                        this._byteReader.get16LittleEndian();\n                    this._wavFileInfo._samplingRate =\n                        this._byteReader.get32LittleEndian();\n                    this._byteReader.get32LittleEndian();\n                    this._byteReader.get16LittleEndian();\n                    this._wavFileInfo._bitsPerSample =\n                        this._byteReader.get16LittleEndian();\n                    if (fmtChunkSize > 16) {\n                        this._byteReader._readOffset += fmtChunkSize - 16;\n                    }\n                    while (!this._byteReader.getCheckSignature('data') &&\n                        this._byteReader._readOffset < this._byteReader._fileSize) {\n                        this._byteReader._readOffset +=\n                            this._byteReader.get32LittleEndian() + 4;\n                    }\n                    if (this._byteReader._readOffset >= this._byteReader._fileSize) {\n                        ret = false;\n                        throw new Error('Cannot find \"data\" Chunk.');\n                    }\n                    {\n                        const dataChunkSize = this._byteReader.get32LittleEndian();\n                        this._wavFileInfo._samplesPerChannel =\n                            (dataChunkSize * 8) /\n                                (this._wavFileInfo._bitsPerSample *\n                                    this._wavFileInfo._numberOfChannels);\n                    }\n                    this._pcmData = new Array(this._wavFileInfo._numberOfChannels);\n                    for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n                        this._pcmData[channelCount] = new Float32Array(this._wavFileInfo._samplesPerChannel);\n                    }\n                    for (let sampleCount = 0; sampleCount < this._wavFileInfo._samplesPerChannel; sampleCount++) {\n                        for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n                            this._pcmData[channelCount][sampleCount] = this.getPcmSample();\n                        }\n                    }\n                    ret = true;\n                    resolveValue(ret);\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            }))().then(() => {\n                resolveValue(ret);\n            });\n        });\n    }\n    getPcmSample() {\n        let pcm32;\n        switch (this._wavFileInfo._bitsPerSample) {\n            case 8:\n                pcm32 = this._byteReader.get8() - 128;\n                pcm32 <<= 24;\n                break;\n            case 16:\n                pcm32 = this._byteReader.get16LittleEndian() << 16;\n                break;\n            case 24:\n                pcm32 = this._byteReader.get24LittleEndian() << 8;\n                break;\n            default:\n                pcm32 = 0;\n                break;\n        }\n        return pcm32 / 2147483647;\n    }\n    getPcmDataChannel(usechannel) {\n        if (!this._pcmData || !(usechannel < this._pcmData.length)) {\n            return null;\n        }\n        return Float32Array.from(this._pcmData[usechannel]);\n    }\n    getWavSamplingRate() {\n        if (!this._wavFileInfo || this._wavFileInfo._samplingRate < 1) {\n            return null;\n        }\n        return this._wavFileInfo._samplingRate;\n    }\n    releasePcmData() {\n        for (let channelCount = 0; channelCount < this._wavFileInfo._numberOfChannels; channelCount++) {\n            this._pcmData[channelCount] = null;\n        }\n        delete this._pcmData;\n        this._pcmData = null;\n    }\n    constructor() {\n        this.loadFiletoBytes = (arrayBuffer, length) => {\n            this._byteReader._fileByte = arrayBuffer;\n            this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\n            this._byteReader._fileSize = length;\n        };\n        this._pcmData = null;\n        this._userTimeSeconds = 0.0;\n        this._lastRms = 0.0;\n        this._sampleOffset = 0.0;\n        this._wavFileInfo = new WavFileInfo();\n        this._byteReader = new ByteReader();\n    }\n}\nexport class WavFileInfo {\n    constructor() {\n        this._fileName = '';\n        this._numberOfChannels = 0;\n        this._bitsPerSample = 0;\n        this._samplingRate = 0;\n        this._samplesPerChannel = 0;\n    }\n}\nexport class ByteReader {\n    constructor() {\n        this._fileByte = null;\n        this._fileDataView = null;\n        this._fileSize = 0;\n        this._readOffset = 0;\n    }\n    get8() {\n        const ret = this._fileDataView.getUint8(this._readOffset);\n        this._readOffset++;\n        return ret;\n    }\n    get16LittleEndian() {\n        const ret = (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\n            this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 2;\n        return ret;\n    }\n    get24LittleEndian() {\n        const ret = (this._fileDataView.getUint8(this._readOffset + 2) << 16) |\n            (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\n            this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 3;\n        return ret;\n    }\n    get32LittleEndian() {\n        const ret = (this._fileDataView.getUint8(this._readOffset + 3) << 24) |\n            (this._fileDataView.getUint8(this._readOffset + 2) << 16) |\n            (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\n            this._fileDataView.getUint8(this._readOffset);\n        this._readOffset += 4;\n        return ret;\n    }\n    getCheckSignature(reference) {\n        const getSignature = new Uint8Array(4);\n        const referenceString = new TextEncoder().encode(reference);\n        if (reference.length != 4) {\n            return false;\n        }\n        for (let signatureOffset = 0; signatureOffset < 4; signatureOffset++) {\n            getSignature[signatureOffset] = this.get8();\n        }\n        return (getSignature[0] == referenceString[0] &&\n            getSignature[1] == referenceString[1] &&\n            getSignature[2] == referenceString[2] &&\n            getSignature[3] == referenceString[3]);\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CubismDefaultParameterId } from '@framework/cubismdefaultparameterid';\nimport { CubismModelSettingJson } from '@framework/cubismmodelsettingjson';\nimport { BreathParameterData, CubismBreath } from '@framework/effect/cubismbreath';\nimport { CubismEyeBlink } from '@framework/effect/cubismeyeblink';\nimport { CubismFramework } from '@framework/live2dcubismframework';\nimport { CubismUserModel } from '@framework/model/cubismusermodel';\nimport { ACubismMotion } from '@framework/motion/acubismmotion';\nimport { InvalidMotionQueueEntryHandleValue } from '@framework/motion/cubismmotionqueuemanager';\nimport { csmMap } from '@framework/type/csmmap';\nimport { csmVector } from '@framework/type/csmvector';\nimport { CSM_ASSERT, CubismLogError, CubismLogInfo } from '@framework/utils/cubismdebug';\nimport * as LAppDefine from './lappdefine';\nimport { LAppPal } from './lapppal';\nimport { LAppWavFileHandler } from './lappwavfilehandler';\nimport { CubismMoc } from '@framework/model/cubismmoc';\nvar LoadStep;\n(function (LoadStep) {\n    LoadStep[LoadStep[\"LoadAssets\"] = 0] = \"LoadAssets\";\n    LoadStep[LoadStep[\"LoadModel\"] = 1] = \"LoadModel\";\n    LoadStep[LoadStep[\"WaitLoadModel\"] = 2] = \"WaitLoadModel\";\n    LoadStep[LoadStep[\"LoadExpression\"] = 3] = \"LoadExpression\";\n    LoadStep[LoadStep[\"WaitLoadExpression\"] = 4] = \"WaitLoadExpression\";\n    LoadStep[LoadStep[\"LoadPhysics\"] = 5] = \"LoadPhysics\";\n    LoadStep[LoadStep[\"WaitLoadPhysics\"] = 6] = \"WaitLoadPhysics\";\n    LoadStep[LoadStep[\"LoadPose\"] = 7] = \"LoadPose\";\n    LoadStep[LoadStep[\"WaitLoadPose\"] = 8] = \"WaitLoadPose\";\n    LoadStep[LoadStep[\"SetupEyeBlink\"] = 9] = \"SetupEyeBlink\";\n    LoadStep[LoadStep[\"SetupBreath\"] = 10] = \"SetupBreath\";\n    LoadStep[LoadStep[\"LoadUserData\"] = 11] = \"LoadUserData\";\n    LoadStep[LoadStep[\"WaitLoadUserData\"] = 12] = \"WaitLoadUserData\";\n    LoadStep[LoadStep[\"SetupEyeBlinkIds\"] = 13] = \"SetupEyeBlinkIds\";\n    LoadStep[LoadStep[\"SetupLipSyncIds\"] = 14] = \"SetupLipSyncIds\";\n    LoadStep[LoadStep[\"SetupLayout\"] = 15] = \"SetupLayout\";\n    LoadStep[LoadStep[\"LoadMotion\"] = 16] = \"LoadMotion\";\n    LoadStep[LoadStep[\"WaitLoadMotion\"] = 17] = \"WaitLoadMotion\";\n    LoadStep[LoadStep[\"CompleteInitialize\"] = 18] = \"CompleteInitialize\";\n    LoadStep[LoadStep[\"CompleteSetupModel\"] = 19] = \"CompleteSetupModel\";\n    LoadStep[LoadStep[\"LoadTexture\"] = 20] = \"LoadTexture\";\n    LoadStep[LoadStep[\"WaitLoadTexture\"] = 21] = \"WaitLoadTexture\";\n    LoadStep[LoadStep[\"CompleteSetup\"] = 22] = \"CompleteSetup\";\n})(LoadStep || (LoadStep = {}));\nexport class LAppModel extends CubismUserModel {\n    loadAssets(dir, fileName) {\n        this._modelHomeDir = dir;\n        fetch(`${this._modelHomeDir}${fileName}`)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => {\n            const setting = new CubismModelSettingJson(arrayBuffer, arrayBuffer.byteLength);\n            this._state = LoadStep.LoadModel;\n            this.setupModel(setting);\n        })\n            .catch(error => {\n            CubismLogError(`Failed to load file ${this._modelHomeDir}${fileName}`);\n        });\n    }\n    setupModel(setting) {\n        this._updating = true;\n        this._initialized = false;\n        this._modelSetting = setting;\n        if (this._modelSetting.getModelFileName() != '') {\n            const modelFileName = this._modelSetting.getModelFileName();\n            fetch(`${this._modelHomeDir}${modelFileName}`)\n                .then(response => {\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                else if (response.status >= 400) {\n                    CubismLogError(`Failed to load file ${this._modelHomeDir}${modelFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            })\n                .then(arrayBuffer => {\n                this.loadModel(arrayBuffer, this._mocConsistency);\n                this._state = LoadStep.LoadExpression;\n                loadCubismExpression();\n            });\n            this._state = LoadStep.WaitLoadModel;\n        }\n        else {\n            LAppPal.printMessage('Model data does not exist.');\n        }\n        const loadCubismExpression = () => {\n            if (this._modelSetting.getExpressionCount() > 0) {\n                const count = this._modelSetting.getExpressionCount();\n                for (let i = 0; i < count; i++) {\n                    const expressionName = this._modelSetting.getExpressionName(i);\n                    const expressionFileName = this._modelSetting.getExpressionFileName(i);\n                    fetch(`${this._modelHomeDir}${expressionFileName}`)\n                        .then(response => {\n                        if (response.ok) {\n                            return response.arrayBuffer();\n                        }\n                        else if (response.status >= 400) {\n                            CubismLogError(`Failed to load file ${this._modelHomeDir}${expressionFileName}`);\n                            return new ArrayBuffer(0);\n                        }\n                    })\n                        .then(arrayBuffer => {\n                        const motion = this.loadExpression(arrayBuffer, arrayBuffer.byteLength, expressionName);\n                        if (this._expressions.getValue(expressionName) != null) {\n                            ACubismMotion.delete(this._expressions.getValue(expressionName));\n                            this._expressions.setValue(expressionName, null);\n                        }\n                        this._expressions.setValue(expressionName, motion);\n                        this._expressionCount++;\n                        if (this._expressionCount >= count) {\n                            this._state = LoadStep.LoadPhysics;\n                            loadCubismPhysics();\n                        }\n                    });\n                }\n                this._state = LoadStep.WaitLoadExpression;\n            }\n            else {\n                this._state = LoadStep.LoadPhysics;\n                loadCubismPhysics();\n            }\n        };\n        const loadCubismPhysics = () => {\n            if (this._modelSetting.getPhysicsFileName() != '') {\n                const physicsFileName = this._modelSetting.getPhysicsFileName();\n                fetch(`${this._modelHomeDir}${physicsFileName}`)\n                    .then(response => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    else if (response.status >= 400) {\n                        CubismLogError(`Failed to load file ${this._modelHomeDir}${physicsFileName}`);\n                        return new ArrayBuffer(0);\n                    }\n                })\n                    .then(arrayBuffer => {\n                    this.loadPhysics(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = LoadStep.LoadPose;\n                    loadCubismPose();\n                });\n                this._state = LoadStep.WaitLoadPhysics;\n            }\n            else {\n                this._state = LoadStep.LoadPose;\n                loadCubismPose();\n            }\n        };\n        const loadCubismPose = () => {\n            if (this._modelSetting.getPoseFileName() != '') {\n                const poseFileName = this._modelSetting.getPoseFileName();\n                fetch(`${this._modelHomeDir}${poseFileName}`)\n                    .then(response => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    else if (response.status >= 400) {\n                        CubismLogError(`Failed to load file ${this._modelHomeDir}${poseFileName}`);\n                        return new ArrayBuffer(0);\n                    }\n                })\n                    .then(arrayBuffer => {\n                    this.loadPose(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = LoadStep.SetupEyeBlink;\n                    setupEyeBlink();\n                });\n                this._state = LoadStep.WaitLoadPose;\n            }\n            else {\n                this._state = LoadStep.SetupEyeBlink;\n                setupEyeBlink();\n            }\n        };\n        const setupEyeBlink = () => {\n            if (this._modelSetting.getEyeBlinkParameterCount() > 0) {\n                this._eyeBlink = CubismEyeBlink.create(this._modelSetting);\n                this._state = LoadStep.SetupBreath;\n            }\n            setupBreath();\n        };\n        const setupBreath = () => {\n            this._breath = CubismBreath.create();\n            const breathParameters = new csmVector();\n            breathParameters.pushBack(new BreathParameterData(this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5));\n            breathParameters.pushBack(new BreathParameterData(CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBreath), 0.5, 0.5, 3.2345, 1));\n            this._breath.setParameters(breathParameters);\n            this._state = LoadStep.LoadUserData;\n            loadUserData();\n        };\n        const loadUserData = () => {\n            if (this._modelSetting.getUserDataFile() != '') {\n                const userDataFile = this._modelSetting.getUserDataFile();\n                fetch(`${this._modelHomeDir}${userDataFile}`)\n                    .then(response => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    else if (response.status >= 400) {\n                        CubismLogError(`Failed to load file ${this._modelHomeDir}${userDataFile}`);\n                        return new ArrayBuffer(0);\n                    }\n                })\n                    .then(arrayBuffer => {\n                    this.loadUserData(arrayBuffer, arrayBuffer.byteLength);\n                    this._state = LoadStep.SetupEyeBlinkIds;\n                    setupEyeBlinkIds();\n                });\n                this._state = LoadStep.WaitLoadUserData;\n            }\n            else {\n                this._state = LoadStep.SetupEyeBlinkIds;\n                setupEyeBlinkIds();\n            }\n        };\n        const setupEyeBlinkIds = () => {\n            const eyeBlinkIdCount = this._modelSetting.getEyeBlinkParameterCount();\n            for (let i = 0; i < eyeBlinkIdCount; ++i) {\n                this._eyeBlinkIds.pushBack(this._modelSetting.getEyeBlinkParameterId(i));\n            }\n            this._state = LoadStep.SetupLipSyncIds;\n            setupLipSyncIds();\n        };\n        const setupLipSyncIds = () => {\n            const lipSyncIdCount = this._modelSetting.getLipSyncParameterCount();\n            for (let i = 0; i < lipSyncIdCount; ++i) {\n                this._lipSyncIds.pushBack(this._modelSetting.getLipSyncParameterId(i));\n            }\n            this._state = LoadStep.SetupLayout;\n            setupLayout();\n        };\n        const setupLayout = () => {\n            const layout = new csmMap();\n            if (this._modelSetting == null || this._modelMatrix == null) {\n                CubismLogError('Failed to setupLayout().');\n                return;\n            }\n            this._modelSetting.getLayoutMap(layout);\n            this._modelMatrix.setupFromLayout(layout);\n            this._state = LoadStep.LoadMotion;\n            loadCubismMotion();\n        };\n        const loadCubismMotion = () => {\n            this._state = LoadStep.WaitLoadMotion;\n            this._model.saveParameters();\n            this._allMotionCount = 0;\n            this._motionCount = 0;\n            const group = [];\n            const motionGroupCount = this._modelSetting.getMotionGroupCount();\n            for (let i = 0; i < motionGroupCount; i++) {\n                group[i] = this._modelSetting.getMotionGroupName(i);\n                this._allMotionCount += this._modelSetting.getMotionCount(group[i]);\n            }\n            for (let i = 0; i < motionGroupCount; i++) {\n                this.preLoadMotionGroup(group[i]);\n            }\n            if (motionGroupCount == 0) {\n                this._state = LoadStep.LoadTexture;\n                this._motionManager.stopAllMotions();\n                this._updating = false;\n                this._initialized = true;\n                this.createRenderer();\n                this.setupTextures();\n                this.getRenderer().startUp(this._subdelegate.getGlManager().getGl());\n            }\n        };\n    }\n    setupTextures() {\n        const usePremultiply = true;\n        if (this._state == LoadStep.LoadTexture) {\n            const textureCount = this._modelSetting.getTextureCount();\n            for (let modelTextureNumber = 0; modelTextureNumber < textureCount; modelTextureNumber++) {\n                if (this._modelSetting.getTextureFileName(modelTextureNumber) == '') {\n                    console.log('getTextureFileName null');\n                    continue;\n                }\n                let texturePath = this._modelSetting.getTextureFileName(modelTextureNumber);\n                texturePath = this._modelHomeDir + texturePath;\n                const onLoad = (textureInfo) => {\n                    this.getRenderer().bindTexture(modelTextureNumber, textureInfo.id);\n                    this._textureCount++;\n                    if (this._textureCount >= textureCount) {\n                        this._state = LoadStep.CompleteSetup;\n                    }\n                };\n                this._subdelegate\n                    .getTextureManager()\n                    .createTextureFromPngFile(texturePath, usePremultiply, onLoad);\n                this.getRenderer().setIsPremultipliedAlpha(usePremultiply);\n            }\n            this._state = LoadStep.WaitLoadTexture;\n        }\n    }\n    reloadRenderer() {\n        this.deleteRenderer();\n        this.createRenderer();\n        this.setupTextures();\n    }\n    update() {\n        if (this._state != LoadStep.CompleteSetup)\n            return;\n        const deltaTimeSeconds = LAppPal.getDeltaTime();\n        this._userTimeSeconds += deltaTimeSeconds;\n        this._dragManager.update(deltaTimeSeconds);\n        this._dragX = this._dragManager.getX();\n        this._dragY = this._dragManager.getY();\n        let motionUpdated = false;\n        this._model.loadParameters();\n        if (this._motionManager.isFinished()) {\n            this.startRandomMotion(LAppDefine.MotionGroupIdle, LAppDefine.PriorityIdle);\n        }\n        else {\n            motionUpdated = this._motionManager.updateMotion(this._model, deltaTimeSeconds);\n        }\n        this._model.saveParameters();\n        if (!motionUpdated) {\n            if (this._eyeBlink != null) {\n                this._eyeBlink.updateParameters(this._model, deltaTimeSeconds);\n            }\n        }\n        if (this._expressionManager != null) {\n            this._expressionManager.updateMotion(this._model, deltaTimeSeconds);\n        }\n        this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30);\n        this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\n        this._model.addParameterValueById(this._idParamAngleZ, this._dragX * this._dragY * -30);\n        this._model.addParameterValueById(this._idParamBodyAngleX, this._dragX * 10);\n        this._model.addParameterValueById(this._idParamEyeBallX, this._dragX);\n        this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\n        if (this._breath != null) {\n            this._breath.updateParameters(this._model, deltaTimeSeconds);\n        }\n        if (this._physics != null) {\n            this._physics.evaluate(this._model, deltaTimeSeconds);\n        }\n        if (this._lipsync) {\n            let value = 0.0;\n            this._wavFileHandler.update(deltaTimeSeconds);\n            value = this._wavFileHandler.getRms();\n            for (let i = 0; i < this._lipSyncIds.getSize(); ++i) {\n                this._model.addParameterValueById(this._lipSyncIds.at(i), value, 0.8);\n            }\n        }\n        if (this._pose != null) {\n            this._pose.updateParameters(this._model, deltaTimeSeconds);\n        }\n        this._model.update();\n    }\n    startMotion(group, no, priority, onFinishedMotionHandler, onBeganMotionHandler) {\n        if (priority == LAppDefine.PriorityForce) {\n            this._motionManager.setReservePriority(priority);\n        }\n        else if (!this._motionManager.reserveMotion(priority)) {\n            if (this._debugMode) {\n                LAppPal.printMessage(\"[APP]can't start motion.\");\n            }\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        const motionFileName = this._modelSetting.getMotionFileName(group, no);\n        const name = `${group}_${no}`;\n        let motion = this._motions.getValue(name);\n        let autoDelete = false;\n        if (motion == null) {\n            fetch(`${this._modelHomeDir}${motionFileName}`)\n                .then(response => {\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                else if (response.status >= 400) {\n                    CubismLogError(`Failed to load file ${this._modelHomeDir}${motionFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            })\n                .then(arrayBuffer => {\n                motion = this.loadMotion(arrayBuffer, arrayBuffer.byteLength, null, onFinishedMotionHandler, onBeganMotionHandler, this._modelSetting, group, no, this._motionConsistency);\n            });\n            if (motion) {\n                motion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n                autoDelete = true;\n            }\n            else {\n                CubismLogError(\"Can't start motion {0} .\", motionFileName);\n                this._motionManager.setReservePriority(LAppDefine.PriorityNone);\n                return InvalidMotionQueueEntryHandleValue;\n            }\n        }\n        else {\n            motion.setBeganMotionHandler(onBeganMotionHandler);\n            motion.setFinishedMotionHandler(onFinishedMotionHandler);\n        }\n        const voice = this._modelSetting.getMotionSoundFileName(group, no);\n        if (voice.localeCompare('') != 0) {\n            let path = voice;\n            path = this._modelHomeDir + path;\n            this._wavFileHandler.start(path);\n        }\n        if (this._debugMode) {\n            LAppPal.printMessage(`[APP]start motion: [${group}_${no}]`);\n        }\n        return this._motionManager.startMotionPriority(motion, autoDelete, priority);\n    }\n    startRandomMotion(group, priority, onFinishedMotionHandler, onBeganMotionHandler) {\n        if (this._modelSetting.getMotionCount(group) == 0) {\n            return InvalidMotionQueueEntryHandleValue;\n        }\n        const no = Math.floor(Math.random() * this._modelSetting.getMotionCount(group));\n        return this.startMotion(group, no, priority, onFinishedMotionHandler, onBeganMotionHandler);\n    }\n    setExpression(expressionId) {\n        const motion = this._expressions.getValue(expressionId);\n        if (this._debugMode) {\n            LAppPal.printMessage(`[APP]expression: [${expressionId}]`);\n        }\n        if (motion != null) {\n            this._expressionManager.startMotion(motion, false);\n        }\n        else {\n            if (this._debugMode) {\n                LAppPal.printMessage(`[APP]expression[${expressionId}] is null`);\n            }\n        }\n    }\n    setRandomExpression() {\n        if (this._expressions.getSize() == 0) {\n            return;\n        }\n        const no = Math.floor(Math.random() * this._expressions.getSize());\n        for (let i = 0; i < this._expressions.getSize(); i++) {\n            if (i == no) {\n                const name = this._expressions._keyValues[i].first;\n                this.setExpression(name);\n                return;\n            }\n        }\n    }\n    motionEventFired(eventValue) {\n        CubismLogInfo('{0} is fired on LAppModel!!', eventValue.s);\n    }\n    hitTest(hitArenaName, x, y) {\n        if (this._opacity < 1) {\n            return false;\n        }\n        const count = this._modelSetting.getHitAreasCount();\n        for (let i = 0; i < count; i++) {\n            if (this._modelSetting.getHitAreaName(i) == hitArenaName) {\n                const drawId = this._modelSetting.getHitAreaId(i);\n                return this.isHit(drawId, x, y);\n            }\n        }\n        return false;\n    }\n    preLoadMotionGroup(group) {\n        for (let i = 0; i < this._modelSetting.getMotionCount(group); i++) {\n            const motionFileName = this._modelSetting.getMotionFileName(group, i);\n            const name = `${group}_${i}`;\n            if (this._debugMode) {\n                LAppPal.printMessage(`[APP]load motion: ${motionFileName} => [${name}]`);\n            }\n            fetch(`${this._modelHomeDir}${motionFileName}`)\n                .then(response => {\n                if (response.ok) {\n                    return response.arrayBuffer();\n                }\n                else if (response.status >= 400) {\n                    CubismLogError(`Failed to load file ${this._modelHomeDir}${motionFileName}`);\n                    return new ArrayBuffer(0);\n                }\n            })\n                .then(arrayBuffer => {\n                const tmpMotion = this.loadMotion(arrayBuffer, arrayBuffer.byteLength, name, null, null, this._modelSetting, group, i, this._motionConsistency);\n                if (tmpMotion != null) {\n                    tmpMotion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\n                    if (this._motions.getValue(name) != null) {\n                        ACubismMotion.delete(this._motions.getValue(name));\n                    }\n                    this._motions.setValue(name, tmpMotion);\n                    this._motionCount++;\n                }\n                else {\n                    this._allMotionCount--;\n                }\n                if (this._motionCount >= this._allMotionCount) {\n                    this._state = LoadStep.LoadTexture;\n                    this._motionManager.stopAllMotions();\n                    this._updating = false;\n                    this._initialized = true;\n                    this.createRenderer();\n                    this.setupTextures();\n                    this.getRenderer().startUp(this._subdelegate.getGlManager().getGl());\n                }\n            });\n        }\n    }\n    releaseMotions() {\n        this._motions.clear();\n    }\n    releaseExpressions() {\n        this._expressions.clear();\n    }\n    doDraw() {\n        if (this._model == null)\n            return;\n        const canvas = this._subdelegate.getCanvas();\n        const viewport = [0, 0, canvas.width, canvas.height];\n        this.getRenderer().setRenderState(this._subdelegate.getFrameBuffer(), viewport);\n        this.getRenderer().drawModel();\n    }\n    draw(matrix) {\n        if (this._model == null) {\n            return;\n        }\n        if (this._state == LoadStep.CompleteSetup) {\n            matrix.multiplyByMatrix(this._modelMatrix);\n            this.getRenderer().setMvpMatrix(matrix);\n            this.doDraw();\n        }\n    }\n    hasMocConsistencyFromFile() {\n        return __awaiter(this, void 0, void 0, function* () {\n            CSM_ASSERT(this._modelSetting.getModelFileName().localeCompare(``));\n            if (this._modelSetting.getModelFileName() != '') {\n                const modelFileName = this._modelSetting.getModelFileName();\n                const response = yield fetch(`${this._modelHomeDir}${modelFileName}`);\n                const arrayBuffer = yield response.arrayBuffer();\n                this._consistency = CubismMoc.hasMocConsistency(arrayBuffer);\n                if (!this._consistency) {\n                    CubismLogInfo('Inconsistent MOC3.');\n                }\n                else {\n                    CubismLogInfo('Consistent MOC3.');\n                }\n                return this._consistency;\n            }\n            else {\n                LAppPal.printMessage('Model data does not exist.');\n            }\n        });\n    }\n    setSubdelegate(subdelegate) {\n        this._subdelegate = subdelegate;\n    }\n    constructor() {\n        super();\n        this._modelSetting = null;\n        this._modelHomeDir = null;\n        this._userTimeSeconds = 0.0;\n        this._eyeBlinkIds = new csmVector();\n        this._lipSyncIds = new csmVector();\n        this._motions = new csmMap();\n        this._expressions = new csmMap();\n        this._hitArea = new csmVector();\n        this._userArea = new csmVector();\n        this._idParamAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleX);\n        this._idParamAngleY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleY);\n        this._idParamAngleZ = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleZ);\n        this._idParamEyeBallX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallX);\n        this._idParamEyeBallY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallY);\n        this._idParamBodyAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBodyAngleX);\n        if (LAppDefine.MOCConsistencyValidationEnable) {\n            this._mocConsistency = true;\n        }\n        if (LAppDefine.MotionConsistencyValidationEnable) {\n            this._motionConsistency = true;\n        }\n        this._state = LoadStep.LoadAssets;\n        this._expressionCount = 0;\n        this._textureCount = 0;\n        this._motionCount = 0;\n        this._allMotionCount = 0;\n        this._wavFileHandler = new LAppWavFileHandler();\n        this._consistency = false;\n    }\n}\n","import { CubismMatrix44 } from './cubismmatrix44';\nexport class CubismViewMatrix extends CubismMatrix44 {\n    constructor() {\n        super();\n        this._screenLeft = 0.0;\n        this._screenRight = 0.0;\n        this._screenTop = 0.0;\n        this._screenBottom = 0.0;\n        this._maxLeft = 0.0;\n        this._maxRight = 0.0;\n        this._maxTop = 0.0;\n        this._maxBottom = 0.0;\n        this._maxScale = 0.0;\n        this._minScale = 0.0;\n    }\n    adjustTranslate(x, y) {\n        if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\n            x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\n        }\n        if (this._tr[0] * this._maxRight + (this._tr[12] + x) < this._screenRight) {\n            x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\n        }\n        if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\n            y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\n        }\n        if (this._tr[5] * this._maxBottom + (this._tr[13] + y) >\n            this._screenBottom) {\n            y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\n        }\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            x,\n            y,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    adjustScale(cx, cy, scale) {\n        const maxScale = this.getMaxScale();\n        const minScale = this.getMinScale();\n        const targetScale = scale * this._tr[0];\n        if (targetScale < minScale) {\n            if (this._tr[0] > 0.0) {\n                scale = minScale / this._tr[0];\n            }\n        }\n        else if (targetScale > maxScale) {\n            if (this._tr[0] > 0.0) {\n                scale = maxScale / this._tr[0];\n            }\n        }\n        const tr1 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            cx,\n            cy,\n            0.0,\n            1.0\n        ]);\n        const tr2 = new Float32Array([\n            scale,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            scale,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0\n        ]);\n        const tr3 = new Float32Array([\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            -cx,\n            -cy,\n            0.0,\n            1.0\n        ]);\n        CubismMatrix44.multiply(tr3, this._tr, this._tr);\n        CubismMatrix44.multiply(tr2, this._tr, this._tr);\n        CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    setScreenRect(left, right, bottom, top) {\n        this._screenLeft = left;\n        this._screenRight = right;\n        this._screenBottom = bottom;\n        this._screenTop = top;\n    }\n    setMaxScreenRect(left, right, bottom, top) {\n        this._maxLeft = left;\n        this._maxRight = right;\n        this._maxTop = top;\n        this._maxBottom = bottom;\n    }\n    setMaxScale(maxScale) {\n        this._maxScale = maxScale;\n    }\n    setMinScale(minScale) {\n        this._minScale = minScale;\n    }\n    getMaxScale() {\n        return this._maxScale;\n    }\n    getMinScale() {\n        return this._minScale;\n    }\n    isMaxScale() {\n        return this.getScaleX() >= this._maxScale;\n    }\n    isMinScale() {\n        return this.getScaleX() <= this._minScale;\n    }\n    getScreenLeft() {\n        return this._screenLeft;\n    }\n    getScreenRight() {\n        return this._screenRight;\n    }\n    getScreenBottom() {\n        return this._screenBottom;\n    }\n    getScreenTop() {\n        return this._screenTop;\n    }\n    getMaxLeft() {\n        return this._maxLeft;\n    }\n    getMaxRight() {\n        return this._maxRight;\n    }\n    getMaxBottom() {\n        return this._maxBottom;\n    }\n    getMaxTop() {\n        return this._maxTop;\n    }\n}\nimport * as $ from './cubismviewmatrix';\nexport var Live2DCubismFramework;\n(function (Live2DCubismFramework) {\n    Live2DCubismFramework.CubismViewMatrix = $.CubismViewMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\n","import { CubismMatrix44 } from '@framework/math/cubismmatrix44';\nimport { csmVector } from '@framework/type/csmvector';\nimport * as LAppDefine from './lappdefine';\nimport { LAppModel } from './lappmodel';\nimport { LAppPal } from './lapppal';\nexport class LAppLive2DManager {\n    releaseAllModel() {\n        this._models.clear();\n    }\n    onDrag(x, y) {\n        const model = this._models.at(0);\n        if (model) {\n            model.setDragging(x, y);\n        }\n    }\n    onTap(x, y) {\n        if (LAppDefine.DebugLogEnable) {\n            LAppPal.printMessage(`[APP]tap point: {x: ${x.toFixed(2)} y: ${y.toFixed(2)}}`);\n        }\n        const model = this._models.at(0);\n        if (model.hitTest(LAppDefine.HitAreaNameHead, x, y)) {\n            if (LAppDefine.DebugLogEnable) {\n                LAppPal.printMessage(`[APP]hit area: [${LAppDefine.HitAreaNameHead}]`);\n            }\n            model.setRandomExpression();\n        }\n        else if (model.hitTest(LAppDefine.HitAreaNameBody, x, y)) {\n            if (LAppDefine.DebugLogEnable) {\n                LAppPal.printMessage(`[APP]hit area: [${LAppDefine.HitAreaNameBody}]`);\n            }\n            model.startRandomMotion(LAppDefine.MotionGroupTapBody, LAppDefine.PriorityNormal, this.finishedMotion, this.beganMotion);\n        }\n    }\n    onUpdate() {\n        const { width, height } = this._subdelegate.getCanvas();\n        const projection = new CubismMatrix44();\n        const model = this._models.at(0);\n        if (model.getModel()) {\n            if (model.getModel().getCanvasWidth() > 1.0 && width < height) {\n                model.getModelMatrix().setWidth(2.0);\n                projection.scale(1.0, width / height);\n            }\n            else {\n                projection.scale(height / width, 1.0);\n            }\n            if (this._viewMatrix != null) {\n                projection.multiplyByMatrix(this._viewMatrix);\n            }\n        }\n        model.update();\n        model.draw(projection);\n    }\n    nextScene() {\n        const no = (this._sceneIndex + 1) % LAppDefine.ModelDirSize;\n        this.changeScene(no);\n    }\n    changeScene(index) {\n        this._sceneIndex = index;\n        if (LAppDefine.DebugLogEnable) {\n            LAppPal.printMessage(`[APP]model index: ${this._sceneIndex}`);\n        }\n        const model = LAppDefine.ModelDir[index];\n        const modelPath = LAppDefine.ResourcesPath + model + '/';\n        let modelJsonName = LAppDefine.ModelDir[index];\n        modelJsonName += '.model3.json';\n        this.releaseAllModel();\n        const instance = new LAppModel();\n        instance.setSubdelegate(this._subdelegate);\n        instance.loadAssets(modelPath, modelJsonName);\n        this._models.pushBack(instance);\n    }\n    setViewMatrix(m) {\n        for (let i = 0; i < 16; i++) {\n            this._viewMatrix.getArray()[i] = m.getArray()[i];\n        }\n    }\n    addModel(sceneIndex = 0) {\n        this._sceneIndex = sceneIndex;\n        this.changeScene(this._sceneIndex);\n    }\n    constructor() {\n        this.beganMotion = (self) => {\n            LAppPal.printMessage('Motion Began:');\n            console.log(self);\n        };\n        this.finishedMotion = (self) => {\n            LAppPal.printMessage('Motion Finished:');\n            console.log(self);\n        };\n        this._subdelegate = null;\n        this._viewMatrix = new CubismMatrix44();\n        this._models = new csmVector();\n        this._sceneIndex = 0;\n    }\n    release() { }\n    initialize(subdelegate) {\n        this._subdelegate = subdelegate;\n        this.changeScene(this._sceneIndex);\n    }\n}\n","import { csmVector } from '@framework/type/csmvector';\nexport class LAppTextureManager {\n    constructor() {\n        this._textures = new csmVector();\n    }\n    release() {\n        for (let ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\n            this._glManager.getGl().deleteTexture(ite.ptr().id);\n        }\n        this._textures = null;\n    }\n    createTextureFromPngFile(fileName, usePremultiply, callback) {\n        for (let ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\n            if (ite.ptr().fileName == fileName &&\n                ite.ptr().usePremultply == usePremultiply) {\n                ite.ptr().img = new Image();\n                ite\n                    .ptr()\n                    .img.addEventListener('load', () => callback(ite.ptr()), {\n                    passive: true\n                });\n                ite.ptr().img.src = fileName;\n                return;\n            }\n        }\n        const img = new Image();\n        img.addEventListener('load', () => {\n            const tex = this._glManager.getGl().createTexture();\n            this._glManager\n                .getGl()\n                .bindTexture(this._glManager.getGl().TEXTURE_2D, tex);\n            this._glManager\n                .getGl()\n                .texParameteri(this._glManager.getGl().TEXTURE_2D, this._glManager.getGl().TEXTURE_MIN_FILTER, this._glManager.getGl().LINEAR_MIPMAP_LINEAR);\n            this._glManager\n                .getGl()\n                .texParameteri(this._glManager.getGl().TEXTURE_2D, this._glManager.getGl().TEXTURE_MAG_FILTER, this._glManager.getGl().LINEAR);\n            if (usePremultiply) {\n                this._glManager\n                    .getGl()\n                    .pixelStorei(this._glManager.getGl().UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n            }\n            this._glManager\n                .getGl()\n                .texImage2D(this._glManager.getGl().TEXTURE_2D, 0, this._glManager.getGl().RGBA, this._glManager.getGl().RGBA, this._glManager.getGl().UNSIGNED_BYTE, img);\n            this._glManager\n                .getGl()\n                .generateMipmap(this._glManager.getGl().TEXTURE_2D);\n            this._glManager\n                .getGl()\n                .bindTexture(this._glManager.getGl().TEXTURE_2D, null);\n            const textureInfo = new TextureInfo();\n            if (textureInfo != null) {\n                textureInfo.fileName = fileName;\n                textureInfo.width = img.width;\n                textureInfo.height = img.height;\n                textureInfo.id = tex;\n                textureInfo.img = img;\n                textureInfo.usePremultply = usePremultiply;\n                if (this._textures != null) {\n                    this._textures.pushBack(textureInfo);\n                }\n            }\n            callback(textureInfo);\n        }, { passive: true });\n        img.src = fileName;\n    }\n    releaseTextures() {\n        for (let i = 0; i < this._textures.getSize(); i++) {\n            this._glManager.getGl().deleteTexture(this._textures.at(i).id);\n            this._textures.set(i, null);\n        }\n        this._textures.clear();\n    }\n    releaseTextureByTexture(texture) {\n        for (let i = 0; i < this._textures.getSize(); i++) {\n            if (this._textures.at(i).id != texture) {\n                continue;\n            }\n            this._glManager.getGl().deleteTexture(this._textures.at(i).id);\n            this._textures.set(i, null);\n            this._textures.remove(i);\n            break;\n        }\n    }\n    releaseTextureByFilePath(fileName) {\n        for (let i = 0; i < this._textures.getSize(); i++) {\n            if (this._textures.at(i).fileName == fileName) {\n                this._glManager.getGl().deleteTexture(this._textures.at(i).id);\n                this._textures.set(i, null);\n                this._textures.remove(i);\n                break;\n            }\n        }\n    }\n    setGlManager(glManager) {\n        this._glManager = glManager;\n    }\n}\nexport class TextureInfo {\n    constructor() {\n        this.id = null;\n        this.width = 0;\n        this.height = 0;\n    }\n}\n","export class LAppSprite {\n    constructor(x, y, width, height, textureId) {\n        this._rect = new Rect();\n        this._rect.left = x - width * 0.5;\n        this._rect.right = x + width * 0.5;\n        this._rect.up = y + height * 0.5;\n        this._rect.down = y - height * 0.5;\n        this._texture = textureId;\n        this._vertexBuffer = null;\n        this._uvBuffer = null;\n        this._indexBuffer = null;\n        this._positionLocation = null;\n        this._uvLocation = null;\n        this._textureLocation = null;\n        this._positionArray = null;\n        this._uvArray = null;\n        this._indexArray = null;\n        this._firstDraw = true;\n    }\n    release() {\n        this._rect = null;\n        const gl = this._subdelegate.getGlManager().getGl();\n        gl.deleteTexture(this._texture);\n        this._texture = null;\n        gl.deleteBuffer(this._uvBuffer);\n        this._uvBuffer = null;\n        gl.deleteBuffer(this._vertexBuffer);\n        this._vertexBuffer = null;\n        gl.deleteBuffer(this._indexBuffer);\n        this._indexBuffer = null;\n    }\n    getTexture() {\n        return this._texture;\n    }\n    render(programId) {\n        if (this._texture == null) {\n            return;\n        }\n        const gl = this._subdelegate.getGlManager().getGl();\n        if (this._firstDraw) {\n            this._positionLocation = gl.getAttribLocation(programId, 'position');\n            gl.enableVertexAttribArray(this._positionLocation);\n            this._uvLocation = gl.getAttribLocation(programId, 'uv');\n            gl.enableVertexAttribArray(this._uvLocation);\n            this._textureLocation = gl.getUniformLocation(programId, 'texture');\n            gl.uniform1i(this._textureLocation, 0);\n            {\n                this._uvArray = new Float32Array([\n                    1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0\n                ]);\n                this._uvBuffer = gl.createBuffer();\n            }\n            {\n                const maxWidth = this._subdelegate.getCanvas().width;\n                const maxHeight = this._subdelegate.getCanvas().height;\n                this._positionArray = new Float32Array([\n                    (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\n                    (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\n                    (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5),\n                    (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\n                    (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5)\n                ]);\n                this._vertexBuffer = gl.createBuffer();\n            }\n            {\n                this._indexArray = new Uint16Array([0, 1, 2, 3, 2, 0]);\n                this._indexBuffer = gl.createBuffer();\n            }\n            this._firstDraw = false;\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this._uvArray, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(this._uvLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this._positionArray, gl.STATIC_DRAW);\n        gl.vertexAttribPointer(this._positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexArray, gl.DYNAMIC_DRAW);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.drawElements(gl.TRIANGLES, this._indexArray.length, gl.UNSIGNED_SHORT, 0);\n    }\n    isHit(pointX, pointY) {\n        const { height } = this._subdelegate.getCanvas();\n        const y = height - pointY;\n        return (pointX >= this._rect.left &&\n            pointX <= this._rect.right &&\n            y <= this._rect.up &&\n            y >= this._rect.down);\n    }\n    setSubdelegate(subdelegate) {\n        this._subdelegate = subdelegate;\n    }\n}\nexport class Rect {\n}\n","export class TouchManager {\n    constructor() {\n        this._startX = 0.0;\n        this._startY = 0.0;\n        this._lastX = 0.0;\n        this._lastY = 0.0;\n        this._lastX1 = 0.0;\n        this._lastY1 = 0.0;\n        this._lastX2 = 0.0;\n        this._lastY2 = 0.0;\n        this._lastTouchDistance = 0.0;\n        this._deltaX = 0.0;\n        this._deltaY = 0.0;\n        this._scale = 1.0;\n        this._touchSingle = false;\n        this._flipAvailable = false;\n    }\n    getCenterX() {\n        return this._lastX;\n    }\n    getCenterY() {\n        return this._lastY;\n    }\n    getDeltaX() {\n        return this._deltaX;\n    }\n    getDeltaY() {\n        return this._deltaY;\n    }\n    getStartX() {\n        return this._startX;\n    }\n    getStartY() {\n        return this._startY;\n    }\n    getScale() {\n        return this._scale;\n    }\n    getX() {\n        return this._lastX;\n    }\n    getY() {\n        return this._lastY;\n    }\n    getX1() {\n        return this._lastX1;\n    }\n    getY1() {\n        return this._lastY1;\n    }\n    getX2() {\n        return this._lastX2;\n    }\n    getY2() {\n        return this._lastY2;\n    }\n    isSingleTouch() {\n        return this._touchSingle;\n    }\n    isFlickAvailable() {\n        return this._flipAvailable;\n    }\n    disableFlick() {\n        this._flipAvailable = false;\n    }\n    touchesBegan(deviceX, deviceY) {\n        this._lastX = deviceX;\n        this._lastY = deviceY;\n        this._startX = deviceX;\n        this._startY = deviceY;\n        this._lastTouchDistance = -1.0;\n        this._flipAvailable = true;\n        this._touchSingle = true;\n    }\n    touchesMoved(deviceX, deviceY) {\n        this._lastX = deviceX;\n        this._lastY = deviceY;\n        this._lastTouchDistance = -1.0;\n        this._touchSingle = true;\n    }\n    getFlickDistance() {\n        return this.calculateDistance(this._startX, this._startY, this._lastX, this._lastY);\n    }\n    calculateDistance(x1, y1, x2, y2) {\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    }\n    calculateMovingAmount(v1, v2) {\n        if (v1 > 0.0 != v2 > 0.0) {\n            return 0.0;\n        }\n        const sign = v1 > 0.0 ? 1.0 : -1.0;\n        const absoluteValue1 = Math.abs(v1);\n        const absoluteValue2 = Math.abs(v2);\n        return (sign * (absoluteValue1 < absoluteValue2 ? absoluteValue1 : absoluteValue2));\n    }\n}\n","import { CubismMatrix44 } from '@framework/math/cubismmatrix44';\nimport { CubismViewMatrix } from '@framework/math/cubismviewmatrix';\nimport * as LAppDefine from './lappdefine';\nimport { LAppPal } from './lapppal';\nimport { LAppSprite } from './lappsprite';\nimport { TouchManager } from './touchmanager';\nexport class LAppView {\n    constructor() {\n        this._programId = null;\n        this._back = null;\n        this._gear = null;\n        this._touchManager = new TouchManager();\n        this._deviceToScreen = new CubismMatrix44();\n        this._viewMatrix = new CubismViewMatrix();\n    }\n    initialize(subdelegate) {\n        this._subdelegate = subdelegate;\n        const { width, height } = subdelegate.getCanvas();\n        const ratio = width / height;\n        const left = -ratio;\n        const right = ratio;\n        const bottom = LAppDefine.ViewLogicalLeft;\n        const top = LAppDefine.ViewLogicalRight;\n        this._viewMatrix.setScreenRect(left, right, bottom, top);\n        this._viewMatrix.scale(LAppDefine.ViewScale, LAppDefine.ViewScale);\n        this._deviceToScreen.loadIdentity();\n        if (width > height) {\n            const screenW = Math.abs(right - left);\n            this._deviceToScreen.scaleRelative(screenW / width, -screenW / width);\n        }\n        else {\n            const screenH = Math.abs(top - bottom);\n            this._deviceToScreen.scaleRelative(screenH / height, -screenH / height);\n        }\n        this._deviceToScreen.translateRelative(-width * 0.5, -height * 0.5);\n        this._viewMatrix.setMaxScale(LAppDefine.ViewMaxScale);\n        this._viewMatrix.setMinScale(LAppDefine.ViewMinScale);\n        this._viewMatrix.setMaxScreenRect(LAppDefine.ViewLogicalMaxLeft, LAppDefine.ViewLogicalMaxRight, LAppDefine.ViewLogicalMaxBottom, LAppDefine.ViewLogicalMaxTop);\n    }\n    release() {\n        this._viewMatrix = null;\n        this._touchManager = null;\n        this._deviceToScreen = null;\n        this._gear.release();\n        this._gear = null;\n        this._back.release();\n        this._back = null;\n        this._subdelegate.getGlManager().getGl().deleteProgram(this._programId);\n        this._programId = null;\n    }\n    render() {\n        this._subdelegate.getGlManager().getGl().useProgram(this._programId);\n        if (this._back) {\n            this._back.render(this._programId);\n        }\n        if (this._gear) {\n            this._gear.render(this._programId);\n        }\n        this._subdelegate.getGlManager().getGl().flush();\n        const lapplive2dmanager = this._subdelegate.getLive2DManager();\n        if (lapplive2dmanager != null) {\n            lapplive2dmanager.setViewMatrix(this._viewMatrix);\n            lapplive2dmanager.onUpdate();\n        }\n    }\n    initializeSprite() {\n        const width = this._subdelegate.getCanvas().width;\n        const height = this._subdelegate.getCanvas().height;\n        const textureManager = this._subdelegate.getTextureManager();\n        const resourcesPath = LAppDefine.ResourcesPath;\n        let imageName = '';\n        imageName = LAppDefine.BackImageName;\n        const initBackGroundTexture = (textureInfo) => {\n            const x = width * 0.5;\n            const y = height * 0.5;\n            const fwidth = textureInfo.width * 2.0;\n            const fheight = height * 0.95;\n            this._back = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\n            this._back.setSubdelegate(this._subdelegate);\n        };\n        textureManager.createTextureFromPngFile(resourcesPath + imageName, false, initBackGroundTexture);\n        imageName = LAppDefine.GearImageName;\n        const initGearTexture = (textureInfo) => {\n            const x = width - textureInfo.width * 0.5;\n            const y = height - textureInfo.height * 0.5;\n            const fwidth = textureInfo.width;\n            const fheight = textureInfo.height;\n            this._gear = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\n            this._gear.setSubdelegate(this._subdelegate);\n        };\n        textureManager.createTextureFromPngFile(resourcesPath + imageName, false, initGearTexture);\n        if (this._programId == null) {\n            this._programId = this._subdelegate.createShader();\n        }\n    }\n    onTouchesBegan(pointX, pointY) {\n        this._touchManager.touchesBegan(pointX * window.devicePixelRatio, pointY * window.devicePixelRatio);\n    }\n    onTouchesMoved(pointX, pointY) {\n        const posX = pointX * window.devicePixelRatio;\n        const posY = pointY * window.devicePixelRatio;\n        const lapplive2dmanager = this._subdelegate.getLive2DManager();\n        const viewX = this.transformViewX(this._touchManager.getX());\n        const viewY = this.transformViewY(this._touchManager.getY());\n        this._touchManager.touchesMoved(posX, posY);\n        lapplive2dmanager.onDrag(viewX, viewY);\n    }\n    onTouchesEnded(pointX, pointY) {\n        const posX = pointX * window.devicePixelRatio;\n        const posY = pointY * window.devicePixelRatio;\n        const lapplive2dmanager = this._subdelegate.getLive2DManager();\n        lapplive2dmanager.onDrag(0.0, 0.0);\n        const x = this.transformViewX(posX);\n        const y = this.transformViewY(posY);\n        if (LAppDefine.DebugTouchLogEnable) {\n            LAppPal.printMessage(`[APP]touchesEnded x: ${x} y: ${y}`);\n        }\n        lapplive2dmanager.onTap(x, y);\n        if (this._gear.isHit(posX, posY)) {\n            lapplive2dmanager.nextScene();\n        }\n    }\n    transformViewX(deviceX) {\n        const screenX = this._deviceToScreen.transformX(deviceX);\n        return this._viewMatrix.invertTransformX(screenX);\n    }\n    transformViewY(deviceY) {\n        const screenY = this._deviceToScreen.transformY(deviceY);\n        return this._viewMatrix.invertTransformY(screenY);\n    }\n    transformScreenX(deviceX) {\n        return this._deviceToScreen.transformX(deviceX);\n    }\n    transformScreenY(deviceY) {\n        return this._deviceToScreen.transformY(deviceY);\n    }\n}\n","import * as LAppDefine from './lappdefine';\nimport { LAppGlManager } from './lappglmanager';\nimport { LAppLive2DManager } from './lapplive2dmanager';\nimport { LAppPal } from './lapppal';\nimport { LAppTextureManager } from './lapptexturemanager';\nimport { LAppView } from './lappview';\nexport class LAppSubdelegate {\n    constructor() {\n        this._canvas = null;\n        this._glManager = new LAppGlManager();\n        this._textureManager = new LAppTextureManager();\n        this._live2dManager = new LAppLive2DManager();\n        this._view = new LAppView();\n        this._frameBuffer = null;\n        this._captured = false;\n    }\n    release() {\n        this._resizeObserver.unobserve(this._canvas);\n        this._resizeObserver.disconnect();\n        this._resizeObserver = null;\n        this._live2dManager.release();\n        this._live2dManager = null;\n        this._view.release();\n        this._view = null;\n        this._textureManager.release();\n        this._textureManager = null;\n        this._glManager.release();\n        this._glManager = null;\n    }\n    initialize(canvas) {\n        if (!this._glManager.initialize(canvas)) {\n            return false;\n        }\n        this._canvas = canvas;\n        if (LAppDefine.CanvasSize === 'auto') {\n            this.resizeCanvas();\n        }\n        else {\n            canvas.width = LAppDefine.CanvasSize.width;\n            canvas.height = LAppDefine.CanvasSize.height;\n        }\n        this._textureManager.setGlManager(this._glManager);\n        const gl = this._glManager.getGl();\n        if (!this._frameBuffer) {\n            this._frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n        }\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.initialize(this);\n        this._view.initializeSprite();\n        this._live2dManager.initialize(this);\n        this._resizeObserver = new ResizeObserver((entries, observer) => this.resizeObserverCallback.call(this, entries, observer));\n        this._resizeObserver.observe(this._canvas);\n        return true;\n    }\n    onResize() {\n        this.resizeCanvas();\n        this._view.initialize(this);\n        this._view.initializeSprite();\n    }\n    resizeObserverCallback(entries, observer) {\n        if (LAppDefine.CanvasSize === 'auto') {\n            this._needResize = true;\n        }\n    }\n    update() {\n        if (this._glManager.getGl().isContextLost()) {\n            return;\n        }\n        if (this._needResize) {\n            this.onResize();\n            this._needResize = false;\n        }\n        const gl = this._glManager.getGl();\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.clearDepth(1.0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.render();\n    }\n    createShader() {\n        const gl = this._glManager.getGl();\n        const vertexShaderId = gl.createShader(gl.VERTEX_SHADER);\n        if (vertexShaderId == null) {\n            LAppPal.printMessage('failed to create vertexShader');\n            return null;\n        }\n        const vertexShader = 'precision mediump float;' +\n            'attribute vec3 position;' +\n            'attribute vec2 uv;' +\n            'varying vec2 vuv;' +\n            'void main(void)' +\n            '{' +\n            '   gl_Position = vec4(position, 1.0);' +\n            '   vuv = uv;' +\n            '}';\n        gl.shaderSource(vertexShaderId, vertexShader);\n        gl.compileShader(vertexShaderId);\n        const fragmentShaderId = gl.createShader(gl.FRAGMENT_SHADER);\n        if (fragmentShaderId == null) {\n            LAppPal.printMessage('failed to create fragmentShader');\n            return null;\n        }\n        const fragmentShader = 'precision mediump float;' +\n            'varying vec2 vuv;' +\n            'uniform sampler2D texture;' +\n            'void main(void)' +\n            '{' +\n            '   gl_FragColor = texture2D(texture, vuv);' +\n            '}';\n        gl.shaderSource(fragmentShaderId, fragmentShader);\n        gl.compileShader(fragmentShaderId);\n        const programId = gl.createProgram();\n        gl.attachShader(programId, vertexShaderId);\n        gl.attachShader(programId, fragmentShaderId);\n        gl.deleteShader(vertexShaderId);\n        gl.deleteShader(fragmentShaderId);\n        gl.linkProgram(programId);\n        gl.useProgram(programId);\n        return programId;\n    }\n    getTextureManager() {\n        return this._textureManager;\n    }\n    getFrameBuffer() {\n        return this._frameBuffer;\n    }\n    getCanvas() {\n        return this._canvas;\n    }\n    getGlManager() {\n        return this._glManager;\n    }\n    getLive2DManager() {\n        return this._live2dManager;\n    }\n    resizeCanvas() {\n        this._canvas.width = this._canvas.clientWidth * window.devicePixelRatio;\n        this._canvas.height = this._canvas.clientHeight * window.devicePixelRatio;\n        const gl = this._glManager.getGl();\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n    onPointBegan(pageX, pageY) {\n        if (!this._view) {\n            LAppPal.printMessage('view notfound');\n            return;\n        }\n        this._captured = true;\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesBegan(localX, localY);\n    }\n    onPointMoved(pageX, pageY) {\n        if (!this._captured) {\n            return;\n        }\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesMoved(localX, localY);\n    }\n    onPointEnded(pageX, pageY) {\n        this._captured = false;\n        if (!this._view) {\n            LAppPal.printMessage('view notfound');\n            return;\n        }\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesEnded(localX, localY);\n    }\n    onTouchCancel(pageX, pageY) {\n        this._captured = false;\n        if (!this._view) {\n            LAppPal.printMessage('view notfound');\n            return;\n        }\n        const localX = pageX - this._canvas.offsetLeft;\n        const localY = pageY - this._canvas.offsetTop;\n        this._view.onTouchesEnded(localX, localY);\n    }\n    isContextLost() {\n        return this._glManager.getGl().isContextLost();\n    }\n}\n","import { csmVector } from '@framework/type/csmvector';\nimport { CubismFramework, Option } from '@framework/live2dcubismframework';\nimport * as LAppDefine from './lappdefine';\nimport { LAppPal } from './lapppal';\nimport { LAppSubdelegate } from './lappsubdelegate';\nimport { CubismLogError } from '@framework/utils/cubismdebug';\nexport let s_instance = null;\nexport class LAppDelegate {\n    static getInstance() {\n        if (s_instance == null) {\n            s_instance = new LAppDelegate();\n        }\n        return s_instance;\n    }\n    static releaseInstance() {\n        if (s_instance != null) {\n            s_instance.release();\n        }\n        s_instance = null;\n    }\n    onPointerBegan(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onPointBegan(e.pageX, e.pageY);\n        }\n    }\n    onPointerMoved(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onPointMoved(e.pageX, e.pageY);\n        }\n    }\n    onPointerEnded(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onPointEnded(e.pageX, e.pageY);\n        }\n    }\n    onPointerCancel(e) {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().onTouchCancel(e.pageX, e.pageY);\n        }\n    }\n    onResize() {\n        for (let i = 0; i < this._subdelegates.getSize(); i++) {\n            this._subdelegates.at(i).onResize();\n        }\n    }\n    run() {\n        const loop = () => {\n            if (s_instance == null) {\n                return;\n            }\n            LAppPal.updateTime();\n            for (let i = 0; i < this._subdelegates.getSize(); i++) {\n                this._subdelegates.at(i).update();\n            }\n            requestAnimationFrame(loop);\n        };\n        loop();\n    }\n    release() {\n        this.releaseEventListener();\n        this.releaseSubdelegates();\n        CubismFramework.dispose();\n        this._cubismOption = null;\n    }\n    releaseEventListener() {\n        document.removeEventListener('pointerup', this.pointBeganEventListener);\n        this.pointBeganEventListener = null;\n        document.removeEventListener('pointermove', this.pointMovedEventListener);\n        this.pointMovedEventListener = null;\n        document.removeEventListener('pointerdown', this.pointEndedEventListener);\n        this.pointEndedEventListener = null;\n        document.removeEventListener('pointerdown', this.pointCancelEventListener);\n        this.pointCancelEventListener = null;\n    }\n    releaseSubdelegates() {\n        for (let ite = this._subdelegates.begin(); ite.notEqual(this._subdelegates.end()); ite.preIncrement()) {\n            ite.ptr().release();\n        }\n        this._subdelegates.clear();\n        this._subdelegates = null;\n    }\n    initialize() {\n        this.initializeCubism();\n        this.initializeSubdelegates();\n        this.initializeEventListener();\n        return true;\n    }\n    initializeEventListener() {\n        this.pointBeganEventListener = this.onPointerBegan.bind(this);\n        this.pointMovedEventListener = this.onPointerMoved.bind(this);\n        this.pointEndedEventListener = this.onPointerEnded.bind(this);\n        this.pointCancelEventListener = this.onPointerCancel.bind(this);\n        document.addEventListener('pointerdown', this.pointBeganEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointermove', this.pointMovedEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointerup', this.pointEndedEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointercancel', this.pointCancelEventListener, {\n            passive: true\n        });\n    }\n    initializeCubism() {\n        LAppPal.updateTime();\n        this._cubismOption.logFunction = LAppPal.printMessage;\n        this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\n        CubismFramework.startUp(this._cubismOption);\n        CubismFramework.initialize();\n    }\n    initializeSubdelegates() {\n        let width = 100;\n        let height = 100;\n        if (LAppDefine.CanvasNum > 3) {\n            const widthunit = Math.ceil(Math.sqrt(LAppDefine.CanvasNum));\n            const heightUnit = Math.ceil(LAppDefine.CanvasNum / widthunit);\n            width = 100.0 / widthunit;\n            height = 100.0 / heightUnit;\n        }\n        else {\n            width = 100.0 / LAppDefine.CanvasNum;\n        }\n        this._canvases.prepareCapacity(LAppDefine.CanvasNum);\n        this._subdelegates.prepareCapacity(LAppDefine.CanvasNum);\n        for (let i = 0; i < LAppDefine.CanvasNum; i++) {\n            const canvas = document.createElement('canvas');\n            this._canvases.pushBack(canvas);\n            canvas.style.width = `${width}vw`;\n            canvas.style.height = `${height}vh`;\n            document.body.appendChild(canvas);\n        }\n        for (let i = 0; i < this._canvases.getSize(); i++) {\n            const subdelegate = new LAppSubdelegate();\n            subdelegate.initialize(this._canvases.at(i));\n            this._subdelegates.pushBack(subdelegate);\n        }\n        for (let i = 0; i < LAppDefine.CanvasNum; i++) {\n            if (this._subdelegates.at(i).isContextLost()) {\n                CubismLogError(`The context for Canvas at index ${i} was lost, possibly because the acquisition limit for WebGLRenderingContext was reached.`);\n            }\n        }\n    }\n    constructor() {\n        this._cubismOption = new Option();\n        this._subdelegates = new csmVector();\n        this._canvases = new csmVector();\n    }\n}\n","import { LAppDelegate } from '@demo/lappdelegate.js';\nimport { LAppSubdelegate } from '@demo/lappsubdelegate.js';\nimport * as LAppDefine from '@demo/lappdefine.js';\nimport { LAppModel } from '@demo/lappmodel.js';\nimport { LAppPal } from '@demo/lapppal';\nimport logger from '../logger.js';\nLAppPal.printMessage = () => { };\nclass AppSubdelegate extends LAppSubdelegate {\n    initialize(canvas) {\n        if (!this._glManager.initialize(canvas)) {\n            return false;\n        }\n        this._canvas = canvas;\n        if (LAppDefine.CanvasSize === 'auto') {\n            this.resizeCanvas();\n        }\n        else {\n            canvas.width = LAppDefine.CanvasSize.width;\n            canvas.height = LAppDefine.CanvasSize.height;\n        }\n        this._textureManager.setGlManager(this._glManager);\n        const gl = this._glManager.getGl();\n        if (!this._frameBuffer) {\n            this._frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n        }\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.initialize(this);\n        this._view._gear = {\n            render: () => { },\n            isHit: () => { },\n            release: () => { }\n        };\n        this._view._back = {\n            render: () => { },\n            release: () => { }\n        };\n        this._live2dManager._subdelegate = this;\n        this._resizeObserver = new window.ResizeObserver((entries, observer) => this.resizeObserverCallback.call(this, entries, observer));\n        this._resizeObserver.observe(this._canvas);\n        return true;\n    }\n    onResize() {\n        this.resizeCanvas();\n        this._view.initialize(this);\n    }\n    update() {\n        if (this._glManager.getGl().isContextLost()) {\n            return;\n        }\n        if (this._needResize) {\n            this.onResize();\n            this._needResize = false;\n        }\n        const gl = this._glManager.getGl();\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.clearDepth(1.0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        this._view.render();\n    }\n}\nexport class AppDelegate extends LAppDelegate {\n    run() {\n        const loop = () => {\n            LAppPal.updateTime();\n            for (let i = 0; i < this._subdelegates.getSize(); i++) {\n                this._subdelegates.at(i).update();\n            }\n            this._drawFrameId = window.requestAnimationFrame(loop);\n        };\n        loop();\n    }\n    stop() {\n        if (this._drawFrameId) {\n            window.cancelAnimationFrame(this._drawFrameId);\n            this._drawFrameId = null;\n        }\n    }\n    release() {\n        this.stop();\n        this.releaseEventListener();\n        this._subdelegates.clear();\n        this._cubismOption = null;\n    }\n    transformOffset(e) {\n        const subdelegate = this._subdelegates.at(0);\n        const rect = subdelegate.getCanvas().getBoundingClientRect();\n        const localX = e.pageX - rect.left;\n        const localY = e.pageY - rect.top;\n        const posX = localX * window.devicePixelRatio;\n        const posY = localY * window.devicePixelRatio;\n        const x = subdelegate._view.transformViewX(posX);\n        const y = subdelegate._view.transformViewY(posY);\n        return {\n            x, y\n        };\n    }\n    onMouseMove(e) {\n        const lapplive2dmanager = this._subdelegates.at(0).getLive2DManager();\n        const { x, y } = this.transformOffset(e);\n        const model = lapplive2dmanager._models.at(0);\n        lapplive2dmanager.onDrag(x, y);\n        lapplive2dmanager.onTap(x, y);\n        if (model.hitTest(LAppDefine.HitAreaNameBody, x, y)) {\n            window.dispatchEvent(new Event('live2d:hoverbody'));\n        }\n    }\n    onMouseEnd(e) {\n        const lapplive2dmanager = this._subdelegates.at(0).getLive2DManager();\n        const { x, y } = this.transformOffset(e);\n        lapplive2dmanager.onDrag(0.0, 0.0);\n        lapplive2dmanager.onTap(x, y);\n    }\n    onTap(e) {\n        const lapplive2dmanager = this._subdelegates.at(0).getLive2DManager();\n        const { x, y } = this.transformOffset(e);\n        const model = lapplive2dmanager._models.at(0);\n        if (model.hitTest(LAppDefine.HitAreaNameBody, x, y)) {\n            window.dispatchEvent(new Event('live2d:tapbody'));\n        }\n    }\n    initializeEventListener() {\n        this.mouseMoveEventListener = this.onMouseMove.bind(this);\n        this.mouseEndedEventListener = this.onMouseEnd.bind(this);\n        this.tapEventListener = this.onTap.bind(this);\n        document.addEventListener('mousemove', this.mouseMoveEventListener, {\n            passive: true\n        });\n        document.addEventListener('mouseout', this.mouseEndedEventListener, {\n            passive: true\n        });\n        document.addEventListener('pointerdown', this.tapEventListener, {\n            passive: true\n        });\n    }\n    releaseEventListener() {\n        document.removeEventListener('mousemove', this.mouseMoveEventListener, {\n            passive: true\n        });\n        this.mouseMoveEventListener = null;\n        document.removeEventListener('mouseout', this.mouseEndedEventListener, {\n            passive: true\n        });\n        this.mouseEndedEventListener = null;\n        document.removeEventListener('pointerdown', this.tapEventListener, {\n            passive: true\n        });\n    }\n    initializeSubdelegates() {\n        this._canvases.prepareCapacity(LAppDefine.CanvasNum);\n        this._subdelegates.prepareCapacity(LAppDefine.CanvasNum);\n        const canvas = document.getElementById('live2d');\n        this._canvases.pushBack(canvas);\n        canvas.style.width = canvas.width;\n        canvas.style.height = canvas.height;\n        for (let i = 0; i < this._canvases.getSize(); i++) {\n            const subdelegate = new AppSubdelegate();\n            const result = subdelegate.initialize(this._canvases.at(i));\n            if (!result) {\n                logger.error('Failed to initialize AppSubdelegate');\n                return;\n            }\n            this._subdelegates.pushBack(subdelegate);\n        }\n        for (let i = 0; i < LAppDefine.CanvasNum; i++) {\n            if (this._subdelegates.at(i).isContextLost()) {\n                logger.error(`The context for Canvas at index ${i} was lost, possibly because the acquisition limit for WebGLRenderingContext was reached.`);\n            }\n        }\n    }\n    changeModel(modelSettingPath) {\n        const segments = modelSettingPath.split('/');\n        const modelJsonName = segments.pop();\n        const modelPath = segments.join('/') + '/';\n        const live2dManager = this._subdelegates.at(0).getLive2DManager();\n        live2dManager.releaseAllModel();\n        const instance = new LAppModel();\n        instance.setSubdelegate(live2dManager._subdelegate);\n        instance.loadAssets(modelPath, modelJsonName);\n        live2dManager._models.pushBack(instance);\n    }\n    get subdelegates() {\n        return this._subdelegates;\n    }\n}\n"],"names":["csmVector","constructor","initialCapacity","this","_ptr","_capacity","_size","Array","at","index","set","value","get","offset","ret","i","push","pushBack","prepareCapacity","DefaultSize","clear","length","getSize","assign","newSize","resize","updateSize","callPlacementNew","JSON","parse","stringify","sub","splice","insert","position","begin","end","dstSi","_index","srcSi","srcEi","addCount","addSize","_vector","remove","erase","ite","iterator","getOffset","newVector","iterator$1","v","undefined","preIncrement","preDecrement","increment","decrement","ptr","substitution","notEqual","Live2DCubismFramework","CubismBlendMode","$.csmVector","$.iterator","csmString","append","c","s","substr","expansion","getBytes","encodeURIComponent","replace","getLength","isLess","isGreat","isEqual","isEmpty","$.csmString","CubismId","createIdInternal","id","getString","_id","isNotEqual","$.CubismId","CubismIdManager","_ids","release","registerIds","ids","registerId","result","findId","getId","isExist","$.CubismIdManager","CubismMatrix44","_tr","Float32Array","loadIdentity","multiply","a","b","dst","j","k","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","x","y","tr1","translate","translateX","translateY","scaleRelative","scale","multiplyByMatrix","m","clone","cloneMatrix","$.CubismMatrix44","csmRect","w","h","width","height","getCenterX","getCenterY","getRight","getBottom","setRect","r","expand","$.csmRect","CubismRenderer","create","renderer","initialize","model","_model","drawModel","getModel","saveProfile","doDrawModel","restoreProfile","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","g","getModelColor","getModelColorWithOpacity","opacity","modelColorRGBA","isPremultipliedAlpha","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","n","_anisotropy","getAnisotropy","useHighPrecisionMask","high","_useHighPrecisionMask","isUsingHighPrecisionMask","CubismTextureColor","CubismClippingContext","clippingDrawableIndices","clipCount","_clippingIdList","_clippingIdCount","_allClippedDrawRect","_layoutBounds","_clippedDrawableIndexList","_matrixForMask","_matrixForDraw","_bufferIndex","addClippedDrawable","drawableIndex","$.CubismBlendMode","$.CubismRenderer","$.CubismTextureColor","CubismLogPrintIn","level","fmt","args","CubismDebug","print","CubismLogPrint","CSM_ASSERT","expr","console","assert","CubismLogDebug","CubismLogInfo","CubismLogWarning","CubismLogError","LogLevel","LogLevel_Debug","LogLevel_Info","LogLevel_Warning","LogLevel_Error","logLevel","format","CubismFramework","getLoggingLevel","logPrint","coreLogFunction","dumpBytes","data","$.CubismDebug","csmPair","key","first","second","csmMap","size","_keyValues","_dummyValue","appendKey","findIndex","getValue","found","setValue","fitToSize","dumpAsInt","idx","_map","iteold","$.csmMap","$.csmPair","CubismJsonExtension","parseJsonObject","obj","map","Object","keys","forEach","convValue","Boolean","put","JsonBoolean","String","JsonString","Number","JsonFloat","parseJsonArray","JsonMap","JsonNullvalue","arr","JsonArray","add","CSM_JSON_ERROR_TYPE_MISMATCH","Value$2","Value","getRawString","defaultValue","indent","toInt","toFloat","toBoolean","getVector","getMap","getValueByIndex","errorValue","setErrorNotForClientCall","getValueByString","nullValue","getKeys","dummyKeys","isError","isNull","isBool","isFloat","isString","isArray","isMap","equals","isStatic","errorStr","JsonError","staticInitializeNotForClientCall","trueValue","falseValue","staticReleaseNotForClientCall","CubismJson","buffer","_parseCallback","_error","_lineCount","_root","parseBytes","json","delete","instance","getRoot","arrayBufferToString","uint8Array","Uint8Array","str","len","pad","toString","decodeURIComponent","parseCallback","endPos","decodeBuffer","parseValue","strbuf","getParseError","checkEndOfFile","outEndPos","f","o","afterString","strtod","slice","indexOf","parseString","parseArray","parseObject","string","c2","bufStart","localRetEndPos2","ok","FOR_LOOP","FOR_LOOP2","FOR_LOOP3","localRetEndpos2","super","_value","parseFloat","_stringBuffer","parseInt","Math","round","_boolValue","_isStatic","_array","stringBuffer","iter","_keys","endPtr","testC","test","substring","number","isNaN","d","NaN","$.CubismJson","$.JsonArray","$.JsonBoolean","$.JsonError","$.JsonFloat","$.JsonMap","$.JsonNullvalue","$.JsonString","$.Value","s_isStarted","s_isInitialized","s_option","s_cubismIdManager","Constant","freeze","vertexOffset","vertexStep","csmDelete","address","startUp","option","Live2DCubismCore","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","minor","patch","versionNumber","cleanUp","memorySize","Memory","initializeAmountOfMemory","dispose","staticRelease","isStarted","isInitialized","message","csmGetLogFunction","loggingLevel","LogLevel_Off","getIdManager","Option","$.Constant","$.csmDelete","$.CubismFramework","ResourcesPath","ModelDir","ModelDirSize","HitAreaNameHead","HitAreaNameBody","CubismLoggingLevel","LogLevel_Verbose","LAppPal","loadFileAsBytes","filePath","callback","fetch","then","response","arrayBuffer","byteLength","getDeltaTime","deltaTime","updateTime","currentFrame","Date","now","lastFrame","printMessage","log","lastUpdate","LAppGlManager","_gl","canvas","getContext","alert","getGl","CubismDefaultParameterId","HitAreaPrefix","HitAreaHead","HitAreaBody","PartsIdCore","PartsArmPrefix","PartsArmLPrefix","PartsArmRPrefix","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeLOpen","ParamEyeLSmile","ParamEyeROpen","ParamEyeRSmile","ParamEyeBallX","ParamEyeBallY","ParamEyeBallForm","ParamBrowLY","ParamBrowRY","ParamBrowLX","ParamBrowRX","ParamBrowLAngle","ParamBrowRAngle","ParamBrowLForm","ParamBrowRForm","ParamMouthForm","ParamMouthOpenY","ParamCheek","ParamBodyAngleX","ParamBodyAngleY","ParamBodyAngleZ","ParamBreath","ParamArmLA","ParamArmRA","ParamArmLB","ParamArmRB","ParamHandL","ParamHandR","ParamHairFront","ParamHairSide","ParamHairBack","ParamHairFluffy","ParamShoulderY","ParamBustX","ParamBustY","ParamBaseX","ParamBaseY","ParamNONE","FrequestNode","EyeState","$.CubismDefaultParameterId","ICubismModelSetting","$.ICubismModelSetting","CubismModelSettingJson","fileReferences","groups","layout","hitAreas","moc","textures","physics","pose","expressions","motions","userData","name","target","idle","tapBody","pinchIn","pinchOut","shake","flickHead","parameter","soundPath","fadeInTime","fadeOutTime","centerX","centerY","lipSync","eyeBlink","initParameter","initPartsVisible","val","_json","getJson","_jsonValue","getModelFileName","isExistModelFile","FrequestNode_Moc","getTextureCount","isExistTextureFiles","FrequestNode_Textures","getTextureDirectory","pathArray","split","arrayLength","textureDirectoryStr","getTextureFileName","getHitAreasCount","isExistHitAreas","FrequestNode_HitAreas","getHitAreaId","getHitAreaName","getPhysicsFileName","isExistPhysicsFile","FrequestNode_Physics","getPoseFileName","isExistPoseFile","FrequestNode_Pose","getExpressionCount","isExistExpressionFile","FrequestNode_Expressions","getExpressionName","getExpressionFileName","getMotionGroupCount","isExistMotionGroups","FrequestNode_Motions","getMotionGroupName","getMotionCount","groupName","isExistMotionGroupName","getMotionFileName","getMotionSoundFileName","isExistMotionSoundFile","getMotionFadeInTimeValue","isExistMotionFadeIn","getMotionFadeOutTimeValue","isExistMotionFadeOut","getUserDataFile","isExistUserDataFile","getLayoutMap","outLayoutMap","getEyeBlinkParameterCount","isExistEyeBlinkParameters","num","FrequestNode_Groups","refI","getEyeBlinkParameterId","getLipSyncParameterCount","isExistLipSyncParameters","getLipSyncParameterId","node","$.CubismModelSettingJson","$.FrequestNode","CubismBreath","setParameters","breathParameters","_breathParameters","getParameters","updateParameters","deltaTimeSeconds","_currentTime","t","PI","addParameterValueById","parameterId","peak","sin","cycle","weight","BreathParameterData","$.BreathParameterData","$.CubismBreath","CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_userTimeSeconds","_blinkingState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","random","$.CubismEyeBlink","$.EyeState","FadeIn","Link","CubismPose","pose3json","root","_fadeTimeSeconds","poseListInfo","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","linkListInfo","linkCount","linkIndex","linkPart","linkId","link","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","partsIndex","partIndex","paramIndex","parameterIndex","setPartOpacityByIndex","setParameterValueByIndex","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","getParameterValueByIndex","a1","assignment","getParameterIndex","getPartIndex","clonePartData","$.CubismPose","$.PartData","CubismModelMatrix","_width","_height","setHeight","setWidth","scaleX","scaleY","setPosition","setCenterPosition","top","setY","bottom","left","setX","right","setupFromLayout","$.CubismModelMatrix","CubismVector2","vector2","substract","multiplyByScaler","scalar","division","divisionByScalar","sqrt","getDistanceWith","dot","normalize","pow","rhs","$.CubismVector2","CubismMath","range","min","max","cos","abs","cbrt","cx","isNegativeNumber","Infinity","exp","getEasingSine","clamp","degreesToRadian","degrees","radianToDegrees","radian","directionToRadian","from","to","atan2","directionToDegrees","degree","radianToDirection","totalAngle","quadraticEquation","Epsilon","cardanoAlgorithmForBezier","ba","ca","p","p3","q","q2","discriminant","center","threshold","mp3","mp33","cosphi","acos","t1","root1","root2","root3","u1","sd","mod","dividend","divisor","isFinite","warn","absDividend","absDivisor","floor","sign","$.CubismMath","CubismTargetPoint","_faceTargetX","_faceTargetY","_faceX","_faceY","_faceVX","_faceVY","_lastTimeSeconds","update","maxV","deltaTimeWeight","maxA","timeToMaxSpeed","dx","dy","vy","ax","ay","curV","getX","getY","$.CubismTargetPoint","ACubismMotion","motion","setBeganMotionHandler","onBeganMotionHandler","_onBeganMotion","getBeganMotionHandler","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_isLoop","_isLoopFadeIn","_previousLoopState","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","setupMotionQueueEntry","fadeWeight","updateFadeWeight","doUpdateParameters","getEndTime","setIsFinished","setIsStarted","setStartTime","setFadeInStartTime","adjustEndTime","_motion","getFadeInStartTime","setState","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getDuration","getLoopDuration","setOffsetTime","offsetSeconds","setLoop","loop","getLoop","setLoopFadeIn","loopFadeIn","getLoopFadeIn","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","isExistModelOpacity","getModelOpacityIndex","getModelOpacityId","getModelOpacityValue","duration","endTime","getStartTime","setEndTime","$.ACubismMotion","ExpressionKeyParameters","ExpressionKeyBlend","CubismExpressionMotion","expression","_parameters","blendType","ExpressionBlendType","Additive","Multiply","multiplyParameterValueById","Overwrite","calculateExpressionParameters","expressionParameterValues","expressionIndex","_fadeWeight","expressionParameterValue","currentParameterValue","overwriteValue","getParameterValueById","expressionParameters","getExpressionParameters","additiveValue","DefaultAdditiveValue","multiplyValue","DefaultMultiplyValue","calculateValue","newAdditiveValue","newMultiplyValue","newOverwriteValue","getFadeWeight","parameterCount","param","item","ExpressionParameter","source","destination","$.CubismExpressionMotion","$.ExpressionBlendType","$.ExpressionParameter","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","getCubismMotion","$.CubismMotionQueueEntry","CubismMotionQueueManager","_eventCallBack","_eventCustomData","_motions","startMotion","autoDelete","InvalidMotionQueueEntryHandleValue","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntries","getCubismMotionQueueEntry","setEventCallback","customData","doUpdateMotion","updated","firedList","CubismMotionCurveTarget","CubismMotionSegmentType","$.CubismMotionQueueManager","$.InvalidMotionQueueEntryHandleValue","ExpressionParameterValue","CubismExpressionMotionManager","_currentPriority","_reservePriority","_expressionParameterValues","_fadeWeights","getCurrentPriority","getReservePriority","setFadeWeight","expressionFadeWeight","setReservePriority","priority","startMotionPriority","updateMotion","expressionWeight","difference","expressionMotion","$.CubismExpressionMotionManager","CubismMotionPoint","time","CubismMotionSegment","evaluate","basePointIndex","segmentType","CubismMotionCurve","type","CubismMotionCurveTarget_Model","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","curveCount","eventCount","fps","curves","segments","points","events","$.CubismMotionCurve","$.CubismMotionCurveTarget","$.CubismMotionData","$.CubismMotionEvent","$.CubismMotionPoint","$.CubismMotionSegment","$.CubismMotionSegmentType","Meta","Curves","FadeInTime","FadeOutTime","Segments","UserData","CubismMotionJson","getMotionDuration","isMotionLoop","hasConsistency","actualCurveListSize","actualTotalSegmentCount","actualTotalPointCount","curvePosition","segmentPosition","getMotionCurveSegmentCount","getMotionCurveSegment","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Bezier","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","getMotionCurveCount","getMotionTotalSegmentCount","getMotionTotalPointCount","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","getMotionFps","isExistMotionFadeInTime","isExistMotionFadeOutTime","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","getMotionCurveId","isExistMotionCurveFadeInTime","isExistMotionCurveFadeOutTime","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","segmentIndex","getEventCount","getTotalEventValueSize","getEventTime","userDataIndex","getEventValue","$.CubismMotionJson","IdNameOpacity","lerpPoints","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","isCorrection","curve","totalSegmentCount","pointPosition","endIndex","motionPoint","correctEndPoint","segment","MotionBehavior","CubismPhysicsTargetType","CubismPhysicsSource","CubismMotion","shouldCheckMotionConsistency","_motionData","_sourceFrameRate","_loopDurationSeconds","_modelCurveIdEyeBlink","_modelCurveIdLipSync","_modelCurveIdOpacity","_motionBehavior","MotionBehavior_V2","timeOffsetSeconds","lipSyncValue","MAX_VALUE","eyeBlinkValue","maxTargetSize","lipSyncFlags","eyeBlinkFlags","_eyeBlinkParameterIds","_lipSyncParameterIds","tmpFadeIn","tmpFadeOut","_modelOpacity","setModelOapcity","CubismMotionCurveTarget_Parameter","sourceValue","isRepeat","getParameterRepeatValue","fin","fout","CubismMotionCurveTarget_PartOpacity","updateForNextLoop","_lastWeight","setIsLoop","isLoop","setIsLoopFadeIn","isLoopFadeIn","setMotionBehavior","motionBehavior","getMotionBehavior","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","_debugMode","MotionBehavior_V1","motionJson","areBeziersRestructed","totalPointCount","userdatacount","u","localeCompare","setDebugMode","debugMode","$.CubismMotion","CubismMotionManager","reserveMotion","$.CubismMotionManager","PhysicsJsonEffectiveForces","gravity","wind","CubismPhysicsParameter","CubismPhysicsNormalization","CubismPhysicsParticle","initialPosition","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","$.CubismPhysicsInput","$.CubismPhysicsNormalization","$.CubismPhysicsOutput","$.CubismPhysicsParameter","$.CubismPhysicsParticle","$.CubismPhysicsRig","$.CubismPhysicsSource","$.CubismPhysicsSubRig","$.CubismPhysicsTargetType","$.PhysicsJsonEffectiveForces","Position","Angle","Type","EffectiveForces","Gravity","Wind","PhysicsSettings","Normalization","Minimum","Maximum","Default","Reflect","Weight","Input","Output","Vertices","CubismPhysicsJson","getGravity","getWind","getFps","getSubRigCount","getTotalInputCount","getTotalOutputCount","getVertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","getNormalizationPositionMaximumValue","getNormalizationPositionDefaultValue","getNormalizationAngleMinimumValue","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","getInputWeight","inputIndex","getInputReflect","getInputType","getInputSourceId","getOutputCount","getOutputVertexIndex","outputIndex","getOutputAngleScale","getOutputWeight","getOutputDestinationId","getOutputType","getOutputReflect","getParticleCount","getParticleMobility","vertexIndex","getParticleDelay","getParticleAcceleration","getParticleRadius","getParticlePosition","$.CubismPhysicsJson","PhysicsTypeTagAngle","CubismPhysics","_physicsRig","physicsJson","subRigCount","_currentRigOutputs","_previousRigOutputs","particleIndex","minimum","maximum","defalut","inputCount","baseInputIndex","sourceParameterIndex","reflect","CubismPhysicsSource_X","getNormalizedParameterValue","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","outputCount","baseOutputIndex","currentRigOutput","PhysicsOutput","previousRigOutput","destinationParameterIndex","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particleCount","baseParticleIndex","mobility","delay","acceleration","radius","stabilization","_a","_b","_c","_d","radAngle","outputValue","totalTranslation","currentSetting","currentInputs","currentOutputs","currentParticles","parameterValues","parameters","values","parameterMaximumValues","maximumValues","parameterMinimumValues","minimumValues","parameterDefaultValues","defaultValues","_parameterCaches","getParameterCount","_parameterInputCaches","settingIndex","angle","updateParticlesForStabilization","_options","translation","outParameterCaches","prototype","subarray","updateOutputParameterValue","outParamIndex","physicsDeltaTime","_currentRemainTime","inputWeight","updateParticles","interpolate","outParameterValues","setOptions","options","getOption","Options","strand","targetTranslation","targetAngle","parameterMinimumValue","parameterMaximumValue","parameterDefaultValue","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getDefaultValue","maxValue","minValue","getRangeValue","strandCount","windDirection","thresholdValue","airResistance","direction","newDirection","totalRadian","currentGravity","parameterValueMinimum","parameterValueMaximum","output","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","pLength","$.CubismPhysics","$.Options","CubismClippingManager","clippingContextFactory","_renderTextureCount","_clippingMaskBufferSize","_clippingContextListForMask","_clippingContextListForDraw","_channelColors","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","_clippingContexttConstructor","tmp","_clearedFrameBufferFlags","renderTextureCount","getDrawableCount","getDrawableMaskCounts","clippingContext","findSameClip","getDrawableMasks","drawableMasks","drawableMaskCounts","count","sameCount","clipId","setupMatrixForHighPrecision","isRightHanded","usingClipCount","clipIndex","cc","calcClippedDrawTotalBounds","_isUsing","setupLayoutBounds","clipContext","allClippedDrawRect","layoutBoundsOnTex01","margin","ppu","getPixelsPerUnit","maskPixelSize","getClippingManager","getClippingMaskBufferSize","physicalMaskWidth","physicalMaskHeight","createMatrixForMask","useClippingMaskMaxCount","_layoutChannelIndex","layoutCountMaxValue","countPerSheetDiv","reduceLayoutTextureCount","ceil","divCount","modCount","curClipIndex","renderTextureIndex","channelIndex","layoutCount","xpos","ypos","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","clippedDrawableIndex","drawableVertexCount","getDrawableVertexCount","drawableVertexes","getDrawableVertices","minX","minY","maxX","maxY","pi","getClippingContextListForDraw","getRenderTextureCount","getChannelFlagAsColor","channelNo","setClippingMaskBufferSize","s_instance","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgramForDraw","srcColor","dstColor","srcAlpha","dstAlpha","generateShaders","masked","getClippingContextBufferForDraw","invertedMask","getDrawableInvertedMaskBit","shaderSet","getDrawableBlendMode","CubismBlendMode_Normal","ShaderNames","ShaderNames_NormalPremultipliedAlpha","gl","ONE","ONE_MINUS_SRC_ALPHA","CubismBlendMode_Additive","ShaderNames_AddPremultipliedAlpha","ZERO","CubismBlendMode_Multiplicative","ShaderNames_MultPremultipliedAlpha","DST_COLOR","useProgram","shaderProgram","_bufferData","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","vertexArray","bufferData","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","uvArray","getDrawableVertexUvs","attributeTexCoordLocation","activeTexture","TEXTURE1","tex","getColorBuffer","bindTexture","TEXTURE_2D","uniform1i","samplerTexture1Location","uniformMatrix4fv","uniformClipMatrixLocation","colorChannel","uniform4f","uniformChannelFlagLocation","textureNo","getDrawableTextureIndex","textureId","getBindedTextures","TEXTURE0","samplerTexture0Location","matrix4x4","uniformMatrixLocation","baseColor","getDrawableOpacity","multiplyColor","getMultiplyColor","screenColor","getScreenColor","uniformBaseColorLocation","uniformMultiplyColorLocation","uniformScreenColorLocation","indexArray","getDrawableVertexIndices","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","setupShaderProgramForMask","ShaderNames_SetupMask","getClippingContextBufferForMask","rect","ONE_MINUS_SRC_COLOR","deleteProgram","CubismShaderSet","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","setGl","CubismShaderManager_WebGL","getInstance","deleteInstance","_shaderMap","getShader","setGlContext","s_viewport","s_fbo","$.CubismShaderSet","$.CubismShader_WebGL","$.CubismShaderManager_WebGL","$.ShaderNames","CubismClippingManager_WebGL","getMaskRenderTexture","_maskTexture","frameNo","_currentFrameNo","_maskRenderTextures","_maskColorBuffers","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","CubismClippingContext_WebGL","setupClippingContext","viewport","_currentMaskRenderTexture","preDraw","allClipedDrawRect","clipContextRenderTexture","clipDrawCount","clipDrawIndex","getDrawableDynamicFlagVertexPositionsDidChange","getDrawableCulling","clearColor","COLOR_BUFFER_BIT","setClippingContextBufferForMask","drawMeshWebGL","getClippingMaskCount","texture","manager","_owner","CubismRendererProfile_WebGL","setGlEnable","enabled","disable","setGlEnableVertexAttribArray","disableVertexAttribArray","save","_lastArrayBufferBinding","getParameter","ARRAY_BUFFER_BINDING","_lastElementArrayBufferBinding","ELEMENT_ARRAY_BUFFER_BINDING","_lastProgram","CURRENT_PROGRAM","_lastActiveTexture","ACTIVE_TEXTURE","_lastTexture1Binding2D","TEXTURE_BINDING_2D","_lastTexture0Binding2D","_lastVertexAttribArrayEnabled","getVertexAttrib","VERTEX_ATTRIB_ARRAY_ENABLED","_lastScissorTest","isEnabled","SCISSOR_TEST","_lastStencilTest","STENCIL_TEST","_lastDepthTest","DEPTH_TEST","_lastCullFace","CULL_FACE","_lastBlend","BLEND","_lastFrontFace","FRONT_FACE","_lastColorMask","COLOR_WRITEMASK","_lastBlending","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","_lastFBO","FRAMEBUFFER_BINDING","_lastViewport","VIEWPORT","restore","frontFace","colorMask","CubismRenderer_WebGL","maskBufferCount","isUsingMasking","_clippingManager","_sortedDrawableIndexList","modelTextureNo","glTexture","_textures","_clippingContextBufferForMask","_clippingContextBufferForDraw","_rendererProfile","firstDraw","WebGLBuffer","deleteBuffer","drawableCount","renderOrder","getDrawableRenderOrders","order","getDrawableDynamicFlagIsVisible","setClippingContextBufferForDraw","CCW","isGeneratingMask","indexCount","getDrawableVertexIndexCount","drawElements","TRIANGLES","UNSIGNED_SHORT","doStaticRelease","setRenderState","fbo","CW","_extension","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","clip","getExtension","$.CubismClippingContext_WebGL","$.CubismClippingManager_WebGL","$.CubismRenderTextureResource","$.CubismRenderer_WebGL","ParameterRepeatData","isOverridden","isParameterRepeated","DrawableColorData","color","isOverwritten","PartColorData","DrawableCullingData","CubismModel","drawables","resetDynamicFlags","canvasinfo","PixelsPerUnit","getCanvasWidth","CanvasWidth","getCanvasHeight","CanvasHeight","saveParameters","savedParameterCount","_savedParameters","_parameterValues","getOverrideFlagForModelMultiplyColors","getOverrideFlagForDrawableMultiplyColors","_userMultiplyColors","getDrawableMultiplyColor","getOverrideFlagForModelScreenColors","getOverrideFlagForDrawableScreenColors","_userScreenColors","getDrawableScreenColor","setMultiplyColorByTextureColor","setMultiplyColorByRGBA","setScreenColorByTextureColor","setScreenColorByRGBA","getPartMultiplyColor","_userPartMultiplyColors","getPartScreenColor","_userPartScreenColors","setPartColor","partColors","drawableColors","_partChildDrawables","setPartMultiplyColorByTextureColor","setPartMultiplyColorByRGBA","setPartScreenColorByTextureColor","setPartScreenColorByRGBA","getOverrideFlagForModelParameterRepeat","_isOverriddenParameterRepeat","setOverrideFlagForModelParameterRepeat","getOverrideFlagForParameterRepeat","_userParameterRepeatDataList","setOverrideFlagForParameterRepeat","getRepeatFlagForParameterRepeat","setRepeatFlagForParameterRepeat","getOverwriteFlagForModelMultiplyColors","_isOverriddenModelMultiplyColors","getOverwriteFlagForModelScreenColors","_isOverriddenModelScreenColors","setOverwriteFlagForModelMultiplyColors","setOverrideFlagForModelMultiplyColors","setOverwriteFlagForModelScreenColors","setOverrideFlagForModelScreenColors","getOverwriteFlagForDrawableMultiplyColors","drawableindex","getOverwriteFlagForDrawableScreenColors","setOverwriteFlagForDrawableMultiplyColors","setOverrideFlagForDrawableMultiplyColors","setOverwriteFlagForDrawableScreenColors","setOverrideFlagForDrawableScreenColors","getOverwriteColorForPartMultiplyColors","getOverrideColorForPartMultiplyColors","getOverwriteColorForPartScreenColors","getOverrideColorForPartScreenColors","setOverwriteColorForPartColors","setOverrideColorForPartColors","setOverwriteColorForPartMultiplyColors","setOverrideColorForPartMultiplyColors","setOverwriteColorForPartScreenColors","setOverrideColorForPartScreenColors","getOverrideFlagForModelCullings","getOverrideFlagForDrawableCullings","_userCullings","constantFlags","Utils","hasIsDoubleSidedBit","setDrawableCulling","getOverwriteFlagForModelCullings","_isOverriddenCullings","setOverwriteFlagForModelCullings","isOverriddenCullings","setOverrideFlagForModelCullings","getOverwriteFlagForDrawableCullings","setOverwriteFlagForDrawableCullings","setOverrideFlagForDrawableCullings","getModelOapcity","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartId","getPartCount","getPartParentPartIndices","parentIndices","_partOpacities","setPartOpacityById","getPartOpacityById","_notExistParameterId","_notExistParameterValues","getParameterType","types","getParameterMaximumValue","getParameterMinimumValue","getParameterDefaultValue","getParameterId","getParameterClampValue","addParameterValueByIndex","repeats","valueSize","overValue","getParameterRepeats","multiplyParameterValueByIndex","getDrawableIndex","drawableId","_drawableIds","getDrawableId","renderOrders","getDrawableTextureIndices","textureIndices","dynamicFlags","hasVertexPositionsDidChangeBit","indexCounts","vertexCounts","getDrawableVertexPositions","indices","vertexPositions","vertexUvs","opacities","multiplyColors","screenColors","getDrawableParentPartIndex","parentPartIndices","hasBlendAdditiveBit","hasBlendMultiplicativeBit","hasIsInvertedMaskBit","masks","maskCounts","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","getDrawableDynamicFlagBlendColorDidChange","hasBlendColorDidChangeBit","loadParameters","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","userCulling","userMultiplyColor","userScreenColor","parentIndex","$.CubismModel","CubismMoc","mocBytes","shouldCheckMocConsistency","cubismMoc","hasMocConsistency","Moc","fromArrayBuffer","_mocVersion","csmGetMocVersion","_moc","_release","createModel","cubismModel","Model","fromMoc","_modelCount","deleteModel","getLatestMocVersion","csmGetLatestMocVersion","getMocVersion","$.CubismMoc","CubismModelUserDataJson","getUserDataCount","getTotalUserDataSize","getUserDataTargetType","getUserDataId","getUserDataValue","$.CubismModelUserDataJson","CubismModelUserDataNode","CubismModelUserData","parseUserData","modelUserData","getArtMeshUserDatas","_artMeshUserDataNode","typeOfArtMesh","nodeCount","addNode","targetId","_userDataNodes","$.CubismModelUserData","$.CubismModelUserDataNode","CubismUserModel","_initialized","setInitialized","isUpdating","_updating","setUpdating","setDragging","_dragManager","setAcceleration","z","_accelerationX","_accelerationY","_accelerationZ","getModelMatrix","_modelMatrix","setOpacity","_opacity","getOpacity","loadModel","loadMotion","group","loadExpression","loadPose","_pose","loadUserData","_modelUserData","loadPhysics","_physics","isHit","pointX","pointY","drawIndex","vertices","tx","ty","getRenderer","_renderer","createRenderer","deleteRenderer","motionEventFired","eventValue","cubismDefaultMotionEventCallback","caller","_motionManager","_expressionManager","_eyeBlink","_breath","_lipsync","_lastLipSyncValue","_dragX","_dragY","_mocConsistency","$.CubismUserModel","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","apply","LAppWavFileHandler","releaseInstance","goalOffset","rms","_pcmData","_sampleOffset","_wavFileInfo","_samplesPerChannel","_lastRms","_samplingRate","channelCount","_numberOfChannels","sampleCount","pcm","start","loadWavFile","getRms","resolveValue","releasePcmData","asyncFileLoad","responce","_byteReader","_fileByte","_fileDataView","DataView","_fileSize","_readOffset","_fileName","getCheckSignature","Error","get32LittleEndian","fmtChunkSize","get16LittleEndian","_bitsPerSample","dataChunkSize","getPcmSample","pcm32","get8","get24LittleEndian","getPcmDataChannel","usechannel","getWavSamplingRate","loadFiletoBytes","WavFileInfo","ByteReader","getUint8","reference","getSignature","referenceString","TextEncoder","encode","signatureOffset","LoadStep","LAppModel","loadAssets","dir","fileName","_modelHomeDir","setting","_state","LoadModel","setupModel","catch","error","_modelSetting","modelFileName","status","ArrayBuffer","LoadExpression","loadCubismExpression","WaitLoadModel","expressionName","expressionFileName","_expressions","_expressionCount","LoadPhysics","loadCubismPhysics","WaitLoadExpression","physicsFileName","LoadPose","loadCubismPose","WaitLoadPhysics","poseFileName","SetupEyeBlink","setupEyeBlink","WaitLoadPose","SetupBreath","setupBreath","_idParamAngleX","_idParamAngleY","_idParamAngleZ","_idParamBodyAngleX","LoadUserData","userDataFile","SetupEyeBlinkIds","setupEyeBlinkIds","WaitLoadUserData","eyeBlinkIdCount","_eyeBlinkIds","SetupLipSyncIds","setupLipSyncIds","lipSyncIdCount","_lipSyncIds","SetupLayout","setupLayout","LoadMotion","loadCubismMotion","WaitLoadMotion","_allMotionCount","_motionCount","motionGroupCount","preLoadMotionGroup","LoadTexture","setupTextures","_subdelegate","getGlManager","usePremultiply","textureCount","modelTextureNumber","texturePath","onLoad","textureInfo","_textureCount","CompleteSetup","getTextureManager","createTextureFromPngFile","WaitLoadTexture","reloadRenderer","motionUpdated","startRandomMotion","_idParamEyeBallX","_idParamEyeBallY","_wavFileHandler","no","motionFileName","_motionConsistency","voice","path","setExpression","expressionId","setRandomExpression","hitTest","hitArenaName","drawId","tmpMotion","releaseMotions","releaseExpressions","doDraw","getCanvas","getFrameBuffer","draw","matrix","hasMocConsistencyFromFile","_consistency","setSubdelegate","subdelegate","_hitArea","_userArea","LoadAssets","LAppLive2DManager","releaseAllModel","_models","onDrag","onTap","toFixed","LAppDefine.HitAreaNameHead","LAppDefine.HitAreaNameBody","finishedMotion","beganMotion","onUpdate","projection","_viewMatrix","nextScene","_sceneIndex","LAppDefine.ModelDirSize","changeScene","modelPath","LAppDefine.ResourcesPath","LAppDefine.ModelDir","modelJsonName","setViewMatrix","addModel","sceneIndex","self","LAppTextureManager","_glManager","deleteTexture","usePremultply","img","Image","addEventListener","passive","LINEAR_MIPMAP_LINEAR","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","generateMipmap","TextureInfo","releaseTextures","releaseTextureByTexture","releaseTextureByFilePath","setGlManager","glManager","CubismViewMatrix","_screenLeft","_screenRight","_screenTop","_screenBottom","_maxLeft","_maxRight","_maxTop","_maxBottom","_maxScale","_minScale","adjustTranslate","adjustScale","cy","maxScale","getMaxScale","minScale","getMinScale","targetScale","tr2","tr3","setScreenRect","setMaxScreenRect","setMaxScale","setMinScale","isMaxScale","isMinScale","getScreenLeft","getScreenRight","getScreenBottom","getScreenTop","getMaxLeft","getMaxRight","getMaxBottom","getMaxTop","$.CubismViewMatrix","LAppSprite","_rect","Rect","up","down","_texture","_vertexBuffer","_uvBuffer","_indexBuffer","_positionLocation","_uvLocation","_textureLocation","_positionArray","_uvArray","_indexArray","_firstDraw","getTexture","render","programId","maxWidth","maxHeight","Uint16Array","STATIC_DRAW","TouchManager","_startX","_startY","_lastX","_lastY","_lastX1","_lastY1","_lastX2","_lastY2","_lastTouchDistance","_deltaX","_deltaY","_scale","_touchSingle","_flipAvailable","getDeltaX","getDeltaY","getStartX","getStartY","getX1","getY1","getX2","getY2","isSingleTouch","isFlickAvailable","disableFlick","touchesBegan","deviceX","deviceY","touchesMoved","getFlickDistance","calculateDistance","y1","y2","calculateMovingAmount","v1","v2","absoluteValue1","absoluteValue2","LAppView","_programId","_back","_gear","_touchManager","_deviceToScreen","ratio","screenW","screenH","flush","lapplive2dmanager","getLive2DManager","initializeSprite","textureManager","resourcesPath","imageName","fwidth","fheight","onTouchesBegan","window","devicePixelRatio","onTouchesMoved","posX","posY","viewX","transformViewX","viewY","transformViewY","onTouchesEnded","screenX","screenY","transformScreenX","transformScreenY","LAppSubdelegate","_canvas","_textureManager","_live2dManager","_view","_frameBuffer","_captured","_resizeObserver","unobserve","disconnect","resizeCanvas","blendFunc","SRC_ALPHA","ResizeObserver","entries","observer","resizeObserverCallback","call","observe","onResize","_needResize","isContextLost","depthFunc","LEQUAL","DEPTH_BUFFER_BIT","clearDepth","vertexShaderId","fragmentShaderId","clientWidth","clientHeight","drawingBufferWidth","drawingBufferHeight","onPointBegan","pageX","pageY","localX","offsetLeft","localY","offsetTop","onPointMoved","onPointEnded","onTouchCancel","LAppDelegate","onPointerBegan","_subdelegates","onPointerMoved","onPointerEnded","onPointerCancel","run","requestAnimationFrame","releaseEventListener","releaseSubdelegates","_cubismOption","document","removeEventListener","pointBeganEventListener","pointMovedEventListener","pointEndedEventListener","pointCancelEventListener","initializeCubism","initializeSubdelegates","initializeEventListener","bind","LAppDefine.CubismLoggingLevel","_canvases","createElement","style","body","appendChild","AppSubdelegate","AppDelegate","_drawFrameId","stop","cancelAnimationFrame","transformOffset","getBoundingClientRect","onMouseMove","dispatchEvent","Event","onMouseEnd","mouseMoveEventListener","mouseEndedEventListener","tapEventListener","getElementById","logger","changeModel","modelSettingPath","pop","join","live2dManager","subdelegates"],"mappings":"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"}